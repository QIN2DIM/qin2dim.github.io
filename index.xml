<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Echosec @QIN2DIM</title><link>https://blog.echosec.top/</link><description>Recent content on Echosec @QIN2DIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 19 Nov 2022 17:56:01 +0800</lastBuildDate><atom:link href="https://blog.echosec.top/index.xml" rel="self" type="application/rss+xml"/><item><title>『Blog』Git Myself</title><link>https://blog.echosec.top/p/git-myself/</link><pubDate>Sat, 19 Nov 2022 17:56:01 +0800</pubDate><guid>https://blog.echosec.top/p/git-myself/</guid><description>&lt;img src="https://blog.echosec.top/p/git-myself/village.jpg" alt="Featured image of post 『Blog』Git Myself" />&lt;h2 id="概念界定">概念界定&lt;/h2>
&lt;h3 id="账号为什么会被标记flagged">账号为什么会被标记（flagged）&lt;/h3>
&lt;p>GitHub 内部实现了一个严格的反机器人/反滥用监测系统，这是一套标准化的风控系统，它会自动标记高威胁目标。被封禁的用户会看到 &lt;strong>Your account has been flagged.&lt;/strong> 的标志。&lt;/p>
&lt;p>这套监测系统的实现逻辑处于保密状态，但其监听的行为规则可以大致总结为：&lt;/p>
&lt;ol>
&lt;li>频繁创建 Git 仓库（速率极大，非人类操作）；&lt;/li>
&lt;li>在社区中发表骚扰、辱骂、威胁或煽动性言论，被举报；&lt;/li>
&lt;li>滥用。借助 Actions，Codespaes 等服务发送诈骗/广告/垃圾邮；基于这些基础设施运行的高频次的并行自动化任务，长时间占用公共资源等。&lt;/li>
&lt;li>&lt;strong>访问攻击&lt;/strong>。试图以可能损害 GitHub 网站或服务的方式扰乱或篡改 GitHub 的服务器，通过自动化的方式给 GitHub 服务器带来不必要的负担，进而达到超出授权边界的行为目的。&lt;/li>
&lt;li>冒充任何个人或实体，侵犯第三方隐私。&lt;/li>
&lt;/ol>
&lt;p>大多数误封来自第 3 条，显然「滥用」的边界难以界定。而本文阐述的 GitHub Flag Attack 出自第 4 条规则的反向利用。&lt;/p>
&lt;h3 id="什么是标记攻击">什么是标记攻击&lt;/h3>
&lt;p>GitHub Flag Attack 统称为一系列利用风控规则致使目标账号被针对性封禁的访问攻击，是一种名副其实的「借刀杀人」式网络攻击。&lt;/p>
&lt;p>从正向规则来看，一个机器人被创建后给数千个项目点赞，如果开发者把握不好请求速率和指纹数据的反射频率，这个机器人会被秒封。值得一提的是，这种请求通常是基于 Access Token 的 full-request 而非基于 Playwright 或 Selenium 的网页自动化，所以请求速率非常快，仅受权限上限控制。&lt;/p>
&lt;p>同样的规则可以反向利用，创建数百个机器人，向同一个靶向账号灌入恶意流量，如：follow，star，fork，watch，这些行为是多向的，如：follow 和 unfollow 高频次交替进行，机器人会互赞 fork 下来的仓库等。目标用户通常是 Create/Fork 仓库数几十上百的玩家，这对恶意流量是种利好，可交互对象更多，窗口期更小。短时间内，被攻击账号将收到数万的「点赞」（以及「取消点赞」）的请求，被攻击玩家甚至察觉不到这些异常。标记攻击通常仅需数分钟就可以将目标账号关入小黑屋。&lt;/p>
&lt;p>事发时，我的 GitHub Dashboard 正好停留在主屏上，无意间记录下了这个让我目瞪口呆的过程。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/git-myself/image-20221119200828753.png"
width="1596"
height="1743"
srcset="https://blog.echosec.top/p/git-myself/image-20221119200828753_hua796603dfe6cba41c95165d3eb963010_441870_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/git-myself/image-20221119200828753_hua796603dfe6cba41c95165d3eb963010_441870_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="GitHub Flag Attack"
class="gallery-image"
data-flex-grow="91"
data-flex-basis="219px"
>&lt;/p>
&lt;h3 id="被标记-vs-被停用">被标记 vs 被停用&lt;/h3>
&lt;p>标记通常针对账号，而停用通常针对某个具体的项目仓库。&lt;/p>
&lt;p>账号被标记期间，&lt;strong>除了账号所有者外&lt;/strong>，其他访客无法查看被标记账号的 profile 及其所有的附属域资源，看起来像是这个账号不曾存在一样。此时，账号所有者仍能（或通过 Git）操作账户数据，如 push commit，export account data 等，即，账号所有者仍保留对上游数据的读写权限。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/git-myself/image-20221119200757708.png"
width="680"
height="388"
srcset="https://blog.echosec.top/p/git-myself/image-20221119200757708_hu47b1b43d74c27158c23fb629bc0f68ba_204407_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/git-myself/image-20221119200757708_hu47b1b43d74c27158c23fb629bc0f68ba_204407_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="GitHub 404 Page"
class="gallery-image"
data-flex-grow="175"
data-flex-basis="420px"
>&lt;/p>
&lt;p>某个仓库被停用后，包括账号所有者在内的所有普通用户均无法正常访问仓库地址，仓库页会显示警告 &lt;strong>This repository has been disabled&lt;/strong>。账号所有者彻底失去该项目的控制权，所有下游 fork 分支被一并删除，母仓库的 Releases 被重置到不可访问域。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/git-myself/image-20221119203017574.png"
width="622"
height="228"
srcset="https://blog.echosec.top/p/git-myself/image-20221119203017574_hu2193e7b2c305386b8fe4d37f30966f36_17019_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/git-myself/image-20221119203017574_hu2193e7b2c305386b8fe4d37f30966f36_17019_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221119203017574"
class="gallery-image"
data-flex-grow="272"
data-flex-basis="654px"
>&lt;/p>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>目前，仅能通过联系&lt;a class="link" href="https://support.github.com/contact/account" target="_blank" rel="noopener"
>技术支持&lt;/a>的方式解除账号的标记状态。可供参考的正文内容如下：&lt;/p>
&lt;blockquote>
&lt;p>Hello, Mr. or Ms.
I don’t understand what happened to my account.
Would you tell me what to do now?
Thank you very much for your support.
I don’t know why my account has been flagged.&lt;/p>
&lt;/blockquote>
&lt;p>如果工单积累过多，可能至多要 7 天才能得到首次回复（remote work 的效率是真的低）如果是闲时请求，至少也需要等个半天。这种恶意攻击引发的封禁案例并不少见，技术支持可能还要甄别是否是「有意为之」。&lt;/p>
&lt;h2 id="因果链分析">因果链分析&lt;/h2>
&lt;h3 id="动机分析">动机分析&lt;/h3>
&lt;p>显然，攻击者组织起一批足以扰动 GitHub 风控系统的机器人集群需要不少的时间和金钱开销，若不是出于测试目的，很难想象攻击者会发起无差别攻击。可以认为，这种「恶作剧」是种「报复行为」。可以预见的动机有：恶意竞争，社会工程学攻击，某些群体的嫉妒行为等等。（有待展开&amp;hellip;）&lt;/p>
&lt;h3 id="影响分析">影响分析&lt;/h3>
&lt;p>GitHub Flag Attack 对被攻击对象的影响是不可估计的，必然会间接影响到玩家的现实生活，比如：&lt;/p>
&lt;ol>
&lt;li>部分求职者喜欢在简历或个人宣传页中附上自己的 GitHub Profile 链接；&lt;/li>
&lt;li>部分研究者会在自己的论文预印刊页面以及正刊附件中添加源码实现的索引，而项目仓库八成是放在 GitHub 上的。&lt;/li>
&lt;li>部分玩家依赖 GitHub Pages 部署自己的个人静态站点，如博客站，导航站，在线简历等等。&lt;/li>
&lt;li>部分玩家基于 GitHub Issues 编排日志或周报月刊系统，纪录打卡数据，即使新闻等等。&lt;/li>
&lt;/ol>
&lt;p>账号被标记后，这些链接将被路由至 404 页面。很难想像候选人一通介绍后向 HR 展示一个空页面时会怎样解释；或是审稿人发现（有点恶劣，不敢想）；尽管是个人使用的静态站点，也会造成诸多不便，站长可能需要花费数个小时的时间用于重建镜像仓库、解析 DNS 以及部署 CDN。&lt;/p>
&lt;h2 id="结语及预案">结语及预案&lt;/h2>
&lt;p>我们在工程上设计「预案」时通常会分为「监」「控」两个方面，既要准确捕捉到攻击发起的状态，也要尽可能减少攻击带来的损失。遗憾的是，在本文描述的案例中，似乎很难找到一种完美的权衡，我们不可能做出将所有仓库私有化这种极端的行为；也很难将毫不相干的个人仓库划分到多个组织账号中，这样维护和管理都十分麻烦；尽管是设置其他人不可查看自己的项目列表，攻击者仍可通过 GitHub API 绕过这层限制直接获取目标用户持有的仓库链接，进而发起攻击。&lt;/p>
&lt;p>此外，我们还需注意 GitHub 是一家美国公司，其运营活动受美国法律限制，其品牌形象受美国利益影响。早在俄乌冲突早期，GitHub 就站队乌方，将一大批俄罗斯组织账号及少量的俄罗斯个人开发者账号标记；同样的操作在中东地区开发者账号上也发生过（这也是我支持实名制的国产 Gitee 的主要原因之一，尽管现在仍有许多进步空间）。事出有因，我们不能脱离上下文去批判 GitHub 的这些「制裁措施」，但我想 GitHub 对于大多数中国程序员来说，其存在意义等同于 QQ空间与朋友圈，有太多的大牛在这片交界之地见证自己逐渐成长的过程。&lt;/p>
&lt;p>无论如何，我不希望这份仅属于开发者自己的珍贵回忆最终仅会流向互联网历史归档馆。你也许需要更可靠的 Git 系统， 也许你需要养成良好的备份习惯避免某些珍贵的东西悄然流失，也许你需要一个可靠的备案来保证某些流行项目的可用性。&lt;/p>
&lt;p>回到文章标题「&lt;strong>Git Myself&lt;/strong>」，如何理解它呢？你可以说「守住我的饭碗」也可以是「留住我的影响力」或是「自建 Git Service」。如果你之前没有做过与「舆情」相关的工作，你也许很难作为当事人去想像：朋友圈/QQ空间被永久封禁，百万微博粉丝账号被限流或是呕心沥血数年构建的社区被恶意攻击淹没。这对他们来说，意味着青春记忆的停顿，他们在这里分享自己的小学中学大学，分享生活槽点与职场高光时刻；这对他们来说，是一个打造人设的绝佳平台，是供粉丝亲近自己的机会，是一个见证自己从草根进军娱乐圈的重要盈利工具；这对他们来说，是N多个熬夜通宵敲代码，投入巨额时间成本的满意作品。作为一个遵守 WEB2.0 游戏规则的人，你可能很难想象自己视为珍宝的东西其实是可以被其他人轻易夺走的。&lt;/p>
&lt;p>当然，本文不会去深究这些话题，这些领域知识过于错综复杂（水太深），但无论如何，我希望本文读者都能重视起自己的网络数据，在符合游戏规则的前提下，将属于自己的东西牢牢抓住。&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2></description></item><item><title>『Blog』TUIC 敏捷部署</title><link>https://blog.echosec.top/p/tuic/</link><pubDate>Thu, 10 Nov 2022 07:23:04 +0800</pubDate><guid>https://blog.echosec.top/p/tuic/</guid><description>&lt;img src="https://blog.echosec.top/p/tuic/alexander.jpg" alt="Featured image of post 『Blog』TUIC 敏捷部署" />&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>本文先介绍基于 TUIC 实现的双端代理敏捷部署方案，以 Ubuntu20.04 为例介绍服务端代理架设的步骤，再分别介绍在 Windows（V2RayN/NekoRay），Android（SagerNet/Matsuri） 以及 iOS（Shadowrocket） 启动客户端代理的方案。最后介绍 TUIC 协议的特性、适用场景以及与 Hysteria 协议的区别。&lt;/p>
&lt;p>本文涉及的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>项目名&lt;/th>
&lt;th>发行版本号&lt;/th>
&lt;th>备注&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/EAimTY/tuic" target="_blank" rel="noopener"
>EAimTY/tuic&lt;/a>&lt;/td>
&lt;td>v0.8.5&lt;/td>
&lt;td>双端代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/acmesh-official/acme.sh" target="_blank" rel="noopener"
>acmesh-official/acme.sh&lt;/a>&lt;/td>
&lt;td>v3.0.4&lt;/td>
&lt;td>证书申请&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/2dust/v2rayN" target="_blank" rel="noopener"
>2dust/v2rayN&lt;/a>&lt;/td>
&lt;td>v5.36&lt;/td>
&lt;td>核心承载客户端（Windows）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray" target="_blank" rel="noopener"
>MatsuriDayo/nekoray&lt;/a>&lt;/td>
&lt;td>v2.3&lt;/td>
&lt;td>核心承载客户端（Windows）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/SagerNet/SagerNet" target="_blank" rel="noopener"
>SagerNet/SagerNet&lt;/a>&lt;/td>
&lt;td>v0.8.1-rc03&lt;/td>
&lt;td>核心承载客户端（Android）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri" target="_blank" rel="noopener"
>MatsuriDayo/Matsuri&lt;/a>&lt;/td>
&lt;td>v0.5.2&lt;/td>
&lt;td>暂不支持&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="服务端配置">服务端配置&lt;/h2>
&lt;p>&lt;strong>Step1: 下载预编译的 tuic-server&lt;/strong>&lt;/p>
&lt;p>创建工作目录 &lt;code>/home/tuic/&lt;/code>，拉取预编译的 &lt;a class="link" href="https://github.com/EAimTY/tuic/releases/tag/0.8.5" target="_blank" rel="noopener"
>tuic-server v0.8.5&lt;/a>，安装 &lt;a class="link" href="https://github.com/acmesh-official/acme.sh/releases/tag/3.0.4" target="_blank" rel="noopener"
>ACME&lt;/a>，调整默认 CA &lt;code>letsencrypt&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir --parents /home/tuic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget -O /home/tuic/tuic https://github.com/EAimTY/tuic/releases/download/0.8.5/tuic-server-0.8.5-x86_64-linux-gnu &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod +x /home/tuic/tuic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt install -y socat &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> curl https://get.acme.sh &lt;span class="p">|&lt;/span> sh &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ~/.acme.sh/acme.sh --upgrade --auto-upgrade &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ~/.acme.sh/acme.sh --set-default-ca --server letsencrypt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Step2: 申请证书&lt;/strong>&lt;/p>
&lt;p>申请证书，将证书移至 &lt;code>/home/tuic/&lt;/code> 工作目录。&lt;/p>
&lt;p>一个 A 域名每 170h 最多申请 5 次证书，如果你玩的太花被限制了，开一个新的 A 域名到本机 IPv4 即可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s2">&amp;#34;请输入解析到本机 IPv4 的域名：&amp;#34;&lt;/span> DOMAIN &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ~/.acme.sh/acme.sh --issue -d &lt;span class="nv">$DOMAIN&lt;/span> --standalone --keylength ec-256 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ~/.acme.sh/acme.sh --install-cert --ecc -d &lt;span class="nv">$DOMAIN&lt;/span> --fullchain-file /home/tuic/fullchain.crt --key-file /home/tuic/private.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Step3: 编辑服务配置文件&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /home/tuic/config.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加配置信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16387&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;how-dare-you&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;certificate&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/home/tuic/fullchain.crt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;private_key&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/home/tuic/private.key&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;congestion_controller&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;bbr&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;alpn&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;h3&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Step4: 添加系统服务&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/systemd/system/tuic.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建并编辑配置文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">TUIC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Documentation&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">https://github.com/EAimTY/tuic&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">User&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/home/tuic/tuic -c /home/tuic/config.json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on-failure&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>更新系统服务缓存，允许 &lt;code>tuic service&lt;/code> 开机自启&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl daemon-reload &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> systemctl &lt;span class="nb">enable&lt;/span> tuic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>启动系统服务&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl start tuic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其他常用命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看运行状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl status tuic
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 实时日志&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">journalctl -u tuic --output cat -f
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看服务端配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat /home/tuic/config.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看证书，其中 &amp;#34;~/.acme.sh/acme.sh&amp;#34; 可替换为别名 &amp;#34;acme.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/.acme.sh/acme.sh --info --ecc -d &lt;span class="o">[&lt;/span>YOUR_DOMAIN&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="客户端配置">客户端配置&lt;/h2>
&lt;h3 id="配置模版">配置模版&lt;/h3>
&lt;p>建议在开始配置之前将客户端升级到最新版本。在&lt;a class="link" href="https://github.com/EAimTY/tuic" target="_blank" rel="noopener"
>文档&lt;/a>中未出现的 field 将保持默认设置。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;relay&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;YOUR SERVER DOMAIN&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16387&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;how-dare-you&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;YOUR SERVER IP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;congestion_controller&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;bbr&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;alpn&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;h3&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;reduce_rtt&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;local&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">%socks_port%&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;log_level&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;off&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="nekoray推荐">NekoRay[推荐]&lt;/h3>
&lt;p>如果你是首次使用 NekoRay，可看&lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria/" >这篇文章&lt;/a>以及&lt;a class="link" href="https://matsuridayo.github.io/n-configuration/" target="_blank" rel="noopener"
>官方文档&lt;/a>快速上手。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>下载预编译的 &lt;a class="link" href="https://github.com/EAimTY/tuic/releases" target="_blank" rel="noopener"
>tuic-client(windows-gnu)&lt;/a>，放置到 NekoRay config 目录下。务必下载 client，而不是 server。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>「首选项 - 基本设置 - 核心」添加自定义核心，命名「tuic」，添加 tuic-client 的绝对路径，如果你已将核心放置在 config 目录下，点击「选择」可以直接看见。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110082421257.png"
width="540"
height="576"
srcset="https://blog.echosec.top/p/tuic/image-20221110082421257_hue7abd5b0cd86924ed61d1dfc3291228a_18238_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110082421257_hue7abd5b0cd86924ed61d1dfc3291228a_18238_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="「首选项 - 基本设置 - 核心」"
class="gallery-image"
data-flex-grow="93"
data-flex-basis="225px"
>&lt;/p>
&lt;ol start="3">
&lt;li>在空白处右键「手动输入配置 - 编辑」在「类型」中选择「自定义（其他核心）」，模版配置如下图所示。替换掉占位符 &lt;code>YOUR SERVER DOMAIN&lt;/code>以及 &lt;code>YOUR SERVER IP&lt;/code>。如果你改变了上文给出的服务端口 &lt;code>ip&lt;/code> 以及身份令牌 &lt;code>token&lt;/code>，则此处对照改变即可。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110082853260.png"
width="476"
height="738"
srcset="https://blog.echosec.top/p/tuic/image-20221110082853260_hu108b13457f305462359bea171d2847cb_17809_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110082853260_hu108b13457f305462359bea171d2847cb_17809_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="「手动输入配置 - 编辑 - tuic 代理核心」"
class="gallery-image"
data-flex-grow="64"
data-flex-basis="154px"
>&lt;/p>
&lt;h3 id="v2rayn">V2RayN&lt;/h3>
&lt;ol>
&lt;li>下载预编译的 &lt;a class="link" href="https://github.com/EAimTY/tuic/releases" target="_blank" rel="noopener"
>tuic-client(windows-gnu)&lt;/a>，放置到 V2RayN 工程根目录下。&lt;/li>
&lt;li>添加自定义配置服务器，复制粘贴配置模版，替换掉占位符 &lt;code>YOUR SERVER DOMAIN&lt;/code>以及 &lt;code>YOUR SERVER IP&lt;/code>，修改 local port 为 50001。如果你改变了上文给出的服务端口 &lt;code>ip&lt;/code> 以及身份令牌 &lt;code>token&lt;/code>，则此处对照改变即可。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110085635390.png"
width="920"
height="525"
srcset="https://blog.echosec.top/p/tuic/image-20221110085635390_hu490b8fafa18c1755074671a7770284a6_37771_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110085635390_hu490b8fafa18c1755074671a7770284a6_37771_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="「V2RayN - 自定义配置服务器」"
class="gallery-image"
data-flex-grow="175"
data-flex-basis="420px"
>&lt;/p>
&lt;h3 id="sagernet">SagerNet&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>从 Google Play 下载软件（搜索关键词 SagerNet），或从项目仓库拉取 &lt;a class="link" href="https://github.com/SagerNet/SagerNet/releases/tag/0.8.1-rc03" target="_blank" rel="noopener"
>apk 程序&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>添加服务器配置「手动输入 - TUIC」，对照配置模版填入必要信息：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110103616402.png"
width="1080"
height="2583"
srcset="https://blog.echosec.top/p/tuic/image-20221110103616402_hu72fbec67810d1b9fce6b74e920f1ef80_379680_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110103616402_hu72fbec67810d1b9fce6b74e920f1ef80_379680_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="「SagerNet - 手动添加 TUIC 服务器」"
class="gallery-image"
data-flex-grow="41"
data-flex-basis="100px"
>&lt;/p>
&lt;ol start="3">
&lt;li>首次使用时根据提示下载 SagerNet - TUIC 插件，主流安卓设备选择 arm64-v8a 的版本。参考&lt;a class="link" href="https://blog.echosec.top/p/matsuri-hysteria/" >这篇文章&lt;/a>的软件配置，解除插件和主程序的限制。首先，长按 SagertNet，设置应用信息，提供自启动，联网控制和无限制省电的权限，然后再通过「系统设置 - 应用管理」查找 TUIC Plugin，给予自启动和无限制省电的权限。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110104128245.png"
width="1037"
height="1818"
srcset="https://blog.echosec.top/p/tuic/image-20221110104128245_hu62487ad32fa812ea315ea184d58923a4_233320_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110104128245_hu62487ad32fa812ea315ea184d58923a4_233320_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="57"
data-flex-basis="136px"
>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110104108682.png"
width="887"
height="1818"
srcset="https://blog.echosec.top/p/tuic/image-20221110104108682_hu217a5832f5276278a5b4f5f6a322e282_220634_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110104108682_hu217a5832f5276278a5b4f5f6a322e282_220634_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="48"
data-flex-basis="117px"
>&lt;/p>
&lt;h2 id="网络对比测试">网络对比测试&lt;/h2>
&lt;p>使用 NekoRay 对同一服务器上监听不同端口的代理服务进行对比测试，核心版本及客户端配置如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;relay&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;congestion_controller&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;bbr&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;alpn&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;h3&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;reduce_rtt&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下方对比中，选用来自 &lt;strong>PacificRack&lt;/strong> 提供商的网络环境较有挑战的云服务器，本地带宽 300Mbps，调整 Hysteria &lt;code>down_mbps: 110&lt;/code>，&lt;a class="link" href="https://www.youtube.com/watch?v=1La4QzGeaaQ&amp;amp;ab_channel=Jacob%2BKatieSchwarz" target="_blank" rel="noopener"
>YouTube 4K 视频&lt;/a>，大文件下载速度测试选用 &lt;a class="link" href="https://storage.googleapis.com/openimages/web/download_v7.html#download-manually" target="_blank" rel="noopener"
>Open Images Dataset V7&lt;/a> 的 Boxes 训练集。&lt;/p>
&lt;ul>
&lt;li>Speedtest ：两种协议均能跑满理论上限，微量损耗误差忽略不计。&lt;/li>
&lt;li>YouTube4K：两种协议连接速度均溢出（一般认为连接速度超过 2W Kbps 即可流畅播放）。其中，Hysteria 略有优势，但实测中连接速度不稳定，出现「间接抽风」的情况，波动非常大。&lt;/li>
&lt;li>FileDownload：Hysteria 下载速度接近&lt;code>down_mbps&lt;/code>理论上限，而 TUIC 的下载速度则稳定在 3~5 MB/s。&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>来源/协议&lt;/th>
&lt;th>TUIC&lt;/th>
&lt;th>Hysteria&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Speedtest&lt;/strong>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/13920026472.png"
width="750"
height="400"
srcset="https://blog.echosec.top/p/tuic/13920026472_hu2dc2fd2d3ad3309adccde7fd04596d9e_52826_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/13920026472_hu2dc2fd2d3ad3309adccde7fd04596d9e_52826_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="img"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="450px"
>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/13919999266.png"
width="750"
height="400"
srcset="https://blog.echosec.top/p/tuic/13919999266_hub18e768a60167d6c2eda971ea2aceea2_50628_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/13919999266_hub18e768a60167d6c2eda971ea2aceea2_50628_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="img"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="450px"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>YouTube Connection Speed&lt;/strong>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110101649533.png"
width="747"
height="339"
srcset="https://blog.echosec.top/p/tuic/image-20221110101649533_hu7f50eb217ce7faad7e8dedb0a12d7174_265891_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110101649533_hu7f50eb217ce7faad7e8dedb0a12d7174_265891_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221110101649533"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="528px"
>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110101315538.png"
width="747"
height="315"
srcset="https://blog.echosec.top/p/tuic/image-20221110101315538_hu4df07fdbcec90d519b9ad1a101ac4a37_213571_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110101315538_hu4df07fdbcec90d519b9ad1a101ac4a37_213571_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221110101315538"
class="gallery-image"
data-flex-grow="237"
data-flex-basis="569px"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Download&lt;/strong>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110100624503.png"
width="529"
height="89"
srcset="https://blog.echosec.top/p/tuic/image-20221110100624503_hubff774464f8c2e10e2f422f669a5f539_7561_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110100624503_hubff774464f8c2e10e2f422f669a5f539_7561_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221110100624503"
class="gallery-image"
data-flex-grow="594"
data-flex-basis="1426px"
>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/image-20221110100734660.png"
width="534"
height="90"
srcset="https://blog.echosec.top/p/tuic/image-20221110100734660_hu839e7091bce89cc8411c7b840a9be5b3_7393_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221110100734660_hu839e7091bce89cc8411c7b840a9be5b3_7393_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221110100734660"
class="gallery-image"
data-flex-grow="593"
data-flex-basis="1424px"
>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>现将服务器调整为 &lt;strong>V.PS&lt;/strong> 提供的线路质量较好的 Tokyo Micro Pro 服务器，调整 Hysteria &lt;code>down_mbps: 187&lt;/code>，其他环境条件不变。&lt;/p>
&lt;ul>
&lt;li>Speedtest：趋势相同。&lt;/li>
&lt;li>YouTube4K：连接速度同样已溢出，但 Hysteria 已能跑出一倍之差的测试成绩&lt;/li>
&lt;li>FileDownload：Hysteria 下载速度接近&lt;code>down_mbps&lt;/code>理论上限，而 TUIC 的下载速度稳定在 9MB/s 左右。&lt;/li>
&lt;/ul>
&lt;p>值得一提的是，先前 Hysteria 在 YouTube 测试中的抖动情况不再出现。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>来源/协议&lt;/th>
&lt;th>TUIC&lt;/th>
&lt;th>Hysteria&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Speedtest&lt;/strong>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/13927396378.png"
width="750"
height="400"
srcset="https://blog.echosec.top/p/tuic/13927396378_hu068435353ecbad0f45c0b926800f8279_50250_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/13927396378_hu068435353ecbad0f45c0b926800f8279_50250_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="img"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="450px"
>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/13927419994.png"
width="750"
height="400"
srcset="https://blog.echosec.top/p/tuic/13927419994_hu3e7b1e1b025c2dd34a35e1e695856209_50295_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/13927419994_hu3e7b1e1b025c2dd34a35e1e695856209_50295_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="img"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="450px"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>YouTube Connection Speed&lt;/strong>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/image-20221111234649105.png"
width="755"
height="320"
srcset="https://blog.echosec.top/p/tuic/image-20221111234649105_hu22311f120c3eb486f41b505ad31bd463_188860_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221111234649105_hu22311f120c3eb486f41b505ad31bd463_188860_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221111234649105"
class="gallery-image"
data-flex-grow="235"
data-flex-basis="566px"
>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/image-20221111235300137.png"
width="764"
height="318"
srcset="https://blog.echosec.top/p/tuic/image-20221111235300137_hud29a1ebcbf8690c6ddabd88a37e8436f_206359_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221111235300137_hud29a1ebcbf8690c6ddabd88a37e8436f_206359_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221111235300137"
class="gallery-image"
data-flex-grow="240"
data-flex-basis="576px"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Download&lt;/strong>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/image-20221112010449698.png"
width="536"
height="77"
srcset="https://blog.echosec.top/p/tuic/image-20221112010449698_hue3d3c341024741a1b39543f3a7c84dd7_7208_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221112010449698_hue3d3c341024741a1b39543f3a7c84dd7_7208_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221112010449698"
class="gallery-image"
data-flex-grow="696"
data-flex-basis="1670px"
>&lt;/td>
&lt;td>&lt;img src="https://blog.echosec.top/p/tuic/image-20221112010520098.png"
width="536"
height="77"
srcset="https://blog.echosec.top/p/tuic/image-20221112010520098_huf4af3df0742cc563a511322a933861fe_17152_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/tuic/image-20221112010520098_huf4af3df0742cc563a511322a933861fe_17152_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221112010520098"
class="gallery-image"
data-flex-grow="696"
data-flex-basis="1670px"
>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="tuic">TUIC&lt;/h2>
&lt;h3 id="协议简介">协议简介&lt;/h3>
&lt;blockquote>
&lt;p>REF: &lt;a class="link" href="https://github.com/EAimTY/tuic/tree/dev/protocol" target="_blank" rel="noopener"
>https://github.com/EAimTY/tuic/tree/dev/protocol&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>TUIC 是一个基于 QUIC 的有状态协议，目前的版本是 &lt;code>0x04&lt;/code>。&lt;/p>
&lt;h3 id="协议特性">协议特性&lt;/h3>
&lt;blockquote>
&lt;p>REF: &lt;a class="link" href="https://github.com/EAimTY/tuic#design" target="_blank" rel="noopener"
>https://github.com/EAimTY/tuic#design&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>1-RTT TCP 中继&lt;/li>
&lt;li>0-RTT UDP 中继，且 NAT 类型为 FullCone&lt;/li>
&lt;li>在用户空间的拥塞控制，也就是说可以在任何系统平台实现双向的 BBR&lt;/li>
&lt;li>两种 UDP 中继模式: &lt;code>native&lt;/code> （原生 UDP 特性，数据仍被 TLS 加密）和 &lt;code>quic&lt;/code> (100% 送达率，每个包单独单独作为一个 QUIC 「流」，一个包的确认重传不会阻塞其它包)&lt;/li>
&lt;li>完全多路复用，服务器和客户端之间始终只需要一条 QUIC 连接，所有任务作为这个连接中的 “流” 进行传输（一个流的暂时阻塞不会影响其它流），所以除连接第一个中继任务外的其它任务都不需要经过 QUIC 握手和 TUIC 的鉴权&lt;/li>
&lt;li>网络切换时的会话平滑转移，例如在从 Wi-Fi 切换到移动数据时连接不会像 TCP 一样直接断开&lt;/li>
&lt;li>0-RTT 、与中继任务并行的鉴权&lt;/li>
&lt;li>支持 QUIC 的 0-RTT 握手（开启之后能达到 真・ 1 -RTT TCP 和 0-RTT UDP ，但是就算不开启，多路复用的特性也能保证在绝大多数情况下 1-RTT 和 0-RTT ）&lt;/li>
&lt;/ul>
&lt;h2 id="总结对比">总结对比&lt;/h2>
&lt;p>&lt;strong>TUIC 设计目标是「尽可能减少握手造成的网络往返时延」&lt;/strong>，相比之下，更加适合「&lt;strong>湍流&lt;/strong>」应用场景，即，快速响应的持续不断的小流量请求，如快速加载 YouTube/TikTok/Twitter 首帧内容，访问素材网站快速加载缩略图等。&lt;/p>
&lt;p>&lt;strong>Hysteria 的设计目标是「最大化数据吞吐量」&lt;/strong>，相比之下，社区更加活跃，协议完成度更高，例如：已于 1.3.0 支持 &lt;a class="link" href="https://hysteria.network/zh/docs/port-hopping/" target="_blank" rel="noopener"
>port-hopping&lt;/a>，可在一定程度上缓解 UDP 单端口长连接被运营商丢包的风险；支持 obfs 流量混淆；内部实现 TUN 以及ACL路由；相比之下，Hysteria 更加适合「&lt;strong>激流&lt;/strong>」应用场景，即，非即时响应的高速流量，如数据集拉取，YouTube 8K 视频播放。&lt;/p>
&lt;p>总得来说，TUIC 更适合移动端（蜂窝流量）使用场景。TUIC 的较低的网络往返时延，性能损耗以及带宽开销能够在短视频，即时通信等应用场景带来不错的体感升级，而当 VPS 线路质量较差时（如骨干网晚高峰）TUIC 发挥的作用非常有限。&lt;/p>
&lt;p>Hysteria 更适合大流量应用场景，绝大多数的单节点 VPS 直连线路质量都很一般，Hysteria 微调后的拥塞控制策略的确能给劣质网络环境带来质变，但也需警惕错误的客户端配置带来的负优化。在服务器带宽盈余时，Hysteria 更符合大多数普通用户的综合需求，尤其在链路拥堵时段，代理中继延时在用户层面感知不强，反倒是数倍之差的下载速度体验成为矛盾焦点。&lt;/p>
&lt;p>最后，在条件允许的情况下，直连线路搭配使用 QUIC 变种协议簇而非 VMESS，Trojan，VLESS 是更加明智的选择。如果你喜欢或依赖 CDN/Relay 则可以选择 「Shadowsocks + ShadowTLS」 或 「VMESS + TLS + WS + CDN」 等更加复杂的解决方案。&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;p>&lt;a class="link" href="https://www.eaimty.com/2022/03/tuic.html" target="_blank" rel="noopener"
>基于 QUIC 的代理软件：TUIC - EAimTY 的博客&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/chika0801/tuic-install" target="_blank" rel="noopener"
>chika0801/tuic-install: TUIC安装指南&lt;/a>&lt;/p></description></item><item><title>『Blog』VMware 虚拟机流量代理最佳实践</title><link>https://blog.echosec.top/p/vmware-proxy-2023/</link><pubDate>Sun, 30 Oct 2022 00:54:18 +0800</pubDate><guid>https://blog.echosec.top/p/vmware-proxy-2023/</guid><description>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/anato1.jpg" alt="Featured image of post 『Blog』VMware 虚拟机流量代理最佳实践" />&lt;h2 id="前言">前言&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>本文内容较为硬核，读者不应是 Linux 小白且应对 NekoRay ，VMware 以及操作系统代理有基本的了解。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本文探讨的场景是 Linux 图形化操作系统，在命令行系统无法运行 NekoRay（也没有必要）直接运行代理核心即可。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>我们曾在 &lt;a class="link" href="https://blog.echosec.top/p/vmware-proxy/" >『Blog』VMware 虚拟机流量代理&lt;/a> 介绍过一种虚拟机借助宿主机局域网代理实现「间接代理」的方案，it works fine 但不够优雅，代理端口的配置让人摸不着头脑，宿主机内网 IP:PORT 变动后，虚拟机代理设置也需要跟着变动，非常繁琐。&lt;/p>
&lt;p>如今，我们可以借助一些优秀的开源项目直接在 Linux 操作系统上管理代理服务器，即，直接在虚拟机上启动客户端代理内核实现流量代理。此时，虚拟机代理和宿主机代理相互独立，虚拟机系统代理无需跟随宿主机网络环境变动。本文以 VMware Ubuntu20.04LTS 为例介绍虚拟机流量代理的最佳实践，这是目前个人使用场景代理效率最高且配置最简单的方案（暴论）。&lt;/p>
&lt;p>本文涉及的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">项目名&lt;/th>
&lt;th style="text-align:center">版本号&lt;/th>
&lt;th style="text-align:center">用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray" target="_blank" rel="noopener"
>MatsuriDayo/nekoray&lt;/a>&lt;/td>
&lt;td style="text-align:center">v2.2&lt;/td>
&lt;td style="text-align:center">图形化代理客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>HyNetwork/hysteria&lt;/a>&lt;/td>
&lt;td style="text-align:center">v1.2.2&lt;/td>
&lt;td style="text-align:center">代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/klzgrad/naiveproxy" target="_blank" rel="noopener"
>klzgrad/naiveproxy&lt;/a>&lt;/td>
&lt;td style="text-align:center">v106.0.5249.91-1&lt;/td>
&lt;td style="text-align:center">代理核心&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="虚拟机设置">虚拟机设置&lt;/h2>
&lt;p>将虚拟机镜像的网络适配器的网络连接模式改成 &lt;strong>NAT 模式&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030011821220.png"
width="1028"
height="555"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030011821220_hu69c7d3be5e90b1ec2f31090859e22746_58949_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/image-20221030011821220_hu69c7d3be5e90b1ec2f31090859e22746_58949_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt=" 图 1 NAT 模式"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="444px"
>&lt;/p>
&lt;h2 id="代理设置">代理设置&lt;/h2>
&lt;p>从这一步开始均为玄学的操作，因为后文中涉及到的开源项目均部署在 GitHub 上，需要优先使用代理才能下载。&lt;/p>
&lt;p>这里有两种解决方法，要么先在宿主机上下载好必要的软件，再把它们「拖入」虚拟机窗口传输文件；要么通过反代服务解决 wget 等命令的路由问题。下文以「命令行」方案为例梳理配置思路。若随时间推移反代接口失效或脚本执行错误，读者可手动分步执行命令或基于第一种方案照葫芦画瓢。&lt;/p>
&lt;p>&lt;strong>Script&lt;/strong>: 如果你使用 Ubuntu 20.04 以及 python3 开发环境，可以运行一键安装脚本，直接跳过 NekoRay 下载以及代理核心下载步骤。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget -qO- https://gitee.com/yaoqinse/hello-world/raw/develop/npstart.py &lt;span class="p">|&lt;/span> python3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="download-nekoray">Download NekoRay&lt;/h3>
&lt;p>行为链：从 GitHub 下载 NekoRay 预编译压缩包，解压到桌面，修改控制权限，启动 NekoRay。&lt;/p>
&lt;p>其中 &lt;code>https://dl.capoo.xyz/&lt;/code> 为作者开放使用的反代接口，去掉这段内容后剩下的部分为正常的 GitHub 的资源链接。如果你的虚拟机此时不存在路由问题，应该去掉这段内容。&lt;/p>
&lt;p>此外，为保证操作的连贯性，这里写死了 NekoRay v2.2 的下载地址，你可以在部署完毕后通过 NekoRay 内置的在线更新功能追平最新特性。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/Desktop/ &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget https://dl.capoo.xyz/https://github.com/MatsuriDayo/nekoray/releases/download/2.2/nekoray-2.2-2022-10-30-linux64.zip &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> unzip nekoray-2.2-2022-10-30-linux64.zip &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm nekoray-2.2-2022-10-30-linux64.zip &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> ~/Desktop/nekoray &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ./launcher
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果你是第一次使用 NekoRay ，可以在 &lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria/" >之前的文章&lt;/a> 中了解更多的使用细节，此处不再赘述。&lt;/p>
&lt;h3 id="download-proxy-core">Download Proxy Core&lt;/h3>
&lt;p>下文以 Hysteria 及 Naiveproxy 作演示，同样，相关文章可在本站历史查找。&lt;/p>
&lt;p>行为链：从 GitHub 上游仓库下载预编译代理核心并存放至 NekoRay 的配置路径下，最后赋予 hysteria-core 额外的执行权限。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/Desktop/nekoray/config &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget https://dl.capoo.xyz/https://github.com/HyNetwork/hysteria/releases/download/v1.2.2/hysteria-linux-amd64 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod +x ./hysteria-linux-amd64 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget -O naiveproxy.tar.xz https://dl.capoo.xyz/https://github.com/klzgrad/naiveproxy/releases/download/v106.0.5249.91-1/naiveproxy-v106.0.5249.91-1-linux-x64.tar.xz &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> tar -xvf naiveproxy.tar.xz &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> mv naiveproxy-v106.0.5249.91-1-linux-x64/naive . &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm naiveproxy.tar.xz &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm -r naiveproxy-v106.0.5249.91-1-linux-x64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下载完后，参照 &lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria/" >之前的文章&lt;/a> &lt;strong>启用 HTTP 监听端口&lt;/strong> 并 &lt;strong>指定 hysteria-core 以及 naive-core 的绝对路径&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030181001877.png"
width="992"
height="670"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030181001877_hu0881c7e6d4401659acf4e07325570ca8_87479_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/image-20221030181001877_hu0881c7e6d4401659acf4e07325570ca8_87479_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="图 2 添加代理核心"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="355px"
>&lt;/p>
&lt;h3 id="enable-system-proxy">Enable System Proxy&lt;/h3>
&lt;p>至此， NekoRay 已配置完毕可以直接投入使用。接下来，以你喜欢的方式添加 Hysteria 或 Naiveproxy 的代理服务器，例如从宿主机已配置好的 NekoRay 中导出分享链接并粘贴过来。&lt;/p>
&lt;p>选中需要激活的服务器，启动系统代理。你可以访问 Google 或 YouTube 等站点检测系统代理连通性，也可以通过 fast.com 或 speedtest.net 甚至是 YouTube 码流速度估算代理最大下行速度，如图 3,4,5 所示。&lt;/p>
&lt;p>之后，你可以通过双击 &lt;code>~/Desktop/nekoray/launcher&lt;/code> 启动软件本体，也可以设置开机自启。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030032844192.png"
width="1802"
height="1464"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030032844192_hud4f69e9f2686dca641de36ce27ec0924_868107_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/image-20221030032844192_hud4f69e9f2686dca641de36ce27ec0924_868107_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="图 3 檢測系統代理連通性"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="295px"
>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030033059858.png"
width="1802"
height="1465"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030033059858_hudcd8f62db5fb6c42e30cb0329ff4b977_424091_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/image-20221030033059858_hudcd8f62db5fb6c42e30cb0329ff4b977_424091_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="图 4 簡單跑個分"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="295px"
>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/Snipaste_2022-10-30_03-44-46.png"
width="1795"
height="1293"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/Snipaste_2022-10-30_03-44-46_huf0637cd9ffe9eb3fec00fc57e4bff552_1096315_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/Snipaste_2022-10-30_03-44-46_huf0637cd9ffe9eb3fec00fc57e4bff552_1096315_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="图 5 YouTube 4K Video Connection Speed"
class="gallery-image"
data-flex-grow="138"
data-flex-basis="333px"
>&lt;/p>
&lt;h2 id="开发中的代理问题">开发中的代理问题&lt;/h2>
&lt;p>介绍常见的虚拟机代理错误设置并给出相应的解决方法。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>浏览器代理&lt;/strong>&lt;/p>
&lt;p>浏览器代理选择系统代理即可。Google，Edge 默认走系统代理（且不可更改），Firefox 则给出眼花缭乱的选项，将「配置访问互联网的代理服务器」手动置为「使用系统代理」即可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>wget | git | pip |curl 等命令的路由通路&lt;/strong>&lt;/p>
&lt;p>这些命令默认走系统代理。如果你配置了优先级更高的回源代理（如 pip 清华镜像源）那么它大概率会和系统代理打架，针对回源代理的说明可看后文小节部分。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>apt 等命令的路由通路&lt;/strong>&lt;/p>
&lt;p>建议保持国内镜像源。本地与 Ubuntu 软件源服务器是直连关系，流量不走系统代理，选择国内镜像源直连是不错的选择。当然你也可以修改 Ubuntu 软件源指回主根服务器，并保持 NekoRay VPN 模式为开启状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ping 命令的连通性&lt;/strong>&lt;/p>
&lt;p>我想你应该不会惊讶于「为什么我开启了系统代理，能 ping 通 baidu.com 却 ping 不通 google.com」。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>JetBrains 家族产品的代理设置&lt;/strong>&lt;/p>
&lt;p>（如：PyCharm，Goland，IDE）&lt;/p>
&lt;p>这类软件设置项中的代理仅对软件本身有效，如插件商城，而软件运行代码是通过 shell 脚本命令执行的，即，你的代码中的网络请求是否使用代理与这个库的底层逻辑以及你是否传入代理参数有关，而与软件设置的代理无关。&lt;/p>
&lt;p>比如 Python3 的 &lt;code>requests.get()&lt;/code> 在你不指定参数 &lt;code>proxies&lt;/code> 时会检索环境变量 &lt;code>*_proxy&lt;/code> 自动填充 &lt;code>proxies&lt;/code> 参数，即，reqeusts 流量默认走系统代理。而 &lt;code>aiohttp&lt;/code> 中基于 &lt;code>ClientSession&lt;/code> 对象的网络请求默认直连，即，不指定参数 &lt;code>proxy&lt;/code> 代理不生效。但无论如何，它们都与软件设置的代理无关。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>TLS in TLS&lt;/code> 陷阱&lt;/strong>&lt;/p>
&lt;p>如果你使用 Python3 进行开发，你一定经历过： pip 下载速度慢；换源；镜像源和系统代理打架；自己写的网络请求没法过墙，指定了系统代理却出现了连锁的 &lt;code>SSLError&lt;/code> 异常。这是一个史前巨坑，是一个仅会在中国大陆发生的奇妙化学反应，urllib3 的导演组都自愧不如。这一切的一切都指向一个 &lt;strong>TLS in TLS 陷阱&lt;/strong>。你可以在 &lt;a class="link" href="https://github.com/conda/conda/issues/10590#issuecomment-880196074" target="_blank" rel="noopener"
>conda issues&lt;/a> 继续吃瓜。&lt;/p>
&lt;p>解决方法如下，根据你的需求和应用场景择优：&lt;/p>
&lt;p>&lt;strong>Solution1&lt;/strong>：调整 urllib3 版本，即，&lt;code>pip install urllib3==1.25.11&lt;/code>；&lt;/p>
&lt;p>&lt;strong>Solution2&lt;/strong>：调整代理软件配置&lt;/p>
&lt;ul>
&lt;li>
&lt;p>v2rayN v5.36+, 「参数设置 &amp;ndash; 系统代理设置 &amp;ndash; 高级代理设置」选择 &lt;code>http=http://{ip}:{http_port};https=http://{ip}:{http_port}&lt;/code>。在「例外」中添加 &lt;code>pypi.tuna.tsinghua.edu.cn;&lt;/code> 绕过 pip 清华源的代理请求，如果你使用其他 pip 源，填写相应的域名即可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Clash（cfw/verge/&amp;hellip;）开启 TAP/TUN。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>NekoRay 切换至 VPN 模式。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Solution3&lt;/strong>：以你喜欢的方式调整系统代理的协议格式&lt;/p>
&lt;p>核心操作是让 HTTPS 与 HTTP 的代理流量公用一个端口，并且绕过系统代理的 TLS 认证问题。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">proxies&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:10809&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;https&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:10809&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="相关文章">相关文章&lt;/h2>
&lt;p>&lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria/" >『Blog』Use Hysteria through NekoRay in Windows&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.echosec.top/p/naiveproxy/" >『Blog』Naiveproxy Quick Start&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" >『Blog』V2rayN 配置 Hysteria&lt;/a>&lt;/p></description></item><item><title>『Blog』Naiveproxy Quick Start</title><link>https://blog.echosec.top/p/naiveproxy/</link><pubDate>Wed, 19 Oct 2022 20:09:33 +0800</pubDate><guid>https://blog.echosec.top/p/naiveproxy/</guid><description>&lt;img src="https://blog.echosec.top/p/naiveproxy/anato-finnstark.jpg" alt="Featured image of post 『Blog』Naiveproxy Quick Start" />&lt;h2 id="introduce">Introduce&lt;/h2>
&lt;p>本文以 Ubuntu20.04 为例简要介绍 Naiveproxy 服务端的敏捷部署流程，再分别借助 NekoRay/v2rayN 在 Windows 以及 Matsuri（茉莉） 在 Android 启动图形化代理的解决方案。&lt;/p>
&lt;p>下文均以 Matsuri &amp;amp; NekoRay 统称 NekoRay 以及 Matsuri。这两个项目拥有同样的维护社区和协议解析后端，服务器导入操作无需额外声明。&lt;/p>
&lt;p>本文涉及的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>项目名&lt;/th>
&lt;th>发行版本号&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/klzgrad/naiveproxy" target="_blank" rel="noopener"
>klzgrad/naiveproxy&lt;/a>&lt;/td>
&lt;td>v106.0.5249.91-1&lt;/td>
&lt;td>双端代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/QIN2DIM/np-start" target="_blank" rel="noopener"
>QIN2DIM/np-start&lt;/a>&lt;/td>
&lt;td>main-branch&lt;/td>
&lt;td>Naiveproxy 服务端自动编译脚本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray" target="_blank" rel="noopener"
>MatsuriDayo/nekoray&lt;/a>&lt;/td>
&lt;td>v2.0&lt;/td>
&lt;td>GUI 客户端（Windows/Linux）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri" target="_blank" rel="noopener"
>MatsuriDayo/Matsuri&lt;/a>&lt;/td>
&lt;td>v0.5.1&lt;/td>
&lt;td>GUI 客户端（Android）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/caddyserver/caddy" target="_blank" rel="noopener"
>caddyserver/caddy&lt;/a>&lt;/td>
&lt;td>v2.6.2&lt;/td>
&lt;td>承载代理的 Web 服务器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/caddyserver/xcaddy" target="_blank" rel="noopener"
>caddyserver/xcaddy&lt;/a>&lt;/td>
&lt;td>v0.3.1&lt;/td>
&lt;td>编译携带 Naiveproxy 插件的 Caddy2 服务器&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="caddy-server-agile-development">Caddy Server Agile Development&lt;/h2>
&lt;h3 id="compile-the-naiveproxy-server">Compile the Naiveproxy Server&lt;/h3>
&lt;p>在 &lt;strong>Ubuntu20.04+&lt;/strong> 环境中自动编译 Naiveproxy，其他环境可参见「&lt;a class="link" href="https://github.com/klzgrad/naiveproxy/wiki/%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="noopener"
>原理及步骤说明&lt;/a>」进行配置。&lt;/p>
&lt;p>首次运行后，你可以通过快捷指令 &lt;code>npstart&lt;/code> 运行脚本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget -qO /home/npstart.py https://raw.githubusercontent.com/QIN2DIM/np-start/main/main.py &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> python3 /home/npstart.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>首次运行时，除敏捷部署外的功能被锁定，Naiveproxy 编译成功后解锁。自动编译耗时取决于硬件性能和网络带宽配置，一般 1 ~ 5 分钟内可以完成。&lt;/p>
&lt;p>下图为 npstart 的命令行控制面板，可以实现基本的 Naiveproxy 生命周期管理工作。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/naiveproxy/image-20221101072516050.png"
width="630"
height="913"
srcset="https://blog.echosec.top/p/naiveproxy/image-20221101072516050_hu1a3beec754b3aa0f121606a074b65836_223278_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/naiveproxy/image-20221101072516050_hu1a3beec754b3aa0f121606a074b65836_223278_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="npstart v0.1.0 - CMD Panel"
class="gallery-image"
data-flex-grow="69"
data-flex-basis="165px"
>&lt;/p>
&lt;h3 id="check-the-generated-configuration">Check the Generated Configuration&lt;/h3>
&lt;p>脚本编译结束后，按任意键自动部署 Naiveproxy 系统服务。&lt;/p>
&lt;p>脚本会在 &lt;code>/home/naiveproxy&lt;/code> 目录下生成编译产出的 &lt;code>caddy&lt;/code> 以及 &lt;code>Caddyfile&lt;/code>并在屏幕上依次打印：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>用于启动 V2rayN Custom Server 的配置信息&lt;/strong>&lt;/li>
&lt;li>&lt;strong>用于启动 Matsuri &amp;amp; NekoRay Naiveproxy 的分享链接&lt;/strong>&lt;/li>
&lt;li>&lt;strong>用于启动 Shadowrocket HTTP/2 代理的分享链接&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>对于 Matsuri &amp;amp; NekoRay 以及 Shadowrocket，复制分享链接后，可以通过粘贴或从剪贴板导入的方式直接在图形化客户端中导入节点；而 V2rayN 则需要编写自定义配置，复制粘贴配置信息即可。&lt;/p>
&lt;p>Matsuri &amp;amp; NekoRay 以及 V2rayN 需要在客户端安装 naive-core 或 naive plugin 才能正常使用，详细内容文末介绍。&lt;/p>
&lt;h2 id="windows-pc-configuration">Windows PC Configuration&lt;/h2>
&lt;blockquote>
&lt;p>建议每间隔一个月主动更替 naive-core 以追平上游的最新特性&lt;/p>
&lt;/blockquote>
&lt;h3 id="v2rayn-custom-server">V2rayN Custom Server&lt;/h3>
&lt;ol>
&lt;li>访问 &lt;a class="link" href="https://github.com/klzgrad/naiveproxy/releases" target="_blank" rel="noopener"
>Releases · klzgrad/naiveproxy&lt;/a> 下载匹配操作系统的最新发行客户端。解压后将其中的 &lt;code>naive.exe&lt;/code> 放置到 v2rayN 工程根目录下。&lt;/li>
&lt;li>添加自定义配置服务器，复制粘贴 &lt;code>v2rayN custom server&lt;/code> 的配置信息， Core类型 选择 naiveproxy，Socks端口 与配置文件给出的 listen-port 保持一致。下图为参考配置：&lt;img src="https://blog.echosec.top/p/naiveproxy/image-20221019212555596.png"
width="915"
height="373"
srcset="https://blog.echosec.top/p/naiveproxy/image-20221019212555596_hu050c1885ecf7a8209d02ff113beb1585_28405_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/naiveproxy/image-20221019212555596_hu050c1885ecf7a8209d02ff113beb1585_28405_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221019212555596"
class="gallery-image"
data-flex-grow="245"
data-flex-basis="588px"
>&lt;/li>
&lt;/ol>
&lt;h3 id="nekoray-naiveproxy-node">NekoRay Naiveproxy Node&lt;/h3>
&lt;p>如果你从未使用过 NekoRay，可通过 &lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria/" >这篇博客&lt;/a> 了解预热内容。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>访问 &lt;a class="link" href="https://github.com/klzgrad/naiveproxy/releases" target="_blank" rel="noopener"
>Releases · klzgrad/naiveproxy&lt;/a> 下载匹配操作系统的最新发行客户端。解压后将其中的 &lt;code>naive.exe&lt;/code> 放置到 NekoRay 工程目录下的 config 文件夹。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打开 NekoRay，依次选择 「首选项 → 基本设置 → 核心」添加 &lt;code>naive-core&lt;/code>。&lt;img src="https://blog.echosec.top/p/naiveproxy/image-20221019211804619.png"
width="1246"
height="851"
srcset="https://blog.echosec.top/p/naiveproxy/image-20221019211804619_hu49d8ef0737b3aaf21e583fcb0e5d482b_124841_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/naiveproxy/image-20221019211804619_hu49d8ef0737b3aaf21e583fcb0e5d482b_124841_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20221019211804619"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="351px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>复制 &lt;code>NekoRay/Matsuri 分享链接 &lt;/code>，CTRL + V 从剪切板导入 naiveproxy node。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="matsuri-configuration">Matsuri Configuration&lt;/h3>
&lt;blockquote>
&lt;p>Matsuri with Naiveproxy Plugin&lt;/p>
&lt;/blockquote>
&lt;p>如果你从未使用过 Matsuri，可通过 &lt;a class="link" href="https://blog.echosec.top/p/matsuri-hysteria/" >这篇博客&lt;/a> 了解预热内容。若首次使用 Naiveproxy，依据提示安装 naive-plugin 即可（导入并启动服务器后自动弹出提示）。&lt;/p>
&lt;h3 id="shadowrocket-configuration">Shadowrocket Configuration&lt;/h3>
&lt;p>软件自带插件，无需手动安装，直接复制粘贴分享链接即可。&lt;/p></description></item><item><title>『Blog』Use Hysteria through Clash Verge</title><link>https://blog.echosec.top/p/clash-verge-hysteria/</link><pubDate>Fri, 02 Sep 2022 20:04:10 +0800</pubDate><guid>https://blog.echosec.top/p/clash-verge-hysteria/</guid><description>&lt;img src="https://blog.echosec.top/p/clash-verge-hysteria/anato.jpg" alt="Featured image of post 『Blog』Use Hysteria through Clash Verge" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文以 Windows 为例介绍使用 Clash Verge 启动 Hysteria 代理核心的快速入门步骤并列举一些注意事项。下文以 Verge 代称 Clash Verge。&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/zzzgydi/clash-verge" target="_blank" rel="noopener"
>Verge&lt;/a> 是一个基于 &lt;a class="link" href="https://github.com/tauri-apps/tauri" target="_blank" rel="noopener"
>tauri&lt;/a> 编写的 &lt;a class="link" href="https://docs.cfw.lbyczf.com/" target="_blank" rel="noopener"
>Clash系列图形化客户端&lt;/a>，支持跨平台（Windows x64, Linux x86_64 and macOS 11+）。Verge 支持更换至 &lt;a class="link" href="https://github.com/MetaCubeX/Clash.Meta" target="_blank" rel="noopener"
>Meta-core&lt;/a>，即，支持多平台的 &lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>Hysteria&lt;/a> 代理核心的管理。您可以查阅下表列出的 Documentation 了解有关 Verge（Meta）组合的诸多特性。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>项目名&lt;/th>
&lt;th>发行版本号&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/zzzgydi/clash-verge" target="_blank" rel="noopener"
>zzzgydi/clash-verge&lt;/a>&lt;/td>
&lt;td>v1.0.5&lt;/td>
&lt;td>图形化客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/Loyalsoldier/clash-rules" target="_blank" rel="noopener"
>Loyalsoldier/clash-rules&lt;/a>&lt;/td>
&lt;td>202208302241&lt;/td>
&lt;td>开源规则集&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/Dreamacro/clash/wiki" target="_blank" rel="noopener"
>Dreamacro/clash Wiki &lt;/a>&lt;/td>
&lt;td>/&lt;/td>
&lt;td>Documentation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://docs.metacubex.one/" target="_blank" rel="noopener"
>Clash.Meta Wiki&lt;/a>&lt;/td>
&lt;td>/&lt;/td>
&lt;td>Documentation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://docs.cfw.lbyczf.com/" target="_blank" rel="noopener"
>Clash for Windows Wiki&lt;/a>&lt;/td>
&lt;td>/&lt;/td>
&lt;td>Documentation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/emptysuns/Hi_Hysteria" target="_blank" rel="noopener"
>emptysuns/Hi_Hysteria&lt;/a>&lt;/td>
&lt;td>v0.4.0&lt;/td>
&lt;td>服务端安装脚本&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="下载设置现象-verge">下载设置现象 Verge&lt;/h3>
&lt;p>访问 &lt;a class="link" href="https://github.com/zzzgydi/clash-verge/releases" target="_blank" rel="noopener"
>Releases · zzzgydi/clash-verge&lt;/a>，下载最新发行版本。建议 Windows 用户选择 &lt;code>_zh-CN.msi&lt;/code>。&lt;/p>
&lt;h3 id="编排配置文件">编排配置文件&lt;/h3>
&lt;p>因为 Verge 也是基于 Meta 运行 Hysteria 代理核心，我们在 &lt;a class="link" href="https://blog.echosec.top/p/clash-meta-for-android-hysteria/#%e9%99%84%e4%bb%b6" >Clash.Meta&lt;/a> 这篇博客介绍的配置模版可以重用，配置项完全一致。如果你通过 &lt;a class="link" href="https://github.com/emptysuns/Hi_Hysteria" target="_blank" rel="noopener"
>hihy&lt;/a> 在服务器上维护 Hysteria，那么可以非常方便地导出包含预设规则的 Meta YAML 配置文件，你可以将该配置文件导入到 Verge 或 CMFA（Clash Meta for Android） 等客户端直接使用。&lt;/p>
&lt;h3 id="配置-verge">配置 Verge&lt;/h3>
&lt;p>假设已获取配置文件并存到本地&amp;hellip;&lt;/p>
&lt;p>从主界面进入到「配置」页，选择「新建」，调整配置类型为 &lt;code>Local&lt;/code>，加上合理的 Name 以及 Descriptions，点击「选择文件」找到存在本地的 YAML 配置文件，点击「保存」导入配置。Verge 会拷贝一份配置文件存储到目录 &lt;code>~/.config/clash-verge-prfiles&lt;/code> 。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902204955592.png" alt="新建配置" width="80%"/>&lt;br>
&lt;figcapton>图 1 新建配置&lt;/figcapton>
&lt;/figure>
&lt;p>回到「配置」页，选中刚创建的配置激活代理组（或「右键」目标代理组选择「使用」）。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902205916250.png" alt="激活配置" width="80%"/>&lt;br>
&lt;figcapton>图 2 激活配置&lt;/figcapton>
&lt;/figure>
&lt;p>可以在「代理」页查看当前激活的代理组。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902210134475.png" alt=" Verge 代理组" width="80%"/>&lt;br>
&lt;figcapton>图 3 Verge 代理组&lt;/figcapton>
&lt;/figure>
&lt;p>进入「设置」页，检查 「Clash 设置」，&lt;strong>切换内核&lt;/strong>至 Clash.Meta。&lt;/p>
&lt;p>在当前页面检查「系统设置」，如下图所示，开启「服务模式」，开启「系统代理」。若服务模式下载异常，可以先开启系统代理后再下载启用服务模式。访问 Google 或 YouTube 等站点进行行为检测，「流量图显」正常波动说明网络代理工作正常。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902210406243.png" alt="Verge 系统代理" width="80%"/>&lt;br>
&lt;figcapton>图 4 Verge 系统代理&lt;/figcapton>
&lt;/figure>
&lt;h2 id="进阶操作">进阶操作&lt;/h2>
&lt;h3 id="检查网络连接">检查网络连接&lt;/h3>
&lt;p>进入「连接」页中检查经由 Verge 的网络活动（即不开启代理时「连接」和「日志」不工作）。在下图中，我们筛选了经由 Verge 前往以 &lt;code>api.bilibili&lt;/code> 为前缀的域名的流量去向，可以看到使用的传输协议是 &lt;code>HTTPS&lt;/code>，访问策略是 &lt;code>DIRECT&lt;/code>，直译为「直接连接」表示访问数据包不经由远程代理服务器转发而是直接去往B站。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902212142666.png" alt="Verge 网络连接 - DIRECT " width="80%"/>&lt;br>
&lt;figcapton>图 5 Verge 网络连接 - DIRECT&lt;/figcapton>
&lt;/figure>
&lt;p>同样，我们筛选 &lt;code>youtube&lt;/code> 可以看到如下内容：&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902212619771.png" alt="Verge 网络连接 - PROXY" width="80%"/>&lt;br>
&lt;figcapton>图 6 Verge 网络连接 - PROXY&lt;/figcapton>
&lt;/figure>
&lt;p>图中的标签 &lt;code>PROXY&lt;/code> 对应着配置文件中的代理组名称，此处直译为「通用代理」表示 Verge 使用 PROXY 这个代理组中的节点处理面向当前连接的网络请求。我们切换到「日志」页面，可以进一步地查看访问细节，如下图所示：&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902213034334.png" alt="Verge logs" width="80%"/>&lt;br>
&lt;figcapton>图 7 Verge logs&lt;/figcapton>
&lt;/figure>
&lt;p>以 &lt;code>09-02 21:24:15 INFO&lt;/code> 这条日志为例，其表述了一个数据包的行为链：数据包从「本地系统代理」7890 端口转发到本地 44391 端口“准备发往” Youtube（HTTPS），又因为当前站点触发了（域名）匹配规则 &lt;code>RuleSet(proxy)&lt;/code> ，意味着这次“发送”需要使用规则所指定的代理组 &lt;code>PROXY&lt;/code>，而具体使用该代理组中的哪个节点呢？默认是我们手动选中（Select）的节点，在配置文件中它的别名（name）是 &lt;code>CA Clone&lt;/code>&lt;/p>
&lt;h3 id="tun-模式">TUN 模式&lt;/h3></description></item><item><title>『Blog』Use Hysteria through Clash.Meta in Android</title><link>https://blog.echosec.top/p/clash-meta-for-android-hysteria/</link><pubDate>Thu, 01 Sep 2022 01:59:39 +0800</pubDate><guid>https://blog.echosec.top/p/clash-meta-for-android-hysteria/</guid><description>&lt;img src="https://blog.echosec.top/p/clash-meta-for-android-hysteria/finnstark-1.jpg" alt="Featured image of post 『Blog』Use Hysteria through Clash.Meta in Android" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文涉及的开源项目：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">项目名&lt;/th>
&lt;th style="text-align:left">发行版本号&lt;/th>
&lt;th style="text-align:left">用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;a class="link" href="https://github.com/MetaCubeX/ClashMetaForAndroid/releases" target="_blank" rel="noopener"
>MetaCubeX/ClashMetaForAndroid&lt;/a>&lt;/td>
&lt;td style="text-align:left">v2.5.11-pre02&lt;/td>
&lt;td style="text-align:left">图形化客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;a class="link" href="https://github.com/Loyalsoldier/clash-rules" target="_blank" rel="noopener"
>Loyalsoldier/clash-rules&lt;/a>&lt;/td>
&lt;td style="text-align:left">202208302241&lt;/td>
&lt;td style="text-align:left">开源规则集&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>下文均以 CMFA 代称 Clash Meta for Android。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="下载-cmfa">下载 CMFA&lt;/h3>
&lt;p>推荐从 &lt;a class="link" href="https://github.com/MetaCubeX/ClashMetaForAndroid/releases" target="_blank" rel="noopener"
>Releases&lt;/a> 下载最新发行版软件。&lt;/p>
&lt;p>通常，主流安卓手机使用带有 &lt;code>arm64-v8a&lt;/code> 标签的 APK 文件。以你喜欢的方式在移动设备上安装 CMFA，不要点击多余的东西。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220901034946913.png" alt=" Download CMFA release arm64-v8a." width="80%"/>&lt;br>
&lt;figcapton>Fig1. - Download CMFA release through GitHub.&lt;/figcapton>
&lt;/figure>
&lt;h3 id="导入配置文件">导入配置文件&lt;/h3>
&lt;p>参考 &lt;a class="link" href="#asset" >文末附件 &lt;/a>编写你的配置信息，导入移动设备。从 CMFA 应用主界面点击「配置」进入创建配置页面，导入配置文件，点击保存。&lt;/p>
&lt;p>值得一提的是，目前 Hysteria 仍未被普及使用，你可能缺少一种合理的方式部署 URI 服务用于定时更新 Hysteria 配置信息。目前的最佳实践仍是通过配置文件导入相关数据，通过链接导入反而有订阅泄漏的风险。&lt;/p>
&lt;figure align="center">
&lt;img src="image-20220901042857526.png" alt="Import rules file(yaml) of CMFA." width="60%"/>&lt;br>
&lt;figcapton>Fig2. - Import rules from external YAML file.&lt;/figcapton>
&lt;/figure>
&lt;figure align="center">
&lt;img src="image-20220901035951449.png" alt="Waiting for external resources to load." width="60%"/>&lt;br>
&lt;figcapton>Fig3. - Waiting for rule-providers to load.&lt;/figcapton>
&lt;/figure>
&lt;figure align="center">
&lt;img src="image-20220901040031284.png" alt="Select the (hysteria) configuration item." width="60%"/>&lt;br>
&lt;figcapton>Fig4. - Select the (hysteria) configuration item.&lt;/figcapton>
&lt;/figure>
&lt;h3 id="启动代理">启动代理&lt;/h3>
&lt;p>返回 CMFA 应用主界面，点击「启动」即可。&lt;/p>
&lt;figure align="center">
&lt;img src="image-20220901040247273.png" alt="Startup proxy." width="60%"/>&lt;br>
&lt;figcapton>Fig5. - Startup proxy.&lt;/figcapton>
&lt;/figure>
&lt;h3 id="黑名单访问控制模式">黑名单访问控制模式&lt;/h3>
&lt;p>黑名单模式，意为「&lt;strong>只有命中规则的网络流量，才使用代理&lt;/strong>」，这是一个大幅度提升网上冲浪体验的关键操作。在 Kotlin 系列的软件中，该选项还被称为「分应用代理」。&lt;/p>
&lt;p>由于每个人的设备环境大相径庭，很难用一套模版覆盖所有环境，所以我们只说明操作方法以及注意事项，提供的 rules 仅供参考，你需要根据具体情况进一步调教。&lt;/p>
&lt;p>关闭代理，从应用界面依次进入「设置 &amp;ndash; 网络 」，将访问控制模式调整为「仅允许已选择的应用」，其他选项保持默认即可，具体内容如下所示：&lt;/p>
&lt;figure align="center">
&lt;img src="image-20220901122526318.png" alt=" Access control mode of VpnService." width="60%"/>&lt;br>
&lt;figcapton>Fig6. - Access control mode of VpnService. &lt;/figcapton>
&lt;/figure>
&lt;p>打开「访问控制应用包列表」，开始点选&lt;strong>需要使用代理的应用软件&lt;/strong>。可供参考的应用包列表如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">com.azure.authenticator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.android.chrome&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.discord&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.microsoft.office.excel&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.github.android&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.android.gm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.ar.core&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.instagram.android&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.medium.reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.microsoft.office.officehubrow&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.picsart.studio&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.microsoft.office.powerpoint&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.reddit.frontpage&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.spotify.music&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">org.telegram.messenger&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.twitter.android&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">twittervideosaver.twittervideodownloader.twimate.savetwittergif&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.microsoft.office.word&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.android.youtube&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">photo.editor.photoeditor.photoeditorpro&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.earth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.android.vending&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.android.gms&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.android.gsf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你可以在「访问控制应用包列表」中从外部（剪切板）导入以上内容，部分应用需要关闭包列表的系统应用过滤器才能看到。我们以上述内容为例阐述黑名单访问控制模式的最佳实践案例。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">代理类&lt;/th>
&lt;th>备注&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">谷歌商店&lt;/td>
&lt;td>&lt;code>Google Play Store&lt;/code>，&lt;code>Google Play 服务&lt;/code> 以及 &lt;code>Google 服务框架&lt;/code>。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">浏览器&lt;/td>
&lt;td>主用的浏览器，如 Google，Edge，Firefox，DuckGo 等，否则应用内的多种服务无法正常使用。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">邮箱&lt;/td>
&lt;td>Gmail，Protonmail 等需要代理才能正常收发件的产品。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Authenticator&lt;/td>
&lt;td>用于二步验证或多因素验证的软件，若您使用的是国外产品（这类生态在国内不成熟），它们的云服务备份功能自然是需要通过代理的。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">其他&lt;/td>
&lt;td>（1）各种需要代理的国外应用。如 YouTube，Twitter，Telegram，Instagram，Reddit，Spotify，Google Earth ，Microsoft Office 等人尽皆知的国外御三家应用；（2）Twitter、Instagram下载器（用于下载推文视频）之类的软件；（3）需要代理才能正常使用的游戏、流媒体及协作服务。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>反模式警告&lt;/strong>，除非是特殊用途（比如装逼、连入公司内网、开发），否则你不应在任何情况下使用境外代理访问支付宝、微信、反炸中心、百度/高德地图、Bilibili、电商软件、抖音等知名国内御三家应用。&lt;/p>
&lt;p>这种反模式的行为会不会带来意料之外的惊喜暂且不谈，就上网体验本身就非常糟糕，也许是出入公共场合地点码半分钟加载不出来，也许是 B站 的下饭体验极其恶劣，但无论如何，长期「异地登录人」的用户画像会给你今后的网上冲浪生活留下浓墨重彩的一笔。&lt;/p>
&lt;p>&lt;span id="asset">&lt;/span>&lt;/p>
&lt;h2 id="附件">附件&lt;/h2>
&lt;ol>
&lt;li>参考项目&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/HyNetwork/hysteria/wiki/%e9%ab%98%e7%ba%a7%e7%94%a8%e6%b3%95" target="_blank" rel="noopener"
>HyNetwork/hysteria Wiki&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/Loyalsoldier/clash-rules" target="_blank" rel="noopener"
>Loyalsoldier/clash-rules&lt;/a>&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>
&lt;p>配置文件&lt;/p>
&lt;p>根据注释修改配置信息&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">mixed-port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">7890&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">allow-lan&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rule&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">log-level&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">info&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ipv6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">dns&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">listen&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.0.0.0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">53&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ipv6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">default-nameserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">114.114.114.114&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">223.5.5.5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enhanced-mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">redir-host&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nameserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">https://dns.alidns.com/dns-query&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">https://doh.pub/dns-query&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fallback&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">114.114.114.114&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">223.5.5.5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 编写 Hysteria 客户端的协商配置信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">proxies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;CN2 GIA-E&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hysteria&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Hysteria 服务域名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Hysteria 服务端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">auth_str&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 字符串校验密钥&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alpn&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">h3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">wechat-video&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># udp/wechat-video&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">up&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">25&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">down&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">125&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sni&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Hysteria 服务域名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">skip-cert-verify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">recv_window_conn&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">12320768&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">recv_window&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">49283072&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">disable_mtu_discovery&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 服务注册&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 将上文配置的 proxies-name 的值依次编排到下方的 proxies 列表中&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">proxy-groups&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;PROXY&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">select&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">proxies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;CN2 GIA-E&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">rule-providers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">reject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/reject.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">icloud&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/icloud.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">apple&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/apple.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">proxy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/proxy.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">direct&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/direct.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">private&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/private.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gfw&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/gfw.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">greatfire&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/greatfire.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/greatfire.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">telegramcidr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ipcidr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/telegramcidr.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cncidr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ipcidr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/cncidr.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">lancidr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ipcidr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/lancidr.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">applications&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">classical&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/applications.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">DOMAIN,clash.razord.top,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">DOMAIN,yacd.haishan.me,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,proxy,PROXY&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,telegramcidr,PROXY&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,direct,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,applications,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,private,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,icloud,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,apple,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,lancidr,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,cncidr,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,reject,RECEJT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">GEOIP,LAN,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">GEOIP,CN,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">MATCH,PROXY&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>『Blog』Use Hysteria through Matsuri in Android</title><link>https://blog.echosec.top/p/matsuri-hysteria/</link><pubDate>Wed, 31 Aug 2022 06:57:23 +0800</pubDate><guid>https://blog.echosec.top/p/matsuri-hysteria/</guid><description>&lt;img src="https://blog.echosec.top/p/matsuri-hysteria/webpti.jpg" alt="Featured image of post 『Blog』Use Hysteria through Matsuri in Android" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在以往文章中我们介绍了在 Windows 上以图形化界面的形式管理 Hysteria 的解决方案：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria" >『Blog』NekoRay 配置 Hysteria&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>『Blog』V2rayN 配置 Hysteria&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>本文继续介绍有关 Hysteria 代理核心更多内容。本篇以 Matsuri 为切入点，介绍在 Android 手机上启动 Hysteria 代理核心的 quick-start 入门步骤，开箱即用。&lt;/p>
&lt;p>如果你已持有一枚可用的 Hysteria 节点链接，只需要花费不到 3 分钟的时间便可在自己的手机上架起代理与互联国际完成「友好交互」。&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>本文涉及的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>项目名&lt;/th>
&lt;th>发行版本号&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>HyNetwork/hysteria&lt;/a>&lt;/td>
&lt;td>v1.2.0&lt;/td>
&lt;td>代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri" target="_blank" rel="noopener"
>MatsuriDayo/Matsuri&lt;/a>&lt;/td>
&lt;td>v0.4.1&lt;/td>
&lt;td>图形化客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/plugins/releases/tag/Hysteria-v1.2.0-2" target="_blank" rel="noopener"
>MatsuriDayo/Hysteria-Plugin&lt;/a>&lt;/td>
&lt;td>v1.2.0-2&lt;/td>
&lt;td>兼容性插件&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意 →&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>本文不面向零基础的小白读者，且仅涉及与 Matsuri Android 客户端相关的操作演示，hysteria 服务端的配置详见&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>『Blog』V2rayN 配置 Hysteria&lt;/a>。&lt;/li>
&lt;li>该项目仍处于成长期，且因开发者精力有限，无法保证 SagerNet 的最新特性得到及时迁移。本人在相关测试后认为该项目已能实现有关 Hysteria 代理的核心功能，可以正常使用，也即，本文不涉及该软件兼容的其他代理类型的介绍，玩家需要根据自己的喜好和需求选择适合自己的产品。&lt;/li>
&lt;/ol>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>如果你已是 Hysteria 其他桌面系统的玩家，那你一定参阅过 &lt;a class="link" href="https://github.com/HyNetwork/hysteria/wiki/%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85" target="_blank" rel="noopener"
>Hysteria 的 Wiki 文档&lt;/a>，你会发现，早在一年前， SagerNet 就以插件的形式支持了 Hysteria 在安卓手机上的运行。然而，该上游项目欠缺维护，实际情况是大量型号的安卓设备并不能正常启动 Hysteria 代理核心，乃至在作者撰文的现在，大量潜在 BUG 仍未得到妥善处理，常见的问题是弹出如下提示：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>缺少插件&lt;/strong>：&amp;hellip; 专有设备提供商篡改了你的安卓系统，使该插件无法使用。&lt;/p>
&lt;/blockquote>
&lt;p>那么，该主角出场了！&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri" target="_blank" rel="noopener"
>Matsuri&lt;/a>，是一个用 Kotlin 编写的 Android 代理工具链，是 &lt;a class="link" href="https://github.com/SagerNet/SagerNet" target="_blank" rel="noopener"
>SagerNet&lt;/a> 的一个子分支。Matsuri 继承了 SagerNet 的诸多优良特性，并在此基础上修补了一些历史遗留问题。相关内容可访问 Matsuri 仓库文档，本文仅介绍有关 Hysteria 代理核心相关的内容。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="下载-matsuri">下载 Matsuri&lt;/h3>
&lt;p>Matsuri 支持从 &lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri/releases" target="_blank" rel="noopener"
>GitHub Releases&lt;/a> 以及 &lt;a class="link" href="https://play.google.com/store/apps/details?id=moe.matsuri.lite" target="_blank" rel="noopener"
>Google Play&lt;/a> 两种途径下载。目前，谷歌商店上架的版本与 GitHub 发行版的版本号一致，两者均支持在线更新。如果条件允许，从谷歌商店下载比较方便。&lt;/p>
&lt;h4 id="从-github-下载">从 GitHub 下载&lt;/h4>
&lt;p>访问 &lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri/releases" target="_blank" rel="noopener"
>GitHub Releases&lt;/a> ，下载最新发行版即可。主流的安卓手机适合使用 &lt;code>arm64-v8a&lt;/code> 类型 APK 客户端。&lt;/p>
&lt;h4 id="从-google-play-下载">从 Google Play 下载&lt;/h4>
&lt;p>访问内联链接 &lt;a class="link" href="https://play.google.com/store/apps/details?id=moe.matsuri.lite" target="_blank" rel="noopener"
>Google Play&lt;/a> 或手动搜索关键词 &lt;code>Matsuri Makubaro&lt;/code> 。&lt;/p>
&lt;figure align="center">
&lt;img src="image-20220831131748008.png" alt=" Download CMFA release arm64-v8a." width="33%"/>&lt;br>
&lt;/figure>
&lt;h3 id="导入-hysteria-节点">导入 Hysteria 节点&lt;/h3>
&lt;p>此处推荐的操作是先导入一个可用的 Hysteria 节点，再进行插件的（自动）安装。&lt;/p>
&lt;p>与同世代项目操作逻辑一致，Matsuri 支持从二维码，剪切板，配置文件以及手动编辑 4 种方式导入代理。推荐从剪切板导入 Hysteria 节点分享链接。&lt;/p>
&lt;h3 id="下载-hysteria-plugin">下载 Hysteria-Plugin&lt;/h3>
&lt;p>选中导入的节点，点击下方的启动开关，此时会弹出如下警告交互框：&lt;/p>
&lt;div align="center">&lt;img src="image-20220831133400876.png" alt="image-20220831133400876" style="zoom: 25%;" />&lt;/div>
&lt;p>点击「下载」自动打开浏览器前往 &lt;a class="link" href="https://github.com/MatsuriDayo/plugins/releases" target="_blank" rel="noopener"
>Hysteria 插件页面&lt;/a>，根据你自己的设备情况选择最新发行版的软件即可。如骁龙系列产品通常选择 &lt;code>arm64-v8a.apk&lt;/code>，相关截屏如下所示：&lt;/p>
&lt;div align="center">
&lt;img src="image-20220831133813986.png" alt="image-20220831133813986" style="zoom: 15%;" />
&lt;img src="image-20220831133819439.png" alt="image-20220831133819439" style="zoom:15%;" />
&lt;/div>
下载完后正常安装即可，不要点击多余的东西。
&lt;div align="center">&lt;img src="image-20220831134255535.png" alt="image-20220831134255535" style="zoom:25%;" />&lt;/div>
&lt;h3 id="配置-matsuri-代理核心">配置 Matsuri 代理核心&lt;/h3>
&lt;h4 id="解除插件限制">解除插件限制&lt;/h4>
&lt;p>首先，下载好的 plugin 在桌面上不显示快捷方式，需要在你自己设备中的「应用管理」中查找（不同设备操作路径不一致，此处不多赘述，大体上从设置界面进入）Hysteria Plugin，如下图所示：&lt;/p>
&lt;div align="center">
&lt;img src="image-20220831134752294.png" alt="image-20220831134752294" style="zoom:25%;" />
&lt;img src="image-20220831134958164.png" alt="image-20220831134958164" style="zoom:25%;" />
&lt;/div>
&lt;h4 id="解除主程序限制">解除主程序限制&lt;/h4>
&lt;p>同样，需要在应用信息界面调整 Matsuri 的软件权限。具体来说有 3 点，联网权限，自启动以及省电策略。&lt;/p>
&lt;p>最后，你需要锁定驻台进程，防止一键清除后台缓存时退出代理。&lt;/p>
&lt;div align="center">&lt;img src="image-20220831135551288.png" alt="image-20220831135551288" style="zoom:25%;" />&lt;/div>
&lt;h4 id="启用-http-入站">启用 HTTP 入站&lt;/h4>
&lt;p>回到主程序界面，从侧边栏中进入到「设置」界面，下滑找到「入站设置」板块，勾选「启动 HTTP 入站」。&lt;/p>
&lt;p>软件默认的 SOCKS5 入站代理端口为 2080，本地 DNS 端口为 6540，HTTP 代理端口为 9080。若有端口冲突更改代理端口即可。&lt;/p>
&lt;div align="center">&lt;img src="image-20220831142427900.png" alt="image-20220831142427900" style="zoom:25%;" />&lt;/div>
&lt;h3 id="启动-hysteria-节点">启动 Hysteria 节点&lt;/h3>
&lt;p>配置完成后回到主程序界面，点击启动开关。若节点服务正常，此时已能正常通过代理连接互联网。你可以访问 Google 以及 YouTube 等站点进行行为测试。&lt;/p>
&lt;h2 id="网络优化">网络优化&lt;/h2>
&lt;p>介绍推荐使用的最佳实践方案，可在网络质量较差时明显提升网路冲浪体验，下文未提及的配置项保持默认即可。&lt;/p>
&lt;h3 id="设置">设置&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Matsuri v0.5.2 play&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">软件设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">运行模式&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">VPN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">TUN实现&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Tun2Socket&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">MTU&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1500&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">路由设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">分应用代理&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">域名解析策略&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">AsIs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">启动流量探测&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">IPv6路由&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">禁用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">路由资源更新&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">官方&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">协议设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">复用最大并发&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># If enable&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">DNS设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">增强域名解析&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">远程DNS&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://8.8.8.8/dns-query&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">直连DNS&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https+local://233.5.5.5/dns-query&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">启动DNS路由&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">入站设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">启用HTTP入站&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">追加HTTP代理至VPN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">杂项&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">首选插件提供者&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Matsuri&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="路由规则">路由规则&lt;/h3>
&lt;p>Matsuri 提供了一些默认的路由规则，路由规则的优先级高于分应用代理。改动路由规则和分应用代理都需要重启代理服务才能生效。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">屏蔽QUIC:（屏蔽）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">屏蔽跟踪器（屏蔽）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">屏蔽广告（屏蔽）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">中国Play商店规则（代理）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">中国域名规则（绕过）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">中国IP规则（绕过）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>场景优化：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>通用场景。建议在「设置 - 分应用代理」中&lt;strong>绕过&lt;/strong>「国产应用」并将「中国域名」以及「中国 IP 」的路由规则关闭。你可以借助软件内置的「扫描中国应用」一键添加。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>覆盖某些国产应用中的 IP 位置显示。先保持通用场景设置，再将指定的国产应用从绕过列表中移除。&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>『Blog』Use Hysteria through NekoRay in Windows</title><link>https://blog.echosec.top/p/nekoray-hysteria/</link><pubDate>Fri, 26 Aug 2022 05:51:00 +0800</pubDate><guid>https://blog.echosec.top/p/nekoray-hysteria/</guid><description>&lt;img src="https://blog.echosec.top/p/nekoray-hysteria/finnstark.jpg" alt="Featured image of post 『Blog』Use Hysteria through NekoRay in Windows" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>2022年3月，我们在&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>《V2rayN 配置 Hysteria》&lt;/a> 一文中简要介绍了一种 Windows 环境下借助 V2rayN 运行并管理 Hysteria 代理核心的可视化解决方案。行文中，我们提到了一些该种解决方案未能处理的问题，即，无法将 Hysteria 节点的启动与测试集成到一个 action 上，需要自行添加一个 Socks5 驻台线程并手动运行 hysteria-core 才能完成节点测试。在 V2rayN v5.32 中，软件作者 2dust 使用了一种妥协的方法尝试处理这种需求，但仍不够优雅，且方案可行性有待考究。&lt;/p>
&lt;p>为了达成上述「检测 + 管理」的集成体验，本文介绍一个仍处于成长期的开源项目——&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray" target="_blank" rel="noopener"
>NekoRay&lt;/a>，基于 Qt/C++ 跨平台代理配置管理器。NekoRay 不仅能优雅地解决这个问题，还先于 V2rayN 支持了 &lt;code>hysteria://&lt;/code> 协议头的解析，在一定程度上促进 hysteria 节点的社区传播。&lt;/p>
&lt;div align="center">&lt;img src="nekoray.png" alt="NekoRay 虚拟形象" style="zoom:67%;" />&lt;/div>
&lt;p>本文从「快速上手」及「进阶指南」两个阶段介绍这个项目。你如果已持有一枚可以使用的 hysteria 节点分享链接，那么只需 1 分钟即可完成与启动系统代理有关的一切操作，开箱机用，十分方便。&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>本文最后更新时间 &lt;code>2022-08-26&lt;/code>， 请注意甄别本文中可能过时的内容，谨慎参考。&lt;/p>
&lt;p>本文涉及的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>项目名&lt;/th>
&lt;th>发行版本号&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>HyNetwork/hysteria&lt;/a>&lt;/td>
&lt;td>v1.2.0&lt;/td>
&lt;td>代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray" target="_blank" rel="noopener"
>MatsuriDayo/nekoray&lt;/a>&lt;/td>
&lt;td>v1.4&lt;/td>
&lt;td>图形化客户端&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意 →&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>本文不面向零基础的小白读者，且仅涉及与 NekoRay &lt;strong>Win10+&lt;/strong> 客户端相关的操作演示，hysteria 服务端的配置详见&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>『Blog』V2rayN 配置 Hysteria&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>该项目仍处于成长期，其成熟度仍与 V2rayN 有较大差距。本文仅提供解决方案的演示说明，玩家需要根据自己的喜好和需求选择适合自己的产品。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="下载-nekoray">下载 NekoRay&lt;/h3>
&lt;p>进入 &lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/releases" target="_blank" rel="noopener"
>Releases · MatsuriDayo/nekoray&lt;/a>，下载最新版的 NekoRay Windows 压缩包。免安装，开箱即用。此处假设解压目录为 &lt;code>C:\\nekoray&lt;/code>，则主程序路径为 &lt;code>C:\\nekoray\\nekoray.exe&lt;/code>。&lt;/p>
&lt;h3 id="下载-hysteria-windows">下载 hysteria-windows&lt;/h3>
&lt;p>进入 &lt;a class="link" href="https://github.com/HyNetwork/hysteria/releases" target="_blank" rel="noopener"
>Releases · HyNetwork/hysteria&lt;/a>，下载最新版的 &lt;code>hysteria-windows-amd64.exe&lt;/code>，将其放置在解压后的 NekoRay 配置目录下，例如：&lt;code>C:\\nekoray\\config\\hysteria-windows-amd64.exe&lt;/code>（此处随意，但 config 为核心界面的默认启动路径，这样放置方面找文件）。&lt;/p>
&lt;h3 id="配置-nekoray-代理核心">配置 NekoRay 代理核心&lt;/h3>
&lt;p>持续进入「首选项」「基本设置」「核心」界面，选择 &lt;strong>hysteria-core&lt;/strong> 的绝对路径，即刚下载的 &lt;code>hysteria-windows-amd64.exe&lt;/code> 文件绝对路径。&lt;/p>
&lt;p>选定后切换到「基本设置 - 通用」界面，&lt;strong>将 HTTP 监听端口启用&lt;/strong>。其他设置保持默认，点击确定，保存设置。&lt;/p>
&lt;div align="center">&lt;img src="image-20220826075323108.png" alt="首选项 - 基本设置 - 核心 - hysteria" style="zoom:48%;" />&lt;/div>
&lt;p>需要注意的是，若在后续操作中出现端口重用或冲突的弹窗警告，需要回到「基本设置 - 通用」中修改 Socks 监听端口或 HTTP 监听端口。下图为改变后的端口值：&lt;/p>
&lt;div align="center">&lt;img src="image-20220831145659642.png" alt="image-20220831145659642" style="zoom:67%;" />&lt;/div>
&lt;h3 id="导入-hysteria-节点">导入 hysteria 节点&lt;/h3>
&lt;h4 id="从分享链接或剪切板添加">从分享链接或剪切板添加&lt;/h4>
&lt;p>NekoRay 支持 &lt;code>hysteria://&lt;/code> 协议头的解析，可以直接将订阅链接粘贴进来自动获取节点的配置信息，如下图所示:&lt;/p>
&lt;div align="center">&lt;img src="image-20220826075502047.png" alt="NekoRay - 从剪切板添加 hysteria 节点分享链接" style="zoom: 48%;" />&lt;/div>
&lt;p>值得一提的是，我们在经典的 hysteria 客户端配置文件中设定字段 &lt;code>acl&lt;/code>以及 &lt;code>mmdb&lt;/code> 用以调取分流策略，还能额外设置 &lt;code>recv_window_conn&lt;/code> ，&lt;code>recv_window&lt;/code>以及 &lt;code>resolver&lt;/code> 等参数更细粒度地控制代理行为。但我们观察&lt;code>hysteria://&lt;/code> 的节点分享链接的参数后发现，其只保留了 C/S 通信的必要参数，即 &lt;code>host&lt;/code>，&lt;code>protocol&lt;/code>，&lt;code>auth_str&lt;/code> 等字段。&lt;/p>
&lt;p>显然，在最佳实践中，我们不应在为传播的设计的参数结构体中携带诸如文件路径等奇怪的东西，这会让整个分享体系变得非常冗余，十分不优雅。但我又偏有分流这样的需求怎么办呢？非常简单，我们可以通过 NekoRay 间接地为代理核心提供相关的配置信息（相关操作其实也非常简单，自己玩一玩就会了，具体操作我会在下文的进阶部分补充）。&lt;/p>
&lt;h4 id="手动编辑">手动编辑&lt;/h4>
&lt;p>有关 hysteria 服务端的配置介绍及最佳实践可见&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>另一篇博客&lt;/a>。&lt;/p>
&lt;p>相关配置的注释及生成后的面板预览结果如下图所示：&lt;/p>
&lt;div align="center">&lt;img src="image-20220826074722587.png" alt="NekoRay - Hysteria 配置生成面板" style="zoom: 67%;" />&lt;/div>
&lt;div align="center">&lt;img src="image-20220826075056836.png" alt="NekoRay - Hysteria 配置生成预览" style="zoom:63%;" />&lt;/div>
&lt;p>此处出现了被称为 &lt;code>替换串&lt;/code> 的占位符，即 &lt;code>%mapping_port%&lt;/code> 与 &lt;code>%socks_port%&lt;/code> ，不需要修改，保持默认即可。&lt;/p>
&lt;h3 id="启动-hysteria-节点">启动 hysteria 节点&lt;/h3>
&lt;p>初次使用时，选中目标节点，并依次点击「程序 &amp;ndash; 系统代理 &amp;ndash; 启动系统代理」。当控制台开始持续输出来自 hysteria-core 的日志信息时，说明节点启动成功，你可以访问 Google 或 YouTube 等站点进行行为校验。&lt;/p>
&lt;div align="center">&lt;img src="image-20220826081449835.png" alt="image-20220826081449835" style="zoom:48%;" />&lt;/div>
&lt;p>值得一提的是，NekoRay 的 &amp;lt;系统代理启动&amp;gt; 及 &amp;lt;代理核心运行&amp;gt; 的业务是分离的，也即对着节点敲回车的作用是启动/重启代理核心，只有勾选「启动系统代理」后才能连接互联网，这点与 V2rayN 相似。&lt;/p>
&lt;h3 id="测试-hysteria-节点">测试 hysteria 节点&lt;/h3>
&lt;p>在合理配置前置代理选项后，你可以将「节点激活 + 节点测试」集成到一个 action 中，这比 V2rayN 目前(~v5.32)的解决方案要更加优雅。&lt;/p>
&lt;p>若你按照本文档介绍的步骤走，你只需要在默认分组状态下，依次点击「服务器 – 当前分组」即可调出测试控件的接口，如下图所示：&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/nekoray-hysteria/image-20220826082130683.png"
width="323"
height="224"
srcset="https://blog.echosec.top/p/nekoray-hysteria/image-20220826082130683_hu0a171cb7f6b55220a14afee1c80b5a6a_6909_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/nekoray-hysteria/image-20220826082130683_hu0a171cb7f6b55220a14afee1c80b5a6a_6909_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="346px"
>&lt;/p>
&lt;p>NekoRay 集成了一些主流的测试工具，直接运行「完整测试」即可。测试包含以下四个项目（点击跳转源码）：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">测试项目&lt;/th>
&lt;th style="text-align:center">简介&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L204" target="_blank" rel="noopener"
>Latency 延迟测试&lt;/a>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L247" target="_blank" rel="noopener"
>下载速度测试&lt;/a>&lt;/td>
&lt;td style="text-align:center">使用代理下载 10MiB 文件，计算下载速度。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L216" target="_blank" rel="noopener"
>入口IP&lt;/a>， &lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L229" target="_blank" rel="noopener"
>出口IP&lt;/a>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L263" target="_blank" rel="noopener"
>NAT类型&lt;/a>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>常见的（玄学）速度测试分布如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>0~5 MiB/s&lt;/code>，绝大多数免费节点，山路十八弯的自建节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>4~6 MiB/s&lt;/code>，优选IP，反代优选IP，机场普通节点，自建普通线路节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>~10MiB/s&lt;/code>，机场上游质量节点，自建优质线路节点，hysteria+自建普通线路节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;gt;18MiB/s&lt;/code>，机场上游至最贵一档的机场节点，hysteria+自建优质线路节点（家宽 200Mpbs 起且服务端未限制 100Mbps 的下行速度）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>上不封顶&lt;/code>，hysteria 一般用于普通或劣质线路的环境改善，在G口档做 UDP 发包是非常睿智的行为。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>测试的输出结果如下图所示：&lt;/p>
&lt;div align="center">&lt;img src="image-20220826083252485.png" alt="image-20220826083024670" style="zoom:48%;" />&lt;/div>
&lt;p>我们在经典的 hysteria 代理拓扑中使用的是最简单的 QUIC 直连方案，也即入口地址 In 和出口地址 Out 是相同的，其值均为你的代理服务器的真实 IP。&lt;/p>
&lt;p>需要注意的是，hysteria 的通信协议是基于 quic-go 实现的，TCPing 测试不可用。&lt;/p>
&lt;h2 id="进阶教程">进阶教程&lt;/h2>
&lt;blockquote>
&lt;p>（必读）官方文档：&lt;a class="link" href="https://matsuridayo.github.io/n-configuration/" target="_blank" rel="noopener"
>Nekoray-配置 - Matsuri &amp;amp; NekoRay &lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="vpn模式">VPN模式&lt;/h3>
&lt;h3 id="服务器组">服务器组&lt;/h3>
&lt;p>NekoRay 以组的形式管理和编排代理对象，因此，所有的测试都是基于组进行的，即，所有组内节点都会被测。&lt;/p>
&lt;h3 id="必读分流策略">[必读]分流策略&lt;/h3>
&lt;p>在 Windows 上，NekoRay 默认以全局代理的形式启动。因此，我们需要通过设置基础的路由策略来提升网上冲浪的体验，否则会有大量的代理流量被浪费，还会无端加大断流风险。&lt;/p>
&lt;p>此处举个简单的例子说明设置分流的必要性。如果你使用过 Bilibili 你应该知道 B站番剧对「不同地区」用户有着不一样的版权策略，而界定「不同地区」用户的规则是基于「访客IP」编写的（目前），即，使用不同的 IP 访问 B站，推荐系统，搜索引擎，页面布局等服务的响应均有所不同。&lt;/p>
&lt;ul>
&lt;li>US Global Proxy&lt;/li>
&lt;/ul>
&lt;img src="image-20220831151213827.png" alt="image-20220831151213827" style="zoom:33%;" />
&lt;ul>
&lt;li>GEOIP-CN Bypass（简单理解为访问B站不用代理）&lt;/li>
&lt;/ul>
&lt;img src="image-20220831151428355.png" alt="image-20220831151428355" style="zoom:33%;" />
&lt;p>访问国内站点却绕行国外代理除了在评论区装逼我想不出任何动机。由于本篇文章属于「入门介绍」，不过多深入自定义规则或高级路由分流策略之类的东西，只需要按照下图所示操作开启 NekoRay 预设的路由规则即可。&lt;/p>
&lt;p>&lt;strong>TL;TD&lt;/strong>&lt;/p>
&lt;p>进入「首选项 &amp;ndash; 路由 VPN 设置」，选择预设「绕过局域网和大陆」，确定保存，重启代理。&lt;/p>
&lt;div align="center">&lt;img src="image-20220831152027353.png" alt="image-20220831152027353" style="zoom: 67%;" />&lt;/div></description></item><item><title>『Blog』爬虫之巅，畅想「矛」与「盾」的未来</title><link>https://blog.echosec.top/p/spider_performance/</link><pubDate>Thu, 07 Jul 2022 02:22:14 +0800</pubDate><guid>https://blog.echosec.top/p/spider_performance/</guid><description>&lt;img src="https://blog.echosec.top/p/spider_performance/pexels-geometric-photography-13271914.jpg" alt="Featured image of post 『Blog』爬虫之巅，畅想「矛」与「盾」的未来" />&lt;p>(填坑中&amp;hellip;)&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>矛与盾的界定，双向时间线，停一下，畅想未来。&lt;/p>
&lt;h2 id="captcha的前世今生">CAPTCHA的前世今生&lt;/h2>
&lt;h3 id="字符验证码">字符验证码&lt;/h3>
&lt;p>以 text-to-image 为例&lt;/p>
&lt;h3 id="行为验证码">行为验证码&lt;/h3>
&lt;p>以国内的极验、网易易盾、阿里安全、京东安全为例，涉及高强度的逆向防护，滑动拼图，文字点选，推理拼图，轨迹涂抹，语音验证等丰富的行为验证方案，相关技术步入「&lt;strong>感官挑战&lt;/strong>」阶段。&lt;/p>
&lt;p>曾被信息技术从业人员戏称为 HelloWorld 的 request-based Spider 早已成为村头树下的豚骨拉面。能否处理行为验证，成为爬虫开发者的分水岭。&lt;/p>
&lt;h3 id="问答式验证码">问答式验证码&lt;/h3>
&lt;p>以国外的 hCAPTCHA，reCAPTCHA v2，等前沿服务为例，涉及认知问答、AI对抗、行为检测多点防御。相关技术上升到全新的「&lt;strong>人机挑战&lt;/strong>」阶段。此阶段给出的挑战难题足以放倒人类。&lt;/p>
&lt;h3 id="我不是人类">我，不是人类&lt;/h3>
&lt;p>以国外的 hCAPTCHA，reCAPTCHA v3，Talon service of Epic 等前沿服务为例，涉及驱动特征检测，运动数据检测，威胁等级计算，访客信用水平统计等技术，此处涉及的多种检测策略在国内多以「无感验证」统称。&lt;/p>
&lt;h2 id="无畏的挑战者">无畏的挑战者&lt;/h2>
&lt;p>领域技术迭代过快，乃至自学爬虫的玩家，驾校网培生以及跨行业的零基础开发者，抱着刚学会即淘汰的《Python爬虫错题本》欲哭无泪。这类开发者在这场逐渐内卷的博弈中连「小镇做题家」都算不上，充其量只能是「乡村错题本」。&lt;/p>
&lt;p>各位读者可以脑补以下颇有戏剧性的演化场景：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>刚学会网络请求以及基础的伪装，发现获取不到数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>刚学会如何逆向前端代码，发现实战中的出题人是行业中最聪明的一批算法工程师&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发现无法绕过，需要额外学习使用 &lt;strong>Selenium&lt;/strong>/WebDriver 发起&lt;strong>模拟请求&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发现即使是模拟请求，也“不得不”处理行为验证。于是，开发者开始像机器一样思考，制作能够识别图像，识别语音，理解语义的AI，让网络驱动携带着这些模块上前线答题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一段时间后，开发者逐渐发现即使 AI 能够答对题目，验证仍无法通过，折腾一阵子后发现需要像人类一样思考，制作符合人类上网习惯的鼠标轨迹&lt;strong>行为&lt;/strong>链，然后呢，学都学了，顺带把键盘输入的模仿也专精了吧！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>过了不久，开发者发现一切都回到了原点，但凡是 Selenium 启动的网页，即使是自己手动答题也无法通过验证。折腾一阵子后发现需要让机器人认为「我」是人，开始研究 Chrome 开发者工具以及 BiDi 通信，隐藏浏览器的各项异常特征，尽可能地让 Selenium 启动的网页与手动打开的&lt;strong>网页特征&lt;/strong>一致，甚至不惜自行编译浏览器客户端。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>到此，开发者回顾往昔，发现路上已有绝大多数的同道之人倒下了。但秉持“不忘初心”的信念，开发者仍需在「自证为人」的道路上继续前行。再过不久，开发者已能熟练使用与网页驱动相关的工具技术，随时都能制作深度学习赋能的高性能机器人，秒解所有行为验证难题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>某一天，「问答式验证」出现了，在这场以「常识对决」为游戏规则的博弈中，开发者受到了来自「彼岸」的满满恶意，如果自己不知道这些生而为人就该知道的「常识」，自然也无法培养出优秀的小镇做题家。&lt;/p>
&lt;p>至此，作为防守方的「挨打人」开始主动出击，在世界各地崭露头角，&lt;strong>人机挑战&lt;/strong>时代拉开序幕。&lt;/p>
&lt;p>回望往昔，这是一场尚无硝烟的战争，本是机器人之间的对抗，上升为「挑战者」与「彼岸玩家」之间的对决；本是脑力劳动主导的工作，逐渐演化成了纯粹的体力劳动。无畏的挑战者与彼岸的玩家们凭借着自己对工作负责的态度以及对行业的热爱，在场无限轮回的游戏中，推动着人机验证领域高速发展。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>时至今日，「挑战者」与「彼岸玩家」共同开辟了计算机网络空间安全的一个全新分支。在这场对决中，它们分别饰演着「矛」与「盾」的角色，在对立统一中，它们互相吸取和利用有利于自己的因素而得到发展，在矛盾斗争中，它们相互排斥不断变化最终破坏自身统一，在这场形式多样性的对抗中，矛盾双方协同运动，融合成一个新事物。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>从上帝视角来看，这是一场颇具戏剧性的博弈。如果没有「搅局者」的加入，「反爬虫工程师」至今仍会是地球上的一小股极客团体，但我也无法想象没有人机验证的互联网该如何良性发展。&lt;/p>
&lt;p>当下，对抗恶意流量的安全团队仍是所有技术岗位中最神秘的一批人，有时他们化身白客，守护资本家和客户仅有的数字资产；但有时他们化身黑客，能够组织规模庞大的流量淹没仍处于萌芽阶段的潜在竞争对手。&lt;/p>
&lt;p>这群秉持着技术中立精神却向网络空间安全不断发起挑战的神秘人到底什么来头？风云激荡的二十年里，网络爬虫的形式经历了怎样的升级迭代？本章节以顺向时间线的形式，浅聊一下作为「矛」的网络机器人技术及其相关的行业领军人物。&lt;/p>
&lt;p>&lt;em>待序&amp;hellip;&lt;/em>&lt;/p>
&lt;h3 id="追赶时代的乡村错题本">追赶时代的乡村错题本&lt;/h3>
&lt;h3 id="来自网络驱动的虚假流量">来自网络驱动的虚假流量&lt;/h3>
&lt;h3 id="像人类一样思考">像人类一样思考&lt;/h3>
&lt;h3 id="我不是机器人">我，不是机器人&lt;/h3>
&lt;h2 id="既见未来为何不拜">既见未来，为何不拜？&lt;/h2>
&lt;h3 id="灰度空间的失衡与洗牌">灰度空间的失衡与洗牌&lt;/h3>
&lt;h3 id="防火长城与大航海时代">防火长城与大航海时代&lt;/h3>
&lt;h2 id="畅想矛与盾的未来">畅想「矛」与「盾」的未来&lt;/h2>
&lt;h3 id="年轻人的游戏但是适老化">年轻人的游戏，但是适老化&lt;/h3>
&lt;h3 id="熊掌与鱼兼收并蓄的农场主">熊掌与鱼，兼收并蓄的农场主&lt;/h3>
&lt;h3 id="搅局者web30的韭菜收割机">搅局者，Web3.0的韭菜收割机&lt;/h3>
&lt;h3 id="挣脱形态桎梏奔向虚拟现实社会">挣脱形态桎梏，奔向虚拟现实社会&lt;/h3>
&lt;h3 id="图灵测试20意识与人格的考验">图灵测试2.0，意识与人格的考验&lt;/h3></description></item><item><title>『Blog』VMware 虚拟机流量代理</title><link>https://blog.echosec.top/p/vmware-proxy/</link><pubDate>Sat, 07 May 2022 13:15:46 +0800</pubDate><guid>https://blog.echosec.top/p/vmware-proxy/</guid><description>&lt;img src="https://blog.echosec.top/p/vmware-proxy/unsplash.jpg" alt="Featured image of post 『Blog』VMware 虚拟机流量代理" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本系列博客以 VMware Workstation 16 pro 为例，分享在 Windows11 上启动 Ubuntu 20.04 LTS 虚拟机进行 Python3 项目开发的最佳实践。本章节内容涉及网络连接中较为关键的环节 —— 流量代理。&lt;/p>
&lt;p>推荐阅读：&lt;/p>
&lt;p>&lt;a class="link" href="http://localhost:11014/p/python-best-practices-ide/" target="_blank" rel="noopener"
>『Blog』Python 应用开发最佳实践@环境搭建篇&lt;/a>&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;ol>
&lt;li>本文首发于 &lt;code>2022-05&lt;/code>，如果你是若干年后到访的读者，请注意甄别文章中可能过时的内容，如有其他问题可在评论区提出；&lt;/li>
&lt;li>本文不面向零基础的小白读者，不会涉及软件下载安装等细枝末节的内容，不再赘述相关解决方案中涉及到的主流软件的使用细节。&lt;/li>
&lt;/ol>
&lt;h2 id="虚拟机设置">虚拟机设置&lt;/h2>
&lt;p>在 VMware 「虚拟机设置」中修改「网络适配器（网络连接）」，选择「桥接模式」但不复制物理网络连接状态。这是接管虚拟机代理流量最简单的方式，后文会详细介绍一些基于桥接模式的主流的流量代理解决方案。&lt;/p>
&lt;h2 id="局域网代理方案">局域网代理方案&lt;/h2>
&lt;h3 id="v2rayn">v2rayN&lt;/h3>
&lt;p>介绍使用 &lt;a class="link" href="https://github.com/2dust/v2rayN/releases" target="_blank" rel="noopener"
>v2rayN&lt;/a> 接管虚拟机全局流量的方法。操作前请确保虚拟机网络已被设为「桥接模式」。&lt;/p>
&lt;p>注意：使用的演示版本为 &lt;code>v5.16&lt;/code>；在这个版本中，v2rayN 区分了本地代理以及局域网代理所用的监听的端口。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>启动主机系统代理&lt;/p>
&lt;p>在 v2rayN 中主机上开启「自动配置系统代理」，用你喜欢的方式确认系统代理的运行状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动局域网代理&lt;/p>
&lt;p>在 v2rayN 中依次点击「设置」「参数设置」在「Core：基础设置」中开启 &lt;code>允许来自局域网的连接&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看无线局域网适配器 WLAN&lt;/p>
&lt;p>在主机命令行窗口输入 &lt;code>ipconfig&lt;/code>，找到其中的无线局域网适配器 WLAN 的 IPv4 地址。如果你是有线连接上网，寻找「以太网适配器」的 IPv4 地址即可（可能会打印很多选项，找有默认网关的那一条）。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align='center'>&lt;img src="image-20220507122059354.png" alt="image-20220507122059354" style="zoom:50%;" />&lt;/div>
&lt;ol start="4">
&lt;li>
&lt;p>查看 v2rayN 的局域网代理端口&lt;/p>
&lt;p>通常在软件视图的最下方的边框处可见，找到 HTTP 以及 SOCKS 的局域网代理端口。若你使用的是更早的版本，默认情况下的代理端口是 &lt;code>http:10809 socks:10808&lt;/code>，而在 &lt;code>v5.16&lt;/code> 或更高版本中，软件区分了系统代理和局域网代理，此时的局域网代理端口默认是 &lt;code>http:10811 socks:10810&lt;/code>，如下图所示。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align='center'>&lt;img src="image-20220507120921780.png" alt="image-20220507120921780" style="zoom: 33%;" />&lt;/div>
&lt;ol start="5">
&lt;li>
&lt;p>配置虚拟机网络代理&lt;/p>
&lt;p>打开 Ubuntu 的网络设置，将「网络代理」切换为手动模式，将我们刚才搜集到的（http 以及 socks）路由参数填入即可。下图为参考的填写格式，这与你的网络情况一定不一样，仅供参考。&lt;/p>
&lt;div align="center">&lt;img src="image-20220507122654416.png" alt="image-20220507122654416" style="zoom: 67%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>检查虚拟机网络连接&lt;/p>
&lt;p>查看能否正常访问&lt;a class="link" href="https://www.youtube.com" target="_blank" rel="noopener"
>Youtube&lt;/a>。此外，你还可以 &lt;a class="link" href="http://www.ip111.cn/" target="_blank" rel="noopener"
>显示查询自己的IP地址 (ip111.cn)&lt;/a> 。&lt;/p>
&lt;p>使用系统自带的 Firefox 浏览器访问 Youtube 的结果如下图所示：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507123156186.png" alt="image-20220507123156186" style="zoom:20%;" />&lt;/div>
&lt;h3 id="clash-for-windows">Clash for Windows&lt;/h3>
&lt;p>介绍使用 &lt;a class="link" href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener"
>Clash for Windows&lt;/a> 接管虚拟机全局流量的方法，其他「类 Clash」产品均可举一反三。操作前请确保虚拟机网络已被设为「桥接模式」。&lt;/p>
&lt;p>注意：以下使用的演示版本为 &lt;code>Clash for Windows v0.19.17&lt;/code> ，&lt;code>Clash Core 2022.04.17 Premium(10538)&lt;/code>，所有设置均保持“出厂状态” 。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>启动主机系统代理&lt;/p>
&lt;p>在 Clash for Windows 中启动「System Proxy」，用你喜欢的方式确认系统代理的运行状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动局域网代理&lt;/p>
&lt;p>在 Clash for Windows 中启动「Allow LAN」，并将鼠标移动到「Allow LAN」的位置上，悬停，可以看到窗口弹出了一则提示信息，如下图所示。你需要记下这个 &lt;code>WLAN IPv4&lt;/code> 以及 &lt;code>Port&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507231335305.png" alt="image-20220507231335305" style="zoom:37%;" />&lt;/div>
&lt;ol start="3">
&lt;li>
&lt;p>配置虚拟机网络代理&lt;/p>
&lt;p>打开 Ubuntu 的网络设置，将「网络代理」切换为手动模式，将我们刚才搜集到的路由参数填入即可。下图为参考的填写格式，仅供参考。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507233025258.png" alt="image-20220507233025258" style="zoom: 33%;" />&lt;/div>
&lt;ol start="4">
&lt;li>
&lt;p>检查虚拟机网络连接&lt;/p>
&lt;p>查看能否正常访问一些热门站点。此外，你还可以 &lt;a class="link" href="http://www.ip111.cn/" target="_blank" rel="noopener"
>显示查询自己的IP地址 (ip111.cn)&lt;/a> 。&lt;/p>
&lt;p>使用 Firefox 访问 Google Scholar 检索关键词 &lt;code>Neurocompositional computing&lt;/code> 的结果如下图所示：&lt;/p>
&lt;div align="center">&lt;img src="image-20220507233450859.png" alt="image-20220507233450859" style="zoom: 30%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h2 id="错误排查">错误排查&lt;/h2>
&lt;h3 id="浏览器使用系统代理">浏览器使用系统代理&lt;/h3>
&lt;p>如果上文所述的局域网代理方案无法达到预期，你可能需要进一步调整 Firefox 浏览器代理。&lt;/p>
&lt;p>打开浏览器的「Settings」并依次访问「General」「Network Settings」。在弹出的「Connection Settings」中将代理选项切换至「use system proxy settings」也即使用系统代理，点击「OK」保存配置。新建标签页检查网络连接。&lt;/p>
&lt;p>（当然，如果你是用的是其他浏览器产品，你不应该在 Firefox 里面配置浏览器代理&amp;hellip;&amp;hellip;&lt;/p>
&lt;div align="center">&lt;img src="image-20220507124058496.png" alt="image-20220507124058496" style="zoom:37%;" />&lt;/div>
&lt;h3 id="虚拟机网络代理设置">虚拟机网络代理设置&lt;/h3>
&lt;p>若你在调整 Firefox 浏览器代理为「系统代理」后仍无法正常访问外网，很有可能是你的 IPv4 地址或局域网代理端口填写错误，也有可能是你的软件没有开启「允许局域网连接」的选项，控制变量逐一排查即可。&lt;/p>
&lt;h3 id="局域网动态-ipv4">局域网动态 IPv4&lt;/h3>
&lt;p>如果你出现「昨天都可以上网今天怎么就不行了」的情况，请检查你的 &lt;code>WLAN IPv4&lt;/code> 是否有变化。&lt;/p>
&lt;p>通常情况下国内家用终端物联网设备的局域网 &lt;code>IPv4 地址&lt;/code> 是动态分发的，如果你的物联网设备（如笔记本）从之前的 WIFI 热点（如卧室）中断出重连到其他的 WIFI 热点下（如星巴克），局域网 &lt;code>IPv4 地址&lt;/code> 很可能发生变化。此时按照流程重新检查一下变更后的地址，手动修改虚拟机的网络代理既可。&lt;/p></description></item><item><title>『Blog』台媒，信任危机！</title><link>https://blog.echosec.top/p/digital-news-report-2021-taiwan/</link><pubDate>Sun, 10 Apr 2022 12:13:43 +0800</pubDate><guid>https://blog.echosec.top/p/digital-news-report-2021-taiwan/</guid><description>&lt;img src="https://blog.echosec.top/p/digital-news-report-2021-taiwan/Snipaste_2022-04-10_12-35-43.png" alt="Featured image of post 『Blog』台媒，信任危机！" />&lt;h2 id="背景介绍">背景介绍&lt;/h2>
&lt;p>路透社数字新闻报告（ &lt;a class="link" href="https://reutersinstitute.politics.ox.ac.uk/" target="_blank" rel="noopener"
>Reuters Digital News Report&lt;/a> ）会在每年度的国家市场数据（ &lt;a class="link" href="https://reutersinstitute.politics.ox.ac.uk/digital-news-report/2021/country-and-market-data" target="_blank" rel="noopener"
>Country and market data&lt;/a> ）中统计部分地区的常驻人口对当地主流媒体的信任度以及了解新闻资讯的方式与渠道。&lt;/p>
&lt;p>该份报告从 2012 至今已将调研对象逐渐拓展至 46 个国家或地区，并于 2017 年首次将台湾市场纳入调查范围。立项以来，台湾市场报告均由国立台湾大学的林麗雲（ &lt;a class="link" href="https://sites.google.com/site/lihyunfield/" target="_blank" rel="noopener"
>Lihyun Lin&lt;/a> ） 主笔。&lt;/p>
&lt;h2 id="媒体整体信任度">媒体整体信任度&lt;/h2>
&lt;p>历年报告显示，台媒新闻信任度常居倒数。2017~2021 台湾民众对当地新闻媒体的整体信任度（ &lt;code>Trust in news overall&lt;/code> ）分别为 31%(30/36) ，32%(32/37)，28%(34/38)，24%(38/40)，31%(42/46)，前为算法得分，括号内为得分排位。&lt;/p>
&lt;p>2021 年度报告显示，在统计的 15 个媒体中，最受台湾民众信赖的当地媒体是「&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E5%85%AC%E5%85%B1%E9%9B%BB%E8%A6%96%E5%8F%B0" target="_blank" rel="noopener"
>公共电视台&lt;/a> (52%)」「&lt;a class="link" href="https://www.businessweekly.com.tw/" target="_blank" rel="noopener"
>商业周刊&lt;/a>（51%）」以及「&lt;a class="link" href="https://www.cw.com.tw/" target="_blank" rel="noopener"
>天下杂志&lt;/a>（51%）」。被台湾本地人戏称为“地摊报纸”的「&lt;a class="link" href="https://tw.appledaily.com/home/" target="_blank" rel="noopener"
>蘋果日報&lt;/a>（37%）」位列“第四”。此外，最不受待见的媒体则是「三立新闻台」不信任度最高，达到了 26%。&lt;/p>
&lt;iframe title="Brand trust scores" aria-label="Stacked Bars" id="datawrapper-chart-j0Cbb" src="https://datawrapper.dwcdn.net/j0Cbb/4/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="727">&lt;/iframe>&lt;script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(e){if(void 0!==e.data["datawrapper-height"]){var t=document.querySelectorAll("iframe");for(var a in e.data["datawrapper-height"])for(var r=0;r&lt;t.length;r++){if(t[r].contentWindow===e.source)t[r].style.height=e.data["datawrapper-height"][a]+"px"}}}))}();&lt;/script>
&lt;p>Lihyun Lin 在报告中强调「在特殊时期，民众对新闻的整体信任度相较去年上升了七个百分点。在我们的调查中，&lt;code>Public Television Service&lt;/code> 仍然是最受信任的信源，其次是经济新闻类媒体（常见的如《天下杂志》和《商业周刊》）。在两极分化的媒体环境中，其余的新闻品牌被一个群体信任，但被另一个群体不信任」。&lt;/p>
&lt;p>相信了解中国国情的各位读者都知道这里的「两极」具体涵义，此处不多赘述，而「特殊时期」指的则是新冠疫情爆发以来的这段时期，也即 Lihyun Lin 在综述中提到的「台湾民众对新闻的信任度历来很低，但媒体在强调公共卫生信息方面的作用可能促使今年的信任度大幅上升至31%（+7个百分点）」。&lt;/p>
&lt;h2 id="快讯平台使用频率">快讯平台使用频率&lt;/h2>
&lt;p>该年度报告还指出，台湾民众于线下渠道了解新闻时，使用率最高的是「&lt;a class="link" href="https://news.tvbs.com.tw/" target="_blank" rel="noopener"
>TVBS News&lt;/a>」使用率最低的是「华视全球资讯」；线上使用率最高的平台是「Yahoo! News」「&lt;a class="link" href="https://www.ettoday.net/" target="_blank" rel="noopener"
>ETtoday online&lt;/a>」以及「&lt;a class="link" href="https://today.line.me/tw/v2/tab?fbclid=IwAR0lFEnvWLj-UjCmAe_QYNtlNkMOXqnX6o-aAQNCL_ftSrHjAl71NyjZvhQ" target="_blank" rel="noopener"
>Line News&lt;/a>」，使用率最低的是「风暴传媒」以及「台湾电视新闻」。&lt;/p>
&lt;iframe title="Weekly reach - offline" aria-label="Split Bars" id="datawrapper-chart-H3T1E" src="https://datawrapper.dwcdn.net/H3T1E/1/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="662">&lt;/iframe>&lt;script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"])for(var e in a.data["datawrapper-height"]){var t=document.getElementById("datawrapper-chart-"+e)||document.querySelector("iframe[src*='"+e+"']");t&amp;&amp;(t.style.height=a.data["datawrapper-height"][e]+"px")}}))}();&lt;/script>
&lt;iframe title="Weekly reach - online" aria-label="Split Bars" id="datawrapper-chart-cLnie" src="https://datawrapper.dwcdn.net/cLnie/2/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="658">&lt;/iframe>&lt;script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(e){if(void 0!==e.data["datawrapper-height"]){var t=document.querySelectorAll("iframe");for(var a in e.data["datawrapper-height"])for(var r=0;r&lt;t.length;r++){if(t[r].contentWindow===e.source)t[r].style.height=e.data["datawrapper-height"][a]+"px"}}}))}();&lt;/script>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;p>&lt;a class="link" href="https://reutersinstitute.politics.ox.ac.uk/digital-news-report/2021/taiwan" target="_blank" rel="noopener"
>Taiwan | Digital News Report 2021&lt;/a>&lt;/p></description></item><item><title>『Blog』Hysteria Advanced</title><link>https://blog.echosec.top/p/hysteria-advanced/</link><pubDate>Sun, 10 Apr 2022 12:12:09 +0800</pubDate><guid>https://blog.echosec.top/p/hysteria-advanced/</guid><description>&lt;img src="https://blog.echosec.top/p/hysteria-advanced/207983.jpg" alt="Featured image of post 『Blog』Hysteria Advanced" />&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>截至 &lt;code>2022-04-05&lt;/code> 该解决方案仍处于测试阶段，未来短期内会有大量的版本更新，请注意甄别本文中可能过时的内容，谨慎参考。如有错误歧义之处欢迎指正。&lt;/p>
&lt;h2 id="进阶配置">进阶配置&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/HyNetwork/hysteria/wiki/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95" target="_blank" rel="noopener"
>Hysteria 高级用法&lt;/a>的拓展描述，原文已有的不再赘述。&lt;/p>
&lt;p>&lt;span id="advanced">&lt;/span>&lt;/p>
&lt;h3 id="linux-服务端配置">Linux 服务端配置&lt;/h3>
&lt;h3 id="windows-客户端配置">Windows 客户端配置&lt;/h3>
&lt;p>必填参数为 &lt;code>server&lt;/code>（或 &lt;code>host&lt;/code> and &lt;code>port&lt;/code> ） ，&lt;code>up_mbps &lt;/code> 以及 &lt;code>down_mbps&lt;/code>，其余配置与服务端的设置相匹配既可。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>server&lt;/code>：服务器地址。如&lt;code>domain.com:52025&lt;/code>，在部分图形化代理软件中将此项拆分成「服务器」与「服务器端口」，注意甄别。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>protocol&lt;/code>：传输协议。可选项为 &lt;code>udp&lt;/code>，&lt;code>wechat-video&lt;/code>，&lt;code>faketcp&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>up_mbps&lt;/code>：最大上行（Mbps）。此项限制的是当前客户端的最大上传速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>down_mbps&lt;/code>：最大下行（Mbps）。此项限制的是当前客户端的最大下载速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>retry&lt;/code>：启动时连接服务器异常后的重试次数。0 为不重试，负数为无限重试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>retry_interval&lt;/code>：重试间隔，单位为秒。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>acl&lt;/code>：分流规则。通过一系列语法决定访问指定「端点」的流量是否是用代理。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>mmdb&lt;/code>：MaxMind IP 库。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>obfs&lt;/code>：混淆密码。与服务端保持一致。一般不必混淆通信。若开启混淆，极端情况下会略微影响性能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>auth&lt;/code> | &lt;code>auth_str&lt;/code>：认证类型，其值通常称为「认证载荷」。二选一，与服务端保持一致。&lt;code>auth&lt;/code> 为 BASE64 验证密钥，&lt;code>auth_str&lt;/code> 为自定义的认证字符串。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>alpn&lt;/code>：QUIC TLS ALPN。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>server_name&lt;/code>：服务器名称指示，用于验证服务端的 hostname。填写服务端域名既可（申请证书时解析的域名）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>insecure&lt;/code>：允许不安全的连接。禁用证书检查，启用后该配置安全性相当于明文。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ca&lt;/code>：自定义证书（链）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>recv_window_conn&lt;/code>：QUIC 连接接收窗口。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>recv_window&lt;/code>：QUIC 流接收窗口。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>disable_mtu_discovery&lt;/code>：禁用路径MTU发现。此处的 &lt;code>mtu_discovery&lt;/code> 指的是 &lt;a class="link" href="https://en.wikipedia.org/wiki/Path_MTU_Discovery" target="_blank" rel="noopener"
>Path MTU Discovery(PMTUD)&lt;/a>。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『Blog』V2rayN 配置 Hysteria</title><link>https://blog.echosec.top/p/v2rayn-hysteria-tutorial/</link><pubDate>Tue, 05 Apr 2022 23:42:34 +0800</pubDate><guid>https://blog.echosec.top/p/v2rayn-hysteria-tutorial/</guid><description>&lt;img src="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/3593983.jpg" alt="Featured image of post 『Blog』V2rayN 配置 Hysteria" />&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>截至本文最后更新时间 &lt;code>2022-08-24&lt;/code> ，该解决方案仍处于测试阶段，未来短期内会有大量的版本更新，请注意甄别本文中可能过时的内容，谨慎参考。&lt;/p>
&lt;p>本文涉及到的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">项目名&lt;/th>
&lt;th style="text-align:center">发行版本号&lt;/th>
&lt;th style="text-align:center">用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>HyNetwork/hysteria&lt;/a>&lt;/td>
&lt;td style="text-align:center">v1.2.0&lt;/td>
&lt;td style="text-align:center">代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/2dust/v2rayN" target="_blank" rel="noopener"
>2dust/v2rayN&lt;/a>&lt;/td>
&lt;td style="text-align:center">v5.32&lt;/td>
&lt;td style="text-align:center">图形化客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/emptysuns/Hi_Hysteria" target="_blank" rel="noopener"
>emptysuns/Hi_Hysteria&lt;/a>&lt;/td>
&lt;td style="text-align:center">v0.4.0&lt;/td>
&lt;td style="text-align:center">服务端安装脚本&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意&lt;/strong> 本文不面向零基础的小白读者，开始前，请确保你已了解 v2rayN 的基本用法，备有一台国外 VPS 以及可解析的域名，最后你需要了解基本的 Linux 操作指令用以解决本文尚未提及的偶发性异常。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;p>以 V2rayN 图形客户端为例，介绍在 Windows 上启动 hysteria 客户端的具体方法。&lt;/p>
&lt;h3 id="前期准备">前期准备&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>关闭服务器防火墙&lt;/p>
&lt;/li>
&lt;li>
&lt;p>域名解析，关闭 CDN&lt;/p>
&lt;/li>
&lt;li>
&lt;p>关闭冲突服务&lt;/p>
&lt;p>若服务器此前运行过或正在运行 xray-core 及其他代理核心服务，你需要先暂停或关闭这些服务。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> hysteria 与 xray-core 等服务并不冲突，可以同时运行，此处关闭仅为控制查错变量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更新 v2rayN 客户端至最新版&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="linux-服务端配置">Linux 服务端配置&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>通过脚本拉取基础设施&lt;/p>
&lt;p>如下指令需要在 &lt;code>superuser env&lt;/code> 下执行，使用 &lt;code>sudo su root&lt;/code> 切换至管理员上下文（如有必要）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bash &amp;lt;&lt;span class="o">(&lt;/span>curl -fsSL https://git.io/hysteria.sh&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>脚本配置&lt;/p>
&lt;p>在弹出的菜单中选择「安装 hysteria」。首次安装后，可通过全局脚手架指令 &lt;code>hihy&lt;/code> 调出菜单。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置介绍&lt;/p>
&lt;blockquote>
&lt;p>此处仅描述脚本运行所涉及到的基础配置项，更多高级参数详见 &lt;a class="link" href="../hysteria-advanced" >高级配置&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>域名&lt;/strong>：输入解析到本服务器 IP 的域名即可，解析前不可开启 CDN 。另外，确保已处理「前期准备」否则后续步骤必然报错。&lt;/p>
&lt;p>&lt;strong>端口：&lt;/strong> 无特殊要求，按回车随机选取即可。&lt;/p>
&lt;p>&lt;strong>协议类型：&lt;/strong> 经本人测试，仅有 &lt;code>wechat-video&lt;/code> 能够较好地兼容 &lt;code>v2rayN&lt;/code> 运行，其他协议类型大概率不可用（留意时效性）。&lt;/p>
&lt;p>&lt;strong>转发延迟：&lt;/strong> 在本地调出控制台，&lt;code>ping&lt;/code> 服务器 IP，执行 3 轮，每轮间隔 5 秒，取平均值即可。服务对此项配置并不敏感，保持在相交于真实值略低的区间即可（留意时效性）。&lt;/p>
&lt;p>&lt;strong>下行速度：&lt;/strong> 限制每个客户端的最大下载速率（mbps）。留有 1.25 倍的冗余，也即填入 50，最后配置为 62.5。此项不宜过大，否则会导致客户端频繁遇到「Google reCAPTCHA 异常流量」的提示。&lt;/p>
&lt;p>取&amp;lt;本地带宽理想值&amp;gt;以及&amp;lt;服务器带宽上限&amp;gt;的最小值，如服务器限速 100mbps，这里填 100 即可，若服务器带宽上限严重溢出，根据本地带宽取值。如：家宽 300Mbps 但你在阳台用笔记本的 WIFI 上网，实际网速可能只有 50Mbps ，这里填什么？好吧我也不知道，影响网速的东西可太多了Orz，一般情况下个人使用填 100 足足有余。&lt;/p>
&lt;p>&lt;strong>上行速度：&lt;/strong> 限制每个客户端的最大上传速率（mbps），同「下行速度」。&lt;/p>
&lt;p>&lt;strong>认证口令：&lt;/strong> 输入一串用于身份认证的指令， 如 &lt;code>fuck me till the daylight&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>复制输出&lt;/p>
&lt;p>脚本解析结束后会打印客户端的 &lt;code>json&lt;/code> 配置信息以及 &lt;code>Shadowrocket/Sagernet/Passwall&lt;/code> 一键链接。此处，你需要复制其中的 &lt;code>json&lt;/code> 配置信息。&lt;/p>
&lt;p>上述的「一键链接」是以 &lt;code>hysteria://&lt;/code> 打头的分别可用于 iOS/Andoid/软路由等嵌入式设备进行代理的 &lt;a class="link" href="https://github.com/HyNetwork/hysteria/wiki/URI-Scheme" target="_blank" rel="noopener"
>URI Scheme&lt;/a>。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="windows-客户端配置">Windows 客户端配置&lt;/h3>
&lt;p>操作前，请确保你的 v2rayN 客户端已更新至最新版本。&lt;/p>
&lt;h4 id="下载-hysteria-core">下载 &lt;code>hysteria-core&lt;/code>&lt;/h4>
&lt;p>访问 &lt;a class="link" href="https://github.com/HyNetwork/hysteria/releases" target="_blank" rel="noopener"
>hysteria releases&lt;/a>，在「Assets」找到最新版本的&lt;code>hysteria-tun-windows-6.0.amd64.exe&lt;/code>，下载。文件名随着时间推移可能会有所变更，留意时效性。&lt;/p>
&lt;h4 id="下载-hihy-分流文件">下载 &lt;code>hihy&lt;/code> 分流文件&lt;/h4>
&lt;p>访问 &lt;a class="link" href="https://github.com/emptysuns/Hi_Hysteria/releases" target="_blank" rel="noopener"
>hihy releases&lt;/a>，在「Assets」找到最新版的压缩文件，如 &lt;code>v2rayN-hysteriaCore.rar&lt;/code>，下载解压。这个包中的文件我们只会用到 &lt;code>acl&lt;/code> ，此处先按下不表。&lt;/p>
&lt;h4 id="启动-v2rayn-添加自定义配置服务器">启动 &lt;code>v2rayN&lt;/code> 添加自定义配置服务器&lt;/h4>
&lt;ol>
&lt;li>在界面的「服务器」一栏中选择「添加自定义配置服务器」。&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220406004646824.png" alt="image-20220406004646824" style="zoom:50%;" />&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>在「自定义配置中」点击「预览」，弹出一个窗口，&lt;strong>访问 v2rayN 的项目根目录&lt;/strong>。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>将 &lt;code>hihy&lt;/code> 中的 &lt;code>acl&lt;/code> 文件夹以及 &lt;code>hysteria-tun-windows-6.0.amd64.exe&lt;/code> 拖入到此窗口中（也即拖入到 v2rayN 的根目录下）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 v2rayN 的根目录下选中 &lt;code>config.json&lt;/code>模版文件，点击 &lt;strong>「打开」&lt;/strong> 自动拷贝一份配置文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在自定义配置窗口下点击 &lt;strong>「编辑」&lt;/strong>，弹出 UUID 源文件窗口，将刚才复制的 &lt;code>json&lt;/code> 配置信息复制进来。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> 若你使用 &lt;code>hihy v3.7+&lt;/code> 版本，自动生成的客户端配置（http，socks5）已自动适配 v2rayN 的系统代理监听端口，无需更改。&lt;/p>
&lt;p>&lt;strong>Modify listen port&lt;/strong>。将 &lt;code>http&lt;/code> 以及 &lt;code>socks5&lt;/code> 字段改为如下内容。也即将 &lt;code>http&lt;/code> 监听端口改为 10809，将 &lt;code>socks5&lt;/code> 监听端口改为 &lt;code>10808&lt;/code>（对接 v2rayN 的端口配置即可）。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;listen&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:10809&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;timeout&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;disable_udp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;socks5&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;listen&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:10808&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;timeout&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;disable_udp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>&lt;strong>Select Core Type&lt;/strong>。修改端口后保存并关闭配置文件。回到此处，在「Core 类型」中选择 &lt;code>hysteria&lt;/code> ，确定，保存。完整配置后的参考截图如下：&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;div align="center"> &lt;img src="image-20220406010435991.png" alt="image-20220406010435991" style="zoom:50%;" />&lt;/div>
&lt;div align="center"> &lt;img src="image-20220501175014854.png" alt="image-20220501175014854" style="zoom:45%;" />&lt;/div>
&lt;h4 id="连接测试">连接测试&lt;/h4>
&lt;p>选中新加入的代理服务器并启动系统代理。若配置正常，即可正常访问互联网。&lt;/p>
&lt;h3 id="可选-socks5-系统代理">[可选] Socks5 系统代理&lt;/h3>
&lt;p>这里介绍一种通用的客户端代理方法，同样是凭借 v2rayN 图形化客户端启动 hysteria 代理。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>修改节点客户端配置&lt;/strong>&lt;/p>
&lt;p>以同样的方法打开 uuid 配置文件，将 http 的监听配置删去，修改 socks5 的监听端口，建议不与常见端口冲突，如可设为 &lt;code>8889&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>启动 hysteria 服务&lt;/strong>&lt;/p>
&lt;p>从 v2rayN 根目录启动 shell，运行 hysteria 服务，配置文件在“当前目录”的 &lt;code>guiConfigs&lt;/code> 文件夹下。&lt;/p>
&lt;p>假设 v2rayN 根目录路径为 &lt;code>C:\v2rayn&lt;/code>，hysteria 文件名为 &lt;code>hysteria-tun-windows-6.0.amd64.exe&lt;/code>，节点客户端配置文件名为 &lt;code>UUID.json&lt;/code>，那么可以假设的命令行如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\\&lt;/span>v2rayn&amp;gt; hysteria-tun-windows-6.0.amd64.exe -c guiConfigs&lt;span class="se">\\&lt;/span>UUID.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>运行成功后可以看到如下输出日志，说明服务启动成功。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">时间 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>addr:服务端IP:服务端port&lt;span class="o">]&lt;/span> Connected
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">时间 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>addr:127.0.0.1:8889&lt;span class="o">]&lt;/span> SOCKS5 server up and running
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>添加 Socks5 服务器&lt;/strong>&lt;/p>
&lt;p>唤出 v2rayN 主界面，右键空白处，在弹出的菜单中选择「添加 Socks 服务器」。&lt;/p>
&lt;p>以上文所述内容为例，此处分别在地址（address）以及端口（port）处填写 127.0.0.1 以及 8889，别名（remarks）随意，其余不动。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> 如果你额外设置了用户名及密码，在配置窗口中对应填写即可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>连接测试&lt;/strong>&lt;/p>
&lt;p>选中刚创建的类型为「Socks」的 &lt;code>inner-hysteria&lt;/code> “套娃节点”，启动系统代理，以你喜欢的方式运行一系列的指标检测。&lt;/p>
&lt;p>值得一提的是，使用本方法在 v2rayN 中添加的配置项，可以使用 v2rayN 内置的测速功能（如真延迟，速度测试等），而根据上一节创建的类型为「Custom」的节点则不行（留意时效性）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>组合推荐&lt;/strong>&lt;/p>
&lt;p>通常情况下推荐使用 2.3 介绍的方法直接添加服务器。&lt;/p>
&lt;p>如果你依赖 v2rayN 的内置工具完成一些必要的测试工作，我建议你将指向同一个服务端的客户端配置文件分写，既使用完整的配置用于直接启动 hysteria 客户端代理，另起一个配置文件仅用于添加 Socks5 服务，在需要测速时按照 2.4.2 中介绍的方法手动运行 hysteria 服务，最后进行测速。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="speedtest-测试">Speedtest 测试&lt;/h2>
&lt;p>本人使用多个代理节点进行对比测试后发现，&lt;code>hysteria&lt;/code> 对素质较差的代理节点有较大提升，尤其在网络拥堵时间段。如下测试仅为不严谨的「玄学对比定性分析」，请忽视各种所谓的「测不准」因素。&lt;/p>
&lt;p>以下测试中，左组均使用 &lt;code>hysteria-core&lt;/code> 进行 100Mbps 下行，10Mbps 上行的带宽限制（有 1.25 倍冗余溢出）；右组均使用 &lt;code>xray-core&lt;/code> ，拥塞算法 &lt;code>bbr&lt;/code>，队列算法 &lt;code>fq&lt;/code>。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>VPS/Solution&lt;/th>
&lt;th>hysteria-core &amp;amp;&amp;amp; wechat-video&lt;/th>
&lt;th>xray-core &amp;amp;&amp;amp; Trojan TLS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>CloudPowerall&lt;/strong>&lt;/td>
&lt;td>&lt;img src="image-20220406011708210.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom:33%;" />&lt;/td>
&lt;td>&lt;img src="image-20220406011721458.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom:33%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Racknerd&lt;/strong>&lt;/td>
&lt;td>&lt;img src="image-20220406012005041.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom:33%;" />&lt;/td>
&lt;td>&lt;img src="image-20220406011947154.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom:33%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PacificRack&lt;/strong>&lt;/td>
&lt;td>&lt;img src="12992967224.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom:49.8%;" />&lt;/td>
&lt;td>&lt;img src="12992984222.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom:49.8%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>BandwagonHost&lt;/strong>&lt;/td>
&lt;td>&lt;img src="12993007120.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom:49.8%;" />&lt;/td>
&lt;td>&lt;img src="12993019859.png" alt="xray-core &amp;&amp; VLESS TCP XTLS-direct " style="zoom:49.8%;" />&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="youtube-测试">Youtube 测试&lt;/h2>
&lt;p>如下测试使用同上文一样的限制策略。&lt;/p>
&lt;p>测试方法是，播放 Youtube 视频 &lt;a class="link" href="https://www.youtube.com/watch?v=linlz7-Pnvw&amp;amp;t=79s&amp;amp;ab_channel=8KWorld" target="_blank" rel="noopener"
>Switzerland in 8K ULTRA HD HDR - Heaven of Earth (60 FPS) - YouTube&lt;/a> ，播放源 &lt;code>7680x4320@60&lt;/code> ， 从 1:30 持续播放至 2:50，取 2:50 时刻的截图（在这段时间内我会关注连接速度的取值，如果截停瞬间出现了偏离正常区间的异常数值，我会剔除这个样本并继续播放视频 1~2s 并取位于正常区间或附近的正常值）。不同节点和代理策略切换时，使用控制台清除本地缓存。测试时间段并非晚高峰。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>VPS/Solution&lt;/th>
&lt;th>xray-core &amp;amp;&amp;amp; Trojan TLS&lt;/th>
&lt;th>hysteria-core &amp;amp;&amp;amp; wechat-video&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>CloudPowerall&lt;/strong>&lt;/td>
&lt;td>&lt;img src="clone-vless.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom: 67%;" />&lt;/td>
&lt;td>&lt;img src="clone-hysteria.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom: 67%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Racknerd&lt;/strong>&lt;/td>
&lt;td>&lt;img src="rn-vless.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom: 67%;" />&lt;/td>
&lt;td>&lt;img src="rn-hysteria.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom: 67%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PacificRack&lt;/strong>&lt;/td>
&lt;td>&lt;img src="pack-trojan.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom: 67%;" />&lt;/td>
&lt;td>&lt;img src="pack-hysteria.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom: 67%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>BandwagonHost&lt;/strong>&lt;/td>
&lt;td>&lt;img src="bwg-vless.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom: 67%;" />&lt;/td>
&lt;td>&lt;img src="bwg-hihy.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom: 67%;" />&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>『Blog』Epic Awesome Gamer</title><link>https://blog.echosec.top/p/epic-awesome-gamer/</link><pubDate>Fri, 28 Jan 2022 23:45:18 +0800</pubDate><guid>https://blog.echosec.top/p/epic-awesome-gamer/</guid><description>&lt;img src="https://blog.echosec.top/p/epic-awesome-gamer/pexels-pixabay-219552.jpg" alt="Featured image of post 『Blog』Epic Awesome Gamer" />&lt;h2 id="backstory">Backstory&lt;/h2>
&lt;p>&lt;strong>🔨 分享一个有关立项的故事。&lt;/strong>&lt;/p>
&lt;p>去年月底某友在群里分享了一个他自己 fork 的 &lt;code>epicgames-claimer&lt;/code> 的项目，添加了 &lt;code>Actions&lt;/code> 的特性，能够借助工作流实现定时领周免的需求（非滥用），高能现场如下：&lt;/p>
&lt;div align="center">&lt;img src="image-20220129002530922.png" alt="image-20220129002530922" style="zoom:50%;" />&lt;/div>
&lt;p>当时我正在搓其他项目的代码，甚至还没点开这个链接，只是感觉这个点子感觉挺“曼妙”的，仅仅是留下印象而已。但巧就巧在- -我当时正在搓的项目是与 &lt;code>anti-CAPTCHA&lt;/code> 密切相关的任务。&lt;/p>
&lt;p>直到今年年初，1月14日左右，项目告一段落，有了阶段性的积累，对整个领域的技术模块和特性有了充足的了解（其实非常浅嗯）。在一次无意间的检索中 ，以&lt;code>CAPTCHA&lt;/code> 为关键词又重新搜到了这个项目（原来 Epic 真的可以免费领取游戏！用了老半年的 Epic Games Launcher 都没发现同一个客户端还有个游戏库的选项）。&lt;/p>
&lt;div align="center">&lt;img src="122922274-bb263b00-d363-11eb-8b82-8a3ed6e7e29d.png" alt="122922274-bb263b00-d363-11eb-8b82-8a3ed6e7e29d" style="zoom:50%;" />&lt;/div>
&lt;p>我翻了翻“评论区”，情况不太乐观- -不少玩家反应 &lt;code>CAPTCHA&lt;/code> 阻挡验证的问题，但维护者疏于忙碌，暂时无暇升级项目，同样的报错议题已经累积的一个月之久。车祸现场如下：&lt;/p>
&lt;div align="center">&lt;img src="IMG_20220120_015744.jpg" alt="IMG_20220120_015744" style="zoom: 25%;" />&lt;/div>
&lt;p>当时想着自己对人机挑战略知一二，便翻起了项目源码，看看大佬是如何梳理整个业务流程的。&lt;/p>
&lt;p>但很遗憾&amp;hellip;&amp;hellip;这项工作持续不到 10 分钟我就放弃了。我用成分分析工具解剖了核心业务类&lt;code>EpicgamesClaimer()&lt;/code> 后发现，这个看似朴实无华的玩意，竟然塞进了 59 个类方法，还放入了意义不明的 &lt;code>async&lt;/code> 事件循环，大概情况如下图所示：&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843.png"
width="3840"
height="1998"
srcset="https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843_hu3ba0a31ffbc0b0e3870be7f2f8b557db_997869_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843_hu3ba0a31ffbc0b0e3870be7f2f8b557db_997869_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="461px"
>&lt;/p>
&lt;p>（os：没有讥讽的意思，这里表露的只是我当时的第一反应，确实没见过这样的场面-。-&lt;/p>
&lt;p>至此，一个重头构写「Epic免费人」的想法诞生了。但起初，我是奔着 &lt;code>hCaptcha challenge&lt;/code> 去的，刚积累了这么多料子，正好遇到一个可以练手的挑战，不趁热打铁怎么行，于是我在该楼层下烙下一句“问题不大”后，创建了一个空白仓库，开始设计新项目的技术模型。&lt;/p>
&lt;p>🤦‍♂️emmm&amp;hellip;现在是北京时间 2022-01-29 01:23 博客写到这的时候发现这个仓库被封掉了……真是一言难尽。&lt;/p>
&lt;h2 id="little-changes">Little changes&lt;/h2>
&lt;p>🍜 分享一些本项目中有关「人机挑战」的重点与难点。&lt;/p>
&lt;h3 id="undetected-flow">Undetected Flow&lt;/h3>
&lt;p>📋 &lt;strong>要处理 &lt;code>hCaptcha challenge&lt;/code> 首先要有可以隐藏控制特征的自动化技术。&lt;/strong>&lt;/p>
&lt;h4 id="preview">Preview&lt;/h4>
&lt;p>如果读者和 &lt;code>CAPTCHA&lt;/code> 打交道的时间不够长但又刚好会一点浏览器自动化技术，你可能会抢答“这个反爬用普通的伪装过不去，必须用浏览器自动化！”，大概率是这样，但不够精确，应该改成“无定向的浏览器自动化”技术。&lt;/p>
&lt;p>咱们做个小测试，分别以手动，编写 &lt;code>selenium&lt;/code> 脚本，以及 &lt;code>selenium headless&lt;/code> 脚本的形式访问这个链接 &lt;a class="link" href="https://bot.sannysoft.com/" target="_blank" rel="noopener"
>https://bot.sannysoft.com/&lt;/a> 。&lt;/p>
&lt;p>手工打开的浏览器是我们所谓的“正常特征”，如下图所示（页面中还有很多的参数项，篇幅有限就不多展示了）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129014108862.png" alt="image-20220129014108862" style="zoom:50%;" />&lt;/div>
&lt;p>使用默认参数启动的浏览器会有很多被标红的“异常特征”，如下图所示（页面中还有很多的参数项，篇幅有限就不多展示了）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129014842157.png" alt="image-20220129014842157" style="zoom:80%;" />&lt;/div>
&lt;p>接下来，您可以复制如下代码进行&lt;strong>无头访问&lt;/strong>，并以截图的形式检查回馈参数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">webdriver_manager.chrome&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ChromeDriverManager&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path_screenshot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;stander_headless.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headless&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChromeDriverManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">log_level&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">install&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Chrome&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://bot.sannysoft.com/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save_screenshot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startfile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试结果截图如下：&lt;/p>
&lt;div align="center">&lt;img src="image-20220129015441536.png" alt="image-20220129015441536" style="zoom: 67%;" />&lt;/div>
&lt;p>是不是感觉很惊讶？还在以为其实浏览器自动化可以胜任爬虫的工作吗？&lt;/p>
&lt;p>&lt;code>Selenium Documentation&lt;/code> 中也明确说道，浏览器自动化工具用于爬虫业务并不符合最佳实践的要求，因为 WebDriver 的特征检测技术老早就普及使用了，几乎是和 &lt;code>selenium&lt;/code> 同个时代的技术。&lt;/p>
&lt;p>这时候有的读者可能会说，我们可以添加 &lt;code>ChromeOptions()&lt;/code> 呀。好的，现在尽你所致，把你知道的所有参数都加上，再次访问。你也许会发现表格上的“正常特征”会越来越多（截图展示的仅是部分参数），这是一件好事吗？我们先按下不表，但你是否发现，无论你怎么努力，表格中 &lt;code>WebDriver&lt;/code> 一项始终是“异常的”。好的，现在我明确告诉你，截图中的 &lt;code>WebDriver&lt;/code> 是识别控制流量的关键指标。&lt;/p>
&lt;p>这也解释了为什么处理 &lt;code>CAPTCHA&lt;/code> 要先解决 &lt;code>undetected flow&lt;/code> 的问题。现代化的人机验证都会通过前置的 &lt;code>JavaScript&lt;/code> 脚本捕获用户的页面控制轨迹，一旦驱动的 &lt;code>WebDriver&lt;/code> 指标亮起，你的一切后续操作都是徒增功耗，即使人机挑战“通过”，你也无法获取正确的身份令牌。&lt;/p>
&lt;h4 id="solution">Solution&lt;/h4>
&lt;p>兜了这么大的圈子，这里要介绍一个在业界几乎没有竞品的项目 &lt;a class="link" href="https://github.com/ultrafunkamsterdam/undetected-chromedriver" target="_blank" rel="noopener"
>undetected-chromedriver&lt;/a>。通过它，我们可以安全地隐藏驱动控制特征，将我们所有的业务逻辑安全地送到人机挑战页面。关于这个项目的特性我会另开博客详细介绍，其中大有门道。&lt;/p>
&lt;p>此处，你可以通过如下引导快速复现一个“无踪环境”，并得到驱动测试参数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pip install undetected-chromedriver&lt;span class="o">==&lt;/span>3.1.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Time : 2022/1/27 6:02&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Author : QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github : https://github.com/QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Description:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">undetected_chromedriver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Chrome&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path_screenshot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;undetected_headless.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">headless&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://bot.sannysoft.com/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save_screenshot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startfile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;strong>undetected-chromedriver 无头启动&lt;/strong>&lt;/p>
&lt;p>可以看到，我们在不指定任何参数的情况下，&lt;code>WebDriver&lt;/code> 指标是正常的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;img src="image-20220129022219302.png" alt="Undetected 无头启动" style="zoom:50%;" />
&lt;ul>
&lt;li>
&lt;p>&lt;strong>undetected-chromedriver 正常启动&lt;/strong>&lt;/p>
&lt;p>在正常启动且不指定任何可选参数的情况下，&lt;code>WebDriver&lt;/code> 指标是正常的，不仅如此，其他所有的主要特征都通过了验证，和我们手动打开网站得到的结果几乎是一样的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20220129022411626.png" alt="Undetected 正常启动" style="zoom:50%;" />&lt;/div>
&lt;h4 id="trouble">Trouble&lt;/h4>
&lt;p>到此阶段，我们可以回顾一下 &lt;code>EpicgamesClaimer&lt;/code> 项目中遇到的第一个困难，那便是整个项目与 &lt;a class="link" href="https://github.com/puppeteer/puppeteer" target="_blank" rel="noopener"
>Puppeteer&lt;/a> 强绑定，维护者几乎为每一个原子操作都做了修饰封装，而 &lt;code>puppeteer&lt;/code>（也可称 &lt;a class="link" href="https://pypi.org/project/pyppeteer/" target="_blank" rel="noopener"
>pyppeteer&lt;/a>） 与 &lt;code>Selenium&lt;/code> 一样都是主流的自动化测试框架，并不具备隐秘特征的能力。所以，维护者几乎只能基于 &lt;code>pyppeteer&lt;/code> 的生态寻找类似的解决方案，或基于 &lt;code>pyppeteer&lt;/code> 底层特性寻找突破口，或选择 &lt;code>undetected-chromedriver&lt;/code> 嫁接开发。但无论选择哪一种，代价都是极其惨痛的。&lt;/p>
&lt;h3 id="threat-level">Threat Level&lt;/h3>
&lt;p>📋 正所谓「知己知彼百战不殆」，在硬刚人机挑战之前，我们得先知道 &lt;code>hCaptcha challenge&lt;/code> 的运作逻辑，以及「验证通过」「威胁等级」如何定义，我们才能优雅地通过测试，并将挑战模块无缝地衔入到主线业务中去。&lt;/p>
&lt;p>感兴趣的朋友可以参考一下 M. I. Hossen 等人的攻击方法 &lt;a class="link" href="https://ieeexplore.ieee.org/document/9474292" title="M. I. Hossen and X. Hei, &amp;amp;quot;A Low-Cost Attack against the hCaptcha System,&amp;amp;quot; 2021 IEEE Security and Privacy Workshops (SPW), 2021, pp. 422-431, doi: 10.1109/SPW53761.2021.00061."
target="_blank" rel="noopener"
>doi: 10.1109/SPW53761.2021.00061.&lt;/a>&lt;/p>
&lt;p>文章里详细介绍了人机挑战的前世今生以及当下主流的人机挑战形式；总结了 &lt;code>hCaptcha&lt;/code> 差异特性，并简要说明了一些 &lt;code>element&lt;/code> 的获取思路与模型训练的实验步骤。点击快速打开 &lt;a class="link" href="https://conferences.computer.org/sp/pdfs/spw/2021/893400a422.pdf" title="论文PDF"
target="_blank" rel="noopener"
>PDF&lt;/a> 预览文章。&lt;/p>
&lt;h4 id="preview-1">preview&lt;/h4>
&lt;p>其中有一些值得注意的现象，在论文摘要中作者写道：&lt;/p>
&lt;blockquote>
&lt;p>We evaluate our system against 270 hCaptcha challenges from live websites and demonstrate that it can solve them with &lt;strong>95.93% accuracy&lt;/strong> while taking only &lt;strong>18.76 seconds&lt;/strong> on average to crack a challenge. We run our attack from a docker instance with only 2GB memory (RAM), 3 CPUs, and no GPU devices, demonstrating that it requires minimal resources to launch a successful large-scale attack against the hCaptcha system.&lt;/p>
&lt;/blockquote>
&lt;p>在正文中作者详细解析了数据组成：&lt;/p>
&lt;blockquote>
&lt;p>&amp;hellip;Our deep learning classifier (the Solver) takes &lt;strong>3.79 seconds&lt;/strong> to classify the images (&lt;strong>usually 9&lt;/strong>) in a challenge, on average&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>然后奉上了图3，作者将业务耗时拆分成浏览器自动化的耗时以及图像分类任务的耗时，可以发现浏览器控制用的时间占了一次业务中的绝大部分（符合常识）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129033424831.png" alt="image-20220129033424831" style="zoom:67%;" />&lt;/div>
&lt;p>但其实我是蛮疑惑的，首先是这个 &lt;code>3.79s&lt;/code> 的数据是如何算出来的。我们处理 &lt;code>hCaptcha&lt;/code> 一般有两轮验证一共 18 张图而这里用了&lt;code> usually 9&lt;/code>；其次，当我们的威胁等级足够低时，我们甚至会在激活 &lt;code>checkbox&lt;/code> 后跳过人机挑战。&lt;/p>
&lt;p>然后是 &lt;code> 18.76s&lt;/code> 的平均总耗时其实也是实验条件下的结果，至少拿 Epic 更新身份令牌的行为来说，我们启动「挑战者驱动」可能就要用 15s 。文章中的浏览器操作耗时的具体行为包括「初始化挑战（进入页面加载页面）」「与 &lt;code>checkbox&lt;/code> 交互并激活挑战」「提交挑战」以及「验证挑战是否成功」，忽视了最耗时的图片下载过程，其次在验证挑战是否成功环节，真实业务场景需要进行非常复杂的元素断言，而在实验环境下几乎只用判断按钮是否能继续点就可以（排除判断）说明挑战是否成功。&lt;/p>
&lt;blockquote>
&lt;p>We found that hCaptcha often repeats images across different challenges. We computed the MD5 hashes of &lt;strong>48330 images collected from the hCaptcha challenges&lt;/strong> during our analysis and identifified 9854 redundant images belonging to 1985 sets of identical images.&lt;/p>
&lt;/blockquote>
&lt;p>作者后文说道，他们发现挑战中经常遇到重复的图片，于是用了感知哈希判断在多伦测试中攒下来的图片中有多少重复的。真够狠的爬了五千多次。。&lt;/p>
&lt;h4 id="solution-1">Solution&lt;/h4>
&lt;h3 id="synergy-framework">Synergy framework&lt;/h3>
&lt;p>&lt;strong>📋 协同框架立大功！&lt;/strong>&lt;/p>
&lt;h4 id="preview-2">preview&lt;/h4>
&lt;p>根据上文可知，&lt;code>CAPTCHA&lt;/code> 一般都设有时间限制，一段时间内未通过测试页面元素就会自主刷新过时。我们知道，下载图片恰巧是个经典的网络I/O耗时场景。因此，我不由地想到利用协程技术缩短人机挑战的耗时，提高容错。&lt;/p>
&lt;h4 id="solution-2">Solution&lt;/h4>
&lt;ol>
&lt;li>&lt;strong>轻量可移植的协同任务框架&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>在本项目 &lt;code>utils &lt;/code>中存放着一个轻量化的 &lt;code>Synergy framework &lt;/code>，其核心业务代码可见 &lt;a class="link" href="https://github.com/QIN2DIM/epic-awesome-gamer/blob/main/src/services/utils/accelerator/core.py" target="_blank" rel="noopener"
>CoroutineSpeedup()&lt;/a>。打上 &lt;code>monkey&lt;/code> 鸡血补丁后，协同任务开始运作。&lt;/p>
&lt;ol start="2">
&lt;li>&lt;strong>使用 &lt;code>gevent&lt;/code> 而不是 &lt;code>async&lt;/code>&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;code>gevent&lt;/code> 是作者编写 Python 协程的常用方法。相交于 &lt;code>async&lt;/code> ，使用 &lt;code>gevent&lt;/code> 能够更自如地控制模块的布局与业务的上下文联系，不必为了接口的兼容关系割裂本该完整的函数体；从整体上看，这也能让实现同一逻辑的代码更加规范整洁雅观；从 Python 新手来说，&lt;code>gevent&lt;/code> 不需要改动原始代码的逻辑就能实现协同，这给还未深刻理解 &lt;code>async&lt;/code> 的朋友来说降低了很多的理解门槛。借知乎网友的话就是“手动挡和自动挡的区别”，个人觉得是非常真实了。但此处也有个坑，也是本项目目前遇到的最大技术难题，后文细说。&lt;/p>
&lt;ol start="3">
&lt;li>&lt;strong>45路公交与自行车&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>原先的 &lt;code>for loop&lt;/code> 循环下载一轮挑战的 9 张图片的总耗时为每张图片下载耗时之和，而在协同任务中，总耗时为单图的最长耗时，由此极大缩短数据集拉取的时间。&lt;/p>
&lt;p>在 GitHub Actions 里这是一种体感差距，几乎瞬间拉取，如下图所示。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129044934503.png" alt="image-20220129044934503" style="zoom:67%;" />&lt;/div>
&lt;p>而在国内网络条件下，这就是判定挑战能否开启的守门员指标。从本人的网络条件来说，在不开启代理的情况下，300MB 带宽跑满拉取位于国外服务器上的图片，每张图花费将近 10 秒的时间，如果不引入协同下载的概念，光是下载图片我们都要干等一分半，而同样的时间，已能在工作流中结束一次人机挑战了。&lt;/p>
&lt;h2 id="happy-freebie-claiming">Happy Freebie Claiming&lt;/h2>
&lt;h2 id="reference">Reference&lt;/h2></description></item><item><title>『Blog』v2rayN 订阅更新最佳实践</title><link>https://blog.echosec.top/p/v2rayn-subscribe-update/</link><pubDate>Mon, 13 Dec 2021 22:17:48 +0800</pubDate><guid>https://blog.echosec.top/p/v2rayn-subscribe-update/</guid><description>&lt;img src="https://blog.echosec.top/p/v2rayn-subscribe-update/1805246.png" alt="Featured image of post 『Blog』v2rayN 订阅更新最佳实践" />&lt;h2 id="推荐工序">推荐工序&lt;/h2>
&lt;p>本段简述使用 Windows 桌面代理客户端 &lt;code>v2rayN - V5.9&lt;/code> 更新订阅并优选代理节点的推荐步骤，其他软件同理。&lt;/p>
&lt;h3 id="节点优选">节点优选&lt;/h3>
&lt;p>&lt;strong>Step1：更新订阅&lt;/strong>&lt;/p>
&lt;p>打开软件先更新订阅。&lt;/p>
&lt;blockquote>
&lt;p>注意：在 &lt;code>v5.9&lt;/code> 中可以选择通过代理更新订阅。在旧版本中默认使用直连通信更新订阅。&lt;/p>
&lt;/blockquote>
&lt;div align="center">&lt;img src="image-20220405191102477.png" />&lt;/div>
&lt;ul>
&lt;li>
&lt;p>若开启代理，更新订阅的流量由 v2rayN 转发；若正在使用的订阅已过期（或节点失效），会出现一些不可控的异常输出。&lt;/p>
&lt;div align="center">&lt;img src="image.png" alt="image" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>在一些极端情况下必须使用系统代理更新订阅，如：目标服务器设置了身份认证，或更新订阅需要访问的站点IP已被墙（这种情况下 使用A提供商的节点挂起代理并更新订阅A订阅组可能会出现问题，需要使用其他节点挂起代理）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Step2：等待UI刷新&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>若订阅过期或异常，控制台会显示「订阅更新失败」或不显示节点列表；&lt;/li>
&lt;li>若更新成功，则显示更新后的节点列表。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Step3：测试服务器延迟 ping&lt;/strong>&lt;/p>
&lt;p>测试目标节点是否开放连接，测试目标IP是否被墙。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>快捷键 &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>P&lt;/kbd>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>选中订阅组的 &lt;u>所有节点&lt;/u>，&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>P&lt;/kbd> 批量测试节点延迟。&lt;/p>
&lt;div align="center">&lt;img src="image-20211128181009104.png" style="zoom:50%;" />&lt;/div>
&lt;ul>
&lt;li>若返回正确的 ms 延迟信息，说明节点没有被墙；&lt;/li>
&lt;li>若返回 &lt;code>Timeout&lt;/code> 说明节点无法连接，不可用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Step4：测试节点真延迟&lt;/strong>&lt;/p>
&lt;p>测试目标节点代理功能是否正常运行。真延迟在数值上反应了网页打开的速度。&lt;/p>
&lt;p>实验条件下，真延迟越低，网页响应速度越快（页面元素加载越快），而真延迟与“物理距离”有较大关系。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>快捷键 &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>R&lt;/kbd>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;u>小批量&lt;/u> 选中上一步并未 Timeout 且值得关注的节点，测试节点的真延迟。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>真延迟测试前提是能通过 ping 测试，也即上一步中 ping 出 timeout 的节点已经没有必要进行真延迟测试了。&lt;/p>
&lt;p>这一步输出正常 ms 延迟信息的，说明节点的代理功能正常。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20211128181345144.png" alt="image-20211128181345144" style="zoom:80%;" />&lt;/div>
&lt;p>&lt;strong>Step5：测试服务器速度&lt;/strong>&lt;/p>
&lt;p>用代理下载 &amp;ldquo;&lt;a class="link" href="http://speedtest-sgp1.digitalocean.com/10mb.test%22" target="_blank" rel="noopener"
>http://speedtest-sgp1.digitalocean.com/10mb.test"&lt;/a> ，用时与大小相除。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>快捷键 &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>T&lt;/kbd>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;u>单选&lt;/u> 通过真延迟测试的服务器节点进行测速。选择下载速度最快的节点连接使用既可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若出现 &lt;code>在 WebClient 请求期间发生异常&lt;/code> 并不表示节点不可用（通过真延迟测试的节点的代理功能正常，出现速度测试异常的可能原因是本地网速太慢或目标服务器的负载紊乱）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20211128182356066.png" style="zoom: 80%;" />&lt;/div>
&lt;ul>
&lt;li>
&lt;p>节点服务器速度与本地带宽关系如下（实验期望）：&lt;/p>
&lt;p>此处的「服务器速度」指v2rayN测量值，「本地带宽」指跑测试的实时网速。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">本地带宽&lt;/th>
&lt;th style="text-align:center">服务器速度(limit)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">0~50 Mbps&lt;/td>
&lt;td style="text-align:center">0~2 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">50~100 Mbps&lt;/td>
&lt;td style="text-align:center">2~6 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">100~300 Mbps&lt;/td>
&lt;td style="text-align:center">6~15 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">300~500 Mbps&lt;/td>
&lt;td style="text-align:center">15~27 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">500~1k Mbps&lt;/td>
&lt;td style="text-align:center">27~ Mbps&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>这是个玄学变量关系图。这个映射关系与当前时段线路拥塞状况，本地实时带宽状况，节点服务器负载状况（或端口限速）等多种变量有关，并不是个能严格控制的映射关系。&lt;/p>
&lt;p>实际上，当服务器速度（观测值）有 4~5 Mbps （行话油管速度四万左右）已经能流畅观看 4K Playing bitrate Netflix，也能“秒开” 4K Youtube 视频。&lt;/p>
&lt;p>上表给出的建议方案较为保守。一般情况下，你的 Connection Speed 大于 2.2Mbps 就能几乎不卡顿地观看 4K Youtube 视频（行话油管速度两万五）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="总结与注意事项">总结与注意事项&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>除了 Ping 测试，其他测试都不可一下子选中所有节点服务器操作，否则会出现大规模的数据偏差。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>真延迟测试：建议根据个人喜好手动选择 remark 标注的地区节点，进行小批次的分段测试。&lt;/p>
&lt;p>推荐使用的地区节点降序排列如下：&lt;/p>
&lt;p>&lt;strong>香港 &amp;gt; 新加坡 &amp;gt; 日本 &amp;gt; 韩国 &amp;gt; 美国 &amp;gt; 其他&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>速度测试：建议单选测速。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>若订阅服务器IP / 域名被墙（无法更新订阅或无法通过 ping 测试），你需要使用代理更新订阅，也即使用其他家的节点挂起本地全局代理后更新被墙订阅。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>v2rayN 的节点测试功能并不严谨，当你认为测试结果明显不符预期，可重复测试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>显然，ping 延迟和代理网速没有必然联系。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个明显的实验结论是：当你能跑满本地带宽 100Mbps 且代理节点的端口限速 ≥ 100Mbps 时，必然能畅通无阻地浏览 4K Youtube Video。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="边缘测试">边缘测试&lt;/h2>
&lt;h3 id="多快网速可看-4k-youtube-video">多快网速可看 4K Youtube Video？&lt;/h3>
&lt;blockquote>
&lt;p>数据来源：&lt;a class="link" href="https://support.google.com/youtube/answer/78358?hl=zh-Hans" target="_blank" rel="noopener"
>系统要求 - YouTube帮助 (google.com)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">视频分辨率（Res）&lt;/th>
&lt;th style="text-align:center">建议的持续速度（Connection Speed）&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">4k&lt;/td>
&lt;td style="text-align:center">20 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">高清1080P&lt;/td>
&lt;td style="text-align:center">5 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">高清 720P&lt;/td>
&lt;td style="text-align:center">2.5 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">标清480P&lt;/td>
&lt;td style="text-align:center">1.1 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">标清360P&lt;/td>
&lt;td style="text-align:center">0.7 Mbps&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>设备当前可看的分辨率组与本机硬件配置，网速以及浏览器有关。例如，截止至 2021-11-29，几乎所有手机/平板仅能观看最高 1080P 的视频；绝大多数 Windows 笔记本仅能观看最高 4K 的视频，而近几代 macOS 笔记本可解码并观看 8K HDR 视频。&lt;/p>
&lt;h3 id="如何突破代理速度瓶颈">如何突破代理速度瓶颈？&lt;/h3>
&lt;p>推荐顺序：升级本地带宽套餐 &amp;gt; 升级无线路由器配置 &amp;gt; 升级代理配置&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>升级本地带宽套餐（提高网速上限）&lt;/strong>&lt;/p>
&lt;p>特指从 ≤100 Mbps 的本地带宽套餐提升至更高级别，若已满足则无需调整。&lt;/p>
&lt;p>升级带宽套餐成本最低，带来的提升最明显。&lt;/p>
&lt;p>若你使用软路由有线桥接主路由，使用 Friendly ARM NanoPI R2S 可接管的忙时带宽为 800 Mbps（实验条件下的极限值），也即一般情况下，家用带宽 ≤ 500 Mbps 都可以跑满，无需升级。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>升级无线路由器配置（提高网速下限）&lt;/strong>&lt;/p>
&lt;p>当你的本地带宽套餐 ≤ 100 Mbps 时不考虑本方案。&lt;/p>
&lt;ul>
&lt;li>若为普通家庭无线上网环境（非无线桥接，非 Mesh 组网环境，非网线直连），建议摆在客厅的无线路由功率 3000M+（营销行话：双频千兆无线路由器，而且不是 1 千，是 3 千；官方售价一般￥250+）。&lt;/li>
&lt;li>若是 6 人左右的高校宿舍使用，建议无线路由器功率 1600~3000M。&lt;/li>
&lt;/ul>
&lt;p>路由厂商推荐顺序：小米 &amp;gt; TP-Link &amp;gt; 华为，主要考虑因素为性价比。&lt;/p>
&lt;p>升级无线路由器配置的根本目的是提高「带宽升级」带来的收益，也即提升代理速度的下限。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>升级代理配置（提升代理质量，也即提升网速稳定性）&lt;/strong>&lt;/p>
&lt;p>当你的本地带宽套餐 ≤ 100 Mbps 时不考虑本方案。&lt;/p>
&lt;p>本方案包括但不限于“升级机场套餐”“自建节点机房更换（线路优选）”&lt;/p>
&lt;p>当然，若你使用的是白嫖节点，发现当前节点明显跑不满带宽时更换其他白嫖节点是最便捷的“瓶颈突破”方案。一般情况下，公网上暴露的白嫖节点都难以跑满带宽，横向比较下优选既可。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>升级机场套餐&lt;/strong>&lt;/p>
&lt;p>仅当 &lt;strong>端口限速 &amp;lt; 带宽速度&lt;/strong> 且有更快代理网速 &lt;strong>需求&lt;/strong> 时更换。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自建节点机房更换（线路优选）&lt;/strong>&lt;/p>
&lt;p>不作介绍（本文面向的读者群体独自操作此种方案有反向优化风险）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>『Blog』V2RSS云彩姬最佳实践（阶段Ⅰ）</title><link>https://blog.echosec.top/p/v2rss-best-practice/</link><pubDate>Mon, 13 Dec 2021 22:15:59 +0800</pubDate><guid>https://blog.echosec.top/p/v2rss-best-practice/</guid><description>&lt;img src="https://blog.echosec.top/p/v2rss-best-practice/gcc06ab1cf.jpg" alt="Featured image of post 『Blog』V2RSS云彩姬最佳实践（阶段Ⅰ）" />&lt;h2 id="项目简介与使用指南">项目简介与使用指南&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider" target="_blank" rel="noopener"
>V2RSS&lt;/a> 是一个能对全球范围内基于 &lt;a class="link" href="https://github.com/Anankke/SSPanel-Uim" target="_blank" rel="noopener"
>SSPanel-Uim&lt;/a> 框架产出的服务提供商进行垂直挖掘的「生态矿机」；能够自下而上地生成针对主流协议头的「聚合采集」任务；能够自我消化并产出相较于 &lt;a class="link" href="https://github.com/zu1k/proxypool" target="_blank" rel="noopener"
>proxypool&lt;/a> 更加纯净可靠的代理节点；具备自主发现，服务自愈等强大的生产特性。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>有关云彩姬（panel）的介绍详见 &lt;a class="link" href="https://blog.echosec.top/v2rss-docs/zh/docs/user/v2rss-cli/overview/" target="_blank" rel="noopener"
>技术文档&lt;/a> ，了解软体获取方法以及功能介绍。&lt;/li>
&lt;li>有关云彩姬（public-service）的介绍详见 &lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider" target="_blank" rel="noopener"
>项目仓库&lt;/a>，了解服务部署方法。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="最佳实践">最佳实践&lt;/h2>
&lt;h3 id="synergy与延迟反射机制">Synergy与延迟反射机制&lt;/h3>
&lt;h4 id="简介">简介&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>synergy 在计算机领域中有“协作”“协同”的定义；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>synergy 在大多数情况下 与「延迟反射」一起使用，并称「协同反射」，是一个在 &lt;code>v2rss v4.5.5&lt;/code> 版本中开源的模式；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>synergy 基于集群运行，具备「任务超载」「服务自愈」等高级特性，即使在所谓高峰期也能高效完成协同任务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="特性">特性&lt;/h4>
&lt;p>客户端玩家无需关心「协同反射」的上游实现逻辑。「协同反射」在客户端的表现为：能通过协同注册的方式&lt;del>拉起不可用节点，续订过期链接，&lt;/del> 延拓订阅可用流量，而这种延拓具有一定的延迟回馈。&lt;/p>
&lt;p>也即当您使用客户端请求/获取一条订阅链接并在更新订阅后通过 remark-label 得知订阅可用流量仅有 1GiB/2GiB/几十MiB 时，不必着急质疑上游服务质量，您可以等待一段时间后更新订阅，体会「synergy」机制带来的体验升级——当前订阅的可用流量持续增长（更新订阅后通过 remark-label 观察 ），这个过程将在 30~120s 内完成，可用流量将增长 10GiB+。&lt;/p>
&lt;p>在 &lt;code>v2rss v4.5.6&lt;/code> 服务优化版本中，「延迟」的概念被逐渐淡化。“流量延拓”的行为被桥接至消息队列中，也即每当有新的链接入库，「synergy」机制就会生效 ，为 proxy-pool 中的订阅延拓可用流量。换句话说，大多数情况下，用户获取到的链接的可用流量已被完整“延拓”；仅当需求高峰时，synergy 来不及执行，用户才会获取到“正在被处理”（订阅当前的剩余流量明显不满足日常需求）的订阅链接。&lt;/p>
&lt;h3 id="警惕重用与覆盖">警惕重用与覆盖&lt;/h3>
&lt;h4 id="简介-1">简介&lt;/h4>
&lt;p>&lt;code>v2rss 客户端&lt;/code> 使用 &lt;code>easygui&lt;/code> 编写，是一个纯静态前端面板（这是云彩姬 panel 敏捷开发中的遗留 BUG），即便数据端使用 redis 高速缓存维护 proxy-pool，也无法应对「请求覆盖」等并发需求场景。&lt;/p>
&lt;p>换句话说，用户通过「查看订阅」观察到的订阅列表可能已经变更，可能的改动为：其他用户取链接，上游服务清除无效订阅，此时用户依据可视内容而选取的链接很可能是“已被获取的链接”以及“已被清除的无效链接”。后一种情况较为罕见，而一旦出现前一种情况，就非常麻烦了。绝大多数服务提供商都会限制 low-level 节点的设备并行连接数，这种限流机制通常是通过逻辑脚本进行监听的，当多个IP共享同一订阅并触发断流机制时，代理用户的订阅链接将被重置（轻则流量清零重则删号，这是服务提供商用以防止流量泄露的常用方案）。&lt;/p>
&lt;h4 id="推荐用法">推荐用法&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>使用「快速获取」替代「查询获取」&lt;/p>
&lt;p>快速获取操作依靠 redis 自带的机制运行，具有全局原子性，不会引发上文所述的恶劣情况（redis 常用于百万并发的应用场景，而由云彩姬 panel 的并发量一般情况下不会超过 2 位数，放心使用）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>减少「查询」与「获取」间的衔接用时（🤷‍♂️）&lt;/p>
&lt;p>如上文所述，节点列表反应的并不是 proxy-pool 的实时状态，减少操作衔接用时可以避免获取到“已被其他用户获取”的订阅，但实际上这无法避免这条链接被其他用户获取（也即B用户在你获取订阅前查询 proxy-pool，那么你已获取的链接依然会出现在他的 panel 中，他有 &lt;code>1/pool_siz&lt;/code> 的概率点中你已获取的链接👀）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="user_profiling-与-beat_dance">User_profiling 与 beat_dance&lt;/h3>
&lt;p>采集器会根据群体画像（基于&lt;code>Relative Daily Activity Figures&lt;/code>，&lt;code>Action Value&lt;/code> 以及 &lt;code>Corrected Accuracy&lt;/code>）调整任务的发起顺序（原子概率）。&lt;/p>
&lt;ul>
&lt;li>&lt;code>Relative Daily Activity Figures&lt;/code>：群体喜好与需求量。建立“节点速度”“可用时长”“一次性可用流量区间”等喜好程度标签。&lt;/li>
&lt;li>&lt;code>Action Value&lt;/code>：运行评分，与资源占用率和获取效率有关。&lt;/li>
&lt;li>&lt;code>Corrected Accuracy&lt;/code>：模型会根据实时的需求变动预测下一时间段的需求走向，并根据观测值不断修正并精确画像模型。&lt;/li>
&lt;/ul>
&lt;p>呼吸节拍（beat dance）是一个协调运行实例的上层抽象，它基于定时任务和群体画像（user profiling）生产工作周期稳定，带有“运行时停顿”等行为特征的运行实例。&lt;/p>
&lt;p>以上两个机制共同决定了采集器的启动权限，启动时间，工作时长，运行功率以及运行时各个生命周期间的休眠时间。&lt;/p>
&lt;p>开放使用的 &lt;code>proxy-pool&lt;/code> 容量较低，以减轻不可抗力因素与恶意行为对数据集造成污染。一般情况下 &lt;code>pool-length&lt;/code> ≤ 50 &amp;lt; &lt;code>pool-cap&lt;/code>。&lt;/p></description></item><item><title>『Blog』Python 应用开发最佳实践@环境搭建篇</title><link>https://blog.echosec.top/p/python-best-practices-ide/</link><pubDate>Sat, 13 Nov 2021 15:17:14 +0800</pubDate><guid>https://blog.echosec.top/p/python-best-practices-ide/</guid><description>&lt;img src="https://blog.echosec.top/p/python-best-practices-ide/23591f5.jpg" alt="Featured image of post 『Blog』Python 应用开发最佳实践@环境搭建篇" />&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>本文总结截止至 &lt;strong>2022年06月&lt;/strong>，Python 开发环境的最佳实践（以 Windows 为例）。从大型应用和小型脚本项目两个角度出发提供规范化的环境搭建思路，并尽可能地避免环境搭建中的偶发性 BUG。&lt;/p>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>总体思路如下：&lt;/p>
&lt;ul>
&lt;li>大型项目使用 &lt;a class="link" href="https://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="noopener"
>Pycharm&lt;/a> + &lt;a class="link" href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener"
>Miniconda&lt;/a>搭建开发环境；&lt;/li>
&lt;li>小型脚本项目使用 &lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>Visual Studio Code&lt;/a> 及其自带编译组件搭建开发环境。&lt;/li>
&lt;/ul>
&lt;p>总体上建议打算长期学习 Python 的开发者使用第一种方案，而后一种方案适用于将 Python 作为第二语言（辅助语言），并已完全掌握 VS Code 使用套路的玩家。&lt;/p>
&lt;p>本篇博客的受众可能并不包含完全零基础的小白玩家，任何疑问都可在评论区留言，本人会一一答复。&lt;/p>
&lt;h2 id="pycharm--miniconda">Pycharm + Miniconda&lt;/h2>
&lt;p>两款软件的下载安装是并行的，不必区分先后顺序，可以同时下载安装配置。可在一款软件安装读条时可以操作另一款软件，仅在明文提示需要停顿的地方切换操作。&lt;/p>
&lt;h3 id="install-pycharm-edition">Install Pycharm Edition&lt;/h3>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>总体安装流程可参照 &lt;a class="link" href="https://www.runoob.com/w3cnote/pycharm-windows-install.html" target="_blank" rel="noopener"
>菜鸟教程&lt;/a>（不过也没啥好参照的，Windows 安装就是点「下一步」就完事了）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>官方下载地址 &lt;a class="link" href="https://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="noopener"
>Jetbrains&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>此处以社区版（Community）安装流程说明「需要特殊处理」的步骤，没有说明的地方点击「下一步」既可。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Choose Install Location&lt;/strong>&lt;/p>
&lt;p>选择安装路径。当您的设备区分盘符时，一定选择非系统盘存储。创建一个或选择一个专门用于存储编程工具的文件夹安装 Pycharm，这尤其重要，而且路径中的任意一层不得出现中文，尽量不要出现空格。&lt;/p>
&lt;p>需要额外注意的是，Pycharm 会自动为软件本体包裹一层文件夹（如下图所示的&lt;code>Pycharm Community Edition 2021.2.3&lt;/code>），若你下载的（其他软件）的 Destination Folder 不显示包裹的文件夹名，务必手动创建一个「子文件夹」将其包裹，否则你安装的文件可能会散落到你选择的目录下。若不注意，你的工具文件夹就会被污染，各种配置文件或核心文件散落在文件夹中，后期打扫时动都不敢动。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113152838338.png" alt="image-20211113152838338" style="zoom:67%;" />&lt;/div>
&lt;p>如下图所示为作者常用设备中，「专门用于存储编程工具的文件夹」的内容及存储路径。可见此目录存放于路径 &lt;code>E:\\ProjectFire&lt;/code>（非系统盘+英文路径），此目录下除了 &lt;code>Pycharm&lt;/code> 还存放了其他常用的开发工具，比如下文将要介绍的 &lt;code>Miniconda&lt;/code> 以及 &lt;code>Microsoft VS Code&lt;/code>。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524023055864.png" alt="image-20211113152950647" style="zoom: 50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Installation Options&lt;/strong>&lt;/p>
&lt;p>配置安装选项。以「 2021.2.3 Pycharm Community Edition」 安装面板为例。解释相关配置项的含义及其在开发环境中的具体作用，并给出配置建议。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113153013684.png" alt="image-20211113153013684" style="zoom: 67%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Create Desktop Shortcut&lt;/p>
&lt;p>创建桌面快捷方式。不作建议，开心就好。此处为了操作的连贯性，可以勾选，免得安装完毕后软件本体不自动打开，还得花时间找软件比较麻烦，环境配置完成后可手动删除快捷方式。&lt;/p>
&lt;p>当然若你使用 &lt;a class="link" href="https://u.tools/" target="_blank" rel="noopener"
>uTools&lt;/a> 等优秀的桌面工具，可以无视此段介绍。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Update Context Menu&lt;/p>
&lt;p>更新上下文菜单。当你在文件夹中右键空白处，可在「右键菜单」中选择以当前文件夹为根启动 Pycharm。推荐勾选，这不会影响所谓系统性能，当你想在本地快速阅读某个 GitHub 项目源码时，可在本地空白文件（比如桌面新建文件夹）Clone 代码，然后以此种方式快速启动 Pycharm。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113154026804.png" alt="image-20211113154026804" style="zoom: 50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Update PATH Variable(restart needed)&lt;/p>
&lt;p>将 Pycharm 软体的 「bin 文件」添加至系统环境变量。推荐勾选，重启生效。建议在安装完毕后选择 「I want to manually reboot later」并在 Miniconda 安装配置后一并重启。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create Associations&lt;/p>
&lt;p>创建软链映射，打开 &lt;code>.py&lt;/code> 格式文件时以 Pycharm 作为编辑器启动。不推荐勾选。&lt;/p>
&lt;p>Pycharm 显然不是一个轻量的集成开发环境。当你仅想阅览某个 &lt;code>.py&lt;/code> 文件的代码时，使用 Pycharm 打开并不是个明智的选择，这是个启动速度相对较慢的解决方案。无论是否有其他替代方案，都不建议使用 Pycharm 启动，如果实在不妥，你用记事本打开都行。&lt;/p>
&lt;p>举个不恰当的例子，使用 Pycharm 单独启动某个 &lt;code>.py&lt;/code> 文件，相当于看个 15s 的短视频还要非常弱智地看 15s 广告。当然如果你的设备有 32GB+ 内存，从硬件层面就足以秒开一切 Jetbrains IDE，可以无视此段介绍。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>
&lt;p>&lt;strong>Garbage Collection&lt;/strong>&lt;/p>
&lt;p>安装步骤中不存在这步。此处用于说明我们从官网拉取下来的仅是下载器，当我们使用下载器安装软体后，可将下载器安全移除，回收其占用的空间。&lt;/p>
&lt;p>同样，需要一个良好的习惯，在非系统盘符专门创建一个文件夹管理各个软件进程的「运行缓存」或「下载缓存」。下图路径为作者用于管理浏览器下载缓存的目录，红色箭头的标记目标为下载器本体，可将其安全删除。&lt;/p>
&lt;img src="image-20211113161040326.png" alt="image-20211113161040326" style="zoom:67%;" />
&lt;/li>
&lt;/ol>
&lt;h3 id="pycharm-settings">Pycharm Settings&lt;/h3>
&lt;p>以你喜欢的方式打开刚安装好的 &lt;code>Pycharm Community Edition&lt;/code>。&lt;/p>
&lt;img src="image-20211113164718097.png" alt="image-20211113164718097" style="zoom:50%;" />
&lt;p>此处我们不需要迅速实现所谓「Hello World」打印项目，而应该先着手于调整下文所述的最佳实践配置。&lt;/p>
&lt;p>举个不恰当的例子，就像上了车，我们应当习惯于先调整后视镜，调整座椅，检查各项机能，寄上安全带，调整舒服的坐姿，在车况安全的情况下起步。入门任何技术栈都应当如此，所谓「工欲善其事必先利其器」指的不仅仅是挑选一款强大的工具，更要学会如何充分发挥它的优势，让它成为符合自己使用习惯的生产力伙伴。&lt;/p>
&lt;p>而退一步讲，我们暂时还没有配置 Python 解释器，是无法正常运行 Python 代码的。&lt;/p>
&lt;h4 id="marketplace">Marketplace&lt;/h4>
&lt;p>安装对你来说可以降低这款编辑器使用门槛的必要插件，此处推荐几款作者在日常编码中较为常用的第三方插件。&lt;/p>
&lt;p>请注意，插件的安装或更新在重启软件后生效。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Chinese(Simplified) Language Pack / 中文语言包&lt;/strong>&lt;/p>
&lt;p>此款插件可以汉化 Pycharm，汉化进度与软件最新特性保持一致。在插件市场中检索 「Chinese」既可获取插件。&lt;/p>
&lt;img src="image-20211113165038769.png" alt="image-20211113165038769" style="zoom: 50%;" />
&lt;p>重启软件后，界面汉化。&lt;/p>
&lt;img src="image-20211113165217984.png" alt="image-20211113165217984" style="zoom: 50%;" />
&lt;p>当然，此处需要提个醒，此步骤仅仅是降低「上手门槛」，接触编程必须熟悉常用的领域词汇，当你足够熟悉这些概念的时候，可适时停用此插件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Translation&lt;/strong>&lt;/p>
&lt;p>这是一款能够嵌入在 Pycharm 中的翻译软件，通过它，我们可以实现代码上下文的「划词翻译」「语义文档」等比较方便的功能。&lt;/p>
&lt;p>插件市场中检索「Translation」既可获取。&lt;/p>
&lt;img src="image-20211113165921127.png" alt="image-20211113165921127" style="zoom:50%;" />
&lt;p>如下图所示为该插件上下文「划词翻译」的大致效果：&lt;/p>
&lt;div align="center">&lt;img src="image-20211117214825627.png" style="zoom:50%;" />&lt;/div>
&lt;p>当然也可以反向操作，如下图所示。这是个「可替换缓存」菜单，点击候选项可快速替换选中内容。&lt;/p>
&lt;div align="center">&lt;img src="image-20211117215227331.png" style="zoom:50%;" />&lt;/div>
&lt;p>目前插件支持四种翻译引擎，如下图所示。Google 翻译可以使用免费的 API，当然其他的也是免费的，但需要自行配置 &lt;code>Token &lt;/code> 以及 &lt;code>Secret ID&lt;/code>。插件默认使用 Google 翻译引擎，相关设置可在「设置（Settings）」→「工具（Tools）」→「翻译（Translation）」里设置。&lt;/p>
&lt;div align="center">&lt;img src="image-20211117215423229.png" alt="image-20211117215423229" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h4 id="customize">Customize&lt;/h4>
&lt;p>调整对你来说比较舒服的默认主题样式以及键盘映射。编码是一个耗时费力需要长时间专注的工作，请对你的眼睛好点。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113170341583.png" alt="image-20211113170341583" style="zoom:50%;" />&lt;/div>
&lt;p>推荐使用的 Python 编程字体为 &lt;code>Source Code Pro&lt;/code>，&lt;code>JetBrains Mono&lt;/code>，字号和行距与你的工作条件以及编码风格有关。&lt;/p>
&lt;h4 id="keymap">Keymap&lt;/h4>
&lt;blockquote>
&lt;p>建议作为手册查阅，在开发环境配置成功后回看。（持续更新&amp;hellip;&amp;hellip;）&lt;/p>
&lt;/blockquote>
&lt;p>这里总结了一些 Pycharm 中可以提高生产力的快捷键。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>格式化代码&lt;/strong> &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>Alt&lt;/kbd> + &lt;kbd>L&lt;/kbd>&lt;/p>
&lt;div align="center">&lt;img src="gt323.gif" alt="gt323" style="zoom:50%;" />&lt;/div>
&lt;p>值得一提的是，这与 TIM/QQ/网易云音乐 的默认热键冲突，建议修改这些软件的配置。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>运行上下文程序&lt;/strong> &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd>&lt;/p>
&lt;p>详见下文 Python Interpreter 最佳实践中的 &lt;a class="link" href="#best_run" >「run」&lt;/a>部分介绍。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="other">Other&lt;/h4>
&lt;blockquote>
&lt;p>建议作为手册查阅，在开发环境配置成功后回看。（持续更新&amp;hellip;&amp;hellip;）&lt;/p>
&lt;/blockquote>
&lt;p>这里总结了一些 Pycharm 中可以提高生产力的设置。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>调整粘性内存，加快 Pycharm 响应速度。&lt;/strong>&lt;/p>
&lt;p>在菜单栏中选择 「Help」 → 「Change Memory Settings」&lt;/p>
&lt;div align="center">&lt;img src="image-20211127120842747.png" alt="image-20211127120842747" style="zoom:50%;" />&lt;/div>
&lt;p>如下图所示为作者设置的 &lt;code>Maximun Heap Size：12288MiB&lt;/code> ，参考设备的物理内存为 16GB，根据你自己的情况设置。&lt;strong>此处需要留意 MiB 和 MB 是不一样的计量单位&lt;/strong>，详见 &lt;a class="link" href="https://www.gbmb.org/mib-to-mb" target="_blank" rel="noopener"
>MiB to MB Conversion&lt;/a>。&lt;/p>
&lt;div align="center">&lt;img src="image-20211127121015826.png" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>调整 Code Completion，提高代码补全效率&lt;/strong>&lt;/p>
&lt;p>打开设置，选择 「Editor」→「General」→「Code Completion」，将 &lt;code>Match case&lt;/code> 反选。&lt;/p>
&lt;img src="image-20211127121948279.png" alt="image-20211127121948279" style="zoom:50%;" />
&lt;p>&lt;code>Match case&lt;/code> 根据特征字符进行编码补全。我们反选后，我们的代码中仅需出现目标对象/方法/函数的任意大小写字符仅可触发推荐补全，非常方便。&lt;/p>
&lt;p>Python 编程规范中，习惯上使用大驼峰命名类变量（Class），使用蛇形法命名方法（Method）和函数（function）。&lt;/p>
&lt;ul>
&lt;li>大驼峰：不同单词首字母大写如 &lt;code>CoroutineEngine()&lt;/code>&lt;/li>
&lt;li>蛇形：统一小写不同单词用下划线&lt;code>_&lt;/code>隔开如 &lt;code>handle_html()&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>显然，编码过程中频繁切换大小写很容易把中文输入法给按出来，打断我们的编码思路，是个非常搞心态的事情。&lt;/p>
&lt;p>下图所示即为全特征索引补全的效果。&lt;/p>
&lt;div align="center">&lt;img src="image-20211127122427063.png" alt="image-20211127122427063" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3 id="install-miniconda">Install Miniconda&lt;/h3>
&lt;blockquote>
&lt;p>官网下载 &lt;a class="link" href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener"
>Miniconda — Conda documentation&lt;/a>。在官网 &lt;code>Latest Miniconda Installer Links&lt;/code> 中选择你所使用的操作系统对应的二进制文件。如下未说明的配置项保持默认继续下一步即可。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Choose Install Location&lt;/strong>&lt;/p>
&lt;p>选择安装目录。与上文所述观点一致。我们选择安装目录后，Destination Folder 处并未显示 Miniconda 自带的包裹文件名，为了防止上文所述的「散落污染」问题，我们手动补全自定义文件名包裹安装包，不存在的文件夹会自动创建。&lt;/p>
&lt;p>如下图所示，选择 &lt;code>E:\ProjectFire\&lt;/code> 为安装目录，并手动补全 &lt;code>Miniconda&lt;/code> 包裹文件。建议将 Miniconda 和 Pycharm 放在&lt;u>同一目录&lt;/u>下。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524022858712.png" alt="image-20211113173835527" style="zoom: 67%;" />&lt;/div>
&lt;p>&lt;strong>Advanced Installation Options&lt;/strong>&lt;/p>
&lt;p>勾选 &lt;code>Add Miniconda3 to my PATH environment variable&lt;/code> 以及 &lt;code>Register Miniconda3 as my defaulty Python 3.9&lt;/code>&lt;/p>
&lt;div align="center">&lt;img src="image-20220524023626100.png" alt="image-20220524023626100" style="zoom:67%;" />&lt;/div>
&lt;h3 id="python-interpreter">Python Interpreter&lt;/h3>
&lt;h4 id="new-project">New Project&lt;/h4>
&lt;p>回到 Pycharm，以你喜欢的方式「新建项目」。如下图所示为新建项目所需配置的基本参数：&lt;/p>
&lt;div align="center">&lt;img src="image-20220524024602879.png" alt="image-20211113180327178" style="zoom:50%;" />&lt;/div>
&lt;p>默认情况下，虚拟环境名与我们的项目名保持一致。&lt;/p>
&lt;p>点击确定后，Pycharm 会帮助我们自动创建项目文件，虚拟环境文件，并以项目根目录为源码根启动编码窗口，我们等待环境索引完成后便可进行下一步操作。&lt;/p>
&lt;p>&lt;strong>注意！！&lt;/strong> 若你在执行创建指令的过程中遇到了 &lt;code>CondaHTTPError&lt;/code> ，你需要重启计算机后再回到本教程。&lt;/p>
&lt;p>下图所示为 Pycharm 启动后的界面，图中已标记需要重点关注的组件。&lt;/p>
&lt;img src="image-20220524025816319.png" alt="image-20220524025816319" style="zoom:67%;" />
&lt;h4 id="terminal">Terminal&lt;/h4>
&lt;p>&lt;strong>如何优雅地使用命令行工具？&lt;/strong>&lt;/p>
&lt;p>Pycharm 自带运行终端，通过 「终端（Terminal）」，我们可以自动激活当前 Conda 虚拟环境，并基于当前项目路径运行指令。请不要再根据某些教程的指引单独启动 &lt;code>cmd.exe&lt;/code> ，然后又遇上各种「环境变量配置」或是「命令不存在」的低级问题了。&lt;/p>
&lt;p>点击 Pycharm 界面中的「终端（Terminal）」启动组件（快捷键 &lt;kbd>Alt&lt;/kbd> + &lt;kbd>F12&lt;/kbd>），如下图所示。&lt;/p>
&lt;img src="image-20220524030401515.png" alt="image-20220524030401515" style="zoom:50%;" />
&lt;p>此处需要额外注意的是，我们必须确保「终端使用的虚拟环境」与「聚焦编码区所使用的虚拟环境」保持一致。如上图所示，终端激活的环境名为「base」而当前的聚焦环境是「pythonProject」不一致，需要切换终端使用的虚拟环境。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方案一：点击上图标注的🔽符号切换命令行工具，选择「Command Prompt」。该终端激活后自动附带当前聚焦编码区所使用的虚拟环境。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方案二：若上述方案不起作用，可在当前命令行中输入 &lt;code>conda activate [envName]&lt;/code>，也即当前的开发环境名为「pythonProject」，运行指令 &lt;code>conda activate pythonProject&lt;/code> 切换虚拟环境：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20220524030822330.png" style="zoom:50%;" />&lt;/div>
&lt;ul>
&lt;li>
&lt;p>其他情况：若你首次打开的终端中，仅出现了命令行终端的执行路径，未出现括号圈起来的虚拟环境名，按方案二处理即可。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524031140200.png" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么需要关注此步骤？&lt;/strong>&lt;/p>
&lt;p>我们在终端执行 &lt;code>pip&lt;/code> 脚手架指令，对 python 开发依赖的增删改查都是基于当前虚拟环境实现的，不同的虚拟环境的外部资源相互隔离，意味着你在 A 环境中 pip install 安装的依赖，放在 B 环境中不可用。&lt;/p>
&lt;p>绝大多数菜鸟都会遇上「虚拟环境适配问题」引发的偶发性 BUG。例如发现昨天 &lt;code>pip install&lt;/code> 的资源今天 &lt;code>import&lt;/code> 无法找到，这显然是上文提到的问题，既当前聚焦编码区所使用的（未安装指定依赖的）虚拟环境和你已安装指定依赖的虚拟环境不一致。&lt;/p>
&lt;h4 id="run">Run&lt;/h4>
&lt;p>&lt;strong>如何运行第一个 Python 程序？&lt;/strong>&lt;/p>
&lt;p>如下图所示为运行 Python 程序的常用手法。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>run[1]，栈缓存运行。解释器会记住你上一次成功运行的配置并执行配置所关联的 &lt;code>.py&lt;/code> 文件。说人话就是，运行刚跑过的代码。&lt;/p>
&lt;p>这个设定会让许多新手懊恼——「为什么运行结果跟我当前写的东西都不搭噶」。也即编程菜鸟此时已经新建或切换到了另一个 &lt;code>.py&lt;/code> 文件编写代码并点击 run[1] 执行，而此操作却是运行了刚才跑通的代码，这就造成了「输出」不符合预期的假象。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run[2]，基于上下文运行。在不使用快捷键的情况下，右击代码框，或是右击左侧项目结构下的文件，或是右击代码框顶部的文件元素，都可以弹出如下图所示的菜单栏，点选 run[2] 既可。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;img src="image-20211113190554142.png" alt="image-20211113190554142" style="zoom:50%;" />
&lt;p>&lt;span id="best_run">&lt;/span>&lt;/p>
&lt;p>&lt;strong>如何优雅地运行 Python 程序？&lt;/strong>&lt;/p>
&lt;p>此处建议将「基于上下文运行」的快捷键改成 &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd>，这么一来，在完成编码后我们可以以非常顺手地运行当前聚焦的代码。&lt;/p>
&lt;p>在「文件（File）」→「设置（Settings）」→「键盘映射（Keymap）」中搜索「run context configuration」，并将下图所示的 「运行（Run context configuration）」快捷键添加一个 &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd> 触发方式。此时会显示快捷键冲突，可以无视，因为这些功能几乎不会用到。&lt;/p>
&lt;img src="image-20211113200431442.png" style="zoom:50%;" />
&lt;h3 id="hello-world">Hello World&lt;/h3>
&lt;p>现在你已经知道如何在 Pycharm IDE 中编写代码，也知道如何基于本机环境运行 Python 程序。此外，你需要额外做一些在其他教程中不会提及的工作以减轻今后的 Python 学习阻力。&lt;/p>
&lt;h4 id="pip">pip&lt;/h4>
&lt;p>常见的主流编程语言都会有「第三方编程依赖（wheel）」的设计，用以减轻开发压力。我们仅需关注极具创造力的部分，而重复性的繁琐的底层代码，我们可以通过优秀的 wheel 轮子解决。&lt;/p>
&lt;p>wheel 是其他人写好的，开放使用的，致力于解决特定场景问题的模块集成。支持 wheel 的语言都有一套拉取 wheel 的方案，而 Python 中推荐使用 pip 脚手架工具管理 wheel。&lt;/p>
&lt;p>根据上文的介绍，启动 Terminal 并在当前虚拟环境的命令行窗口下执行如下代码，可查看 pip 工具的基础信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip --help
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>pip v21.0.1(python 3.8)&lt;/code> 的可用指令如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Usage:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pip &amp;lt;command&amp;gt; &lt;span class="o">[&lt;/span>options&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Commands:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> install Install packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> download Download packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uninstall Uninstall packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> freeze Output installed packages in requirements format.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> list List installed packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> show Show information about installed packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> check Verify installed packages have compatible dependencies.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config Manage &lt;span class="nb">local&lt;/span> and global configuration.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> search Search PyPI &lt;span class="k">for&lt;/span> packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache Inspect and manage pip&lt;span class="err">&amp;#39;&lt;/span>s wheel cache.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wheel Build wheels from your requirements.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">hash&lt;/span> Compute hashes of package archives.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> completion A helper &lt;span class="nb">command&lt;/span> used &lt;span class="k">for&lt;/span> &lt;span class="nb">command&lt;/span> completion.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> debug Show information useful &lt;span class="k">for&lt;/span> debugging.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">help&lt;/span> Show &lt;span class="nb">help&lt;/span> &lt;span class="k">for&lt;/span> commands.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上方列出的指令中，比较常用的有：&lt;/p>
&lt;ul>
&lt;li>install：我们下载 wheel 基本都是用这个指令&lt;/li>
&lt;li>uninstall：卸载 wheel&lt;/li>
&lt;li>list：显示当前虚拟环境中的第三方依赖&lt;/li>
&lt;li>show：显示某个依赖的详细信息，通常用来查看依赖版本和安装路径&lt;/li>
&lt;li>config：设置运行变量，最常用的变量是 &lt;code>global.index&lt;/code> 配置安装源&lt;/li>
&lt;li>help：帮助指令&lt;/li>
&lt;/ul>
&lt;h4 id="pip-config">pip config&lt;/h4>
&lt;p>根据上文的定义，这些依赖本质上是由代码组成的文件，而「第三方」的概念尤其重要，他们并不会无故出现在你的电脑上（当前虚拟环境），最常见的方式是通过网络输送到你的电脑上。而这个输送源默认是一个国外站点 pypi org，我们在不使用代理的情况下直接通过 &lt;code>install&lt;/code> 指令拉取第三方依赖的下载速度极其慢。&lt;/p>
&lt;p>而至今，已有很多先驱者和引领者帮我们解决了这些问题——缓存镜像站，这些站点将数量极其庞大的存储在 pypi 上的资源包缓存到了国内多个节点服务器上，我们通过这些节点服务器即可以“跑满带宽”的速度拉取依赖。&lt;/p>
&lt;p>此处修改这个指向的源也可通过一行指令搞定：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config &lt;span class="nb">set&lt;/span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这行指令通过 &lt;code>set&lt;/code> 关键字修改全局（global）变量（index）的值为 &lt;code>https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code>，这是清华源的镜像站接口地址。除此之外，国内仍有许多提供缓存资源的优秀镜像站点：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 豆瓣 https://pypi.tuna.tsinghua.edu.cn/simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 阿里 https://mirrors.aliyun.com/pypi/simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 中科大 https://pypi.mirrors.ustc.edu.cn/simple&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>替换源仅需执行相同的指令并替换链接既可。&lt;/p>
&lt;p>📌此处需要注意的是，这类开放式镜像源一般需要&lt;strong>直连访问&lt;/strong>。若使用代理访问，较大概率遇上 &lt;code>SSLError&lt;/code> 错误，具体描述及解决方案可见本博客的 &lt;a class="link" href="https://blog.echosec.top/p/python-debug/#:~:text=%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E2%80%A6-,%E2%80%A6,-%3E%3E%3E%20pip%20config%20list" target="_blank" rel="noopener"
>Python 开发日记&lt;/a>。&lt;/p>
&lt;p>使用如下指令查看已配置的全局镜像源接口地址：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config get global.index-url
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以使用如下指令查看自定义的变量，并在其中寻找 &lt;code>global.index-url&lt;/code> 的值：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="pip-install">pip install&lt;/h4>
&lt;blockquote>
&lt;p>📌 需要留意当前 Terminal 的激活环境是否和当前开发环境一致。&lt;/p>
&lt;/blockquote>
&lt;p>现在你已经配置好了镜像源，可以用正常的网速拉取依赖。请执行如下指令安装 demo 开发必要的依赖：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install easygui
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处使用了 &lt;code>install&lt;/code> 指令拉取开发依赖，&lt;code>easygui&lt;/code> 是依赖名称，后面可跟多个依赖名一并安装。&lt;/p>
&lt;h4 id="rerun">rerun&lt;/h4>
&lt;p>等待 &lt;code>easygui&lt;/code> 安装完成，等待 Pycharm 索引完毕后，复制，粘贴，运行如下代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">邦尼百度APP
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;gt; 不懂就问：百度怎么用？！（认真脸）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">webbrowser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">easygui&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">BAIDU_SEARCH_API&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://www.baidu.com/s?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">STACKOVERFLOW_SEARCH_API&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://stackoverflow.com/search?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_key&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 通过 GUI 窗口获取检索关键词
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">key_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">easygui&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enterbox&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">msg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;请输入检索关键词&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;邦尼百度&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#34;孤勇者&amp;#34; &amp;#34;女声&amp;#34; site:bilibili.com&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">key_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">handle_key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key_&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 过滤关键词，使用 default browser 查询关键词。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :param key_:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 添加过滤词缀&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_filter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">key_&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34; -csdn.net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 简单拼接访问网址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BAIDU_SEARCH_API&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;wd=&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">_filter&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 启动默认浏览器访问链接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">webbrowser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_key&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">handle_key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">webbrowser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">STACKOVERFLOW_SEARCH_API&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;q=&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若你能得到正确的运行结果，说明一切安好并完成了 Python 的历史性对话！&lt;/p>
&lt;h2 id="visual-studio-code">Visual Studio Code&lt;/h2>
&lt;h2 id="related-issues">Related Issues&lt;/h2>
&lt;h3 id="condahttperror">CondaHTTPError&lt;/h3>
&lt;blockquote>
&lt;p>CondaHTTPError: HTTP 000 CONNECTION FAILED for url&lt;/p>
&lt;/blockquote>
&lt;p>安装完 Miniconda 并启动 Pycharm 首次创建 Conda 虚拟环境后出现此错误，重启计算机即可解决。&lt;/p>
&lt;h3 id="proxyerror">ProxyError&lt;/h3>
&lt;blockquote>
&lt;p>ProxyError: Conda cannot proceed due to an error in your proxy configuration.&lt;/p>
&lt;/blockquote>
&lt;p>在 Pycharm 中通过引导创建 Conda 虚拟环境时抛出。按照下文&amp;lt;代理设置&amp;gt;指出的对比实验结果进行调整。例如关闭系统代理进行安装，或开启代理工具的 TUN 模式（全局隧道模式），或将 base 虚拟环境中的 &lt;code>urllib3&lt;/code> 第三方库的版本调整至 &lt;code>v1.25.11&lt;/code>，&lt;code>pip install urllibe==1.25.11&lt;/code>。&lt;/p>
&lt;h3 id="代理设置">代理设置&lt;/h3>
&lt;p>下图展示了在 Pycharm 中手动创建 Conda 虚拟环境的结果与系统代理的关系。使用 &lt;code>conda create&lt;/code> 命令行创建时，无论哪种代理设置情况都可以成功创建。&lt;/p>
&lt;p>注意：Pycharm 软件中的代理设置始终设为「无代理」，依靠其他代理工具接管设备流量。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148.png"
width="1220"
height="1218"
srcset="https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148_hu9e9a41948c0f2d000a0c1345505face2_203719_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148_hu9e9a41948c0f2d000a0c1345505face2_203719_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220524032007148"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;h3 id="github-copilot">GitHub Copilot&lt;/h3>
&lt;blockquote>
&lt;p>With &lt;a class="link" href="https://copilot.github.com/" target="_blank" rel="noopener"
>GitHub Copilot&lt;/a>, get suggestions for whole lines or entire functions right inside your editor.&lt;/p>
&lt;/blockquote></description></item><item><title>『Blog』Robot Yea</title><link>https://blog.echosec.top/p/robot-yea/</link><pubDate>Fri, 15 Oct 2021 19:40:23 +0800</pubDate><guid>https://blog.echosec.top/p/robot-yea/</guid><description>&lt;img src="https://blog.echosec.top/p/robot-yea/sins.jpg" alt="Featured image of post 『Blog』Robot Yea" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;h2 id="features">Features&lt;/h2>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h2 id="development">Development&lt;/h2>
&lt;h2 id="changelog">Changelog&lt;/h2>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;h2 id="support">Support&lt;/h2>
&lt;h2 id="contact">Contact&lt;/h2>
&lt;h2 id="authors-and-acknowledgment">Authors and acknowledgment&lt;/h2>
&lt;h2 id="license">License&lt;/h2>
&lt;p>&lt;img src="https://blog.echosec.top/p/robot-yea/Roobt-Yea.svg"
loading="lazy"
alt="Roobt-Yea"
>&lt;/p></description></item><item><title>『Blog』Selenium 4.0</title><link>https://blog.echosec.top/p/selenium4-intro/</link><pubDate>Thu, 14 Oct 2021 23:45:57 +0800</pubDate><guid>https://blog.echosec.top/p/selenium4-intro/</guid><description>&lt;img src="https://blog.echosec.top/p/selenium4-intro/adb2.jpg" alt="Featured image of post 『Blog』Selenium 4.0" />&lt;h2 id="overview">Overview&lt;/h2>
&lt;blockquote>
&lt;p>I know it’s a cliche to say that it’s a “very great pleasure”, but, being honest with you, it genuinely is.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="noopener"
>Selenium 4&lt;/a> 不仅对前代版本做了稳定提升，还带来了大量令人兴奋的新功能，这能让我们的测试编写起来更有趣，也能在运行时更加稳定。&lt;/p>
&lt;h2 id="authenticationspan-idauthspan">Authentication&lt;span id="auth">&lt;/span>&lt;/h2>
&lt;p>Selenium 4.0 的一个重要更新是 &lt;strong>身份验证&lt;/strong> 能力。&lt;/p>
&lt;p>在过去，我们一直能使用 Selenium 处理一些「登录」请求，譬如通过定位特征元素（如 &lt;code>Input&lt;/code> ）来控制 Driver 进行定位（如 &lt;code>find_element_by_xpath() &lt;/code>）、输入（如 &lt;code>send_key()&lt;/code> ）、提交（如 &lt;code>click()&lt;/code> ）完成身份验。然而，我们使用这套工作流处理一些特殊框架的站点（如 &lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noopener"
>basic or digest authentication&lt;/a>）时效果差强人意。因此，我们在使用 Selenium 处理难以应付的登录要求时，总会在启动前携带 &lt;code>cookie&lt;/code>。&lt;/p>
&lt;p>上述情况将在 Selenium 4.0 时代有所改观。我们可以通过调用 &lt;code>register&lt;/code> 方法来添加 「username」以及 「password」或是其他 Token 执行身份认证任务，而无需再繁琐地定位元素发送消息或是与人机验证勾心斗角，「验证」行为由 Driver 底层实现。&lt;/p>
&lt;p>如下案例演示了新方法的功能实现：&lt;/p>
&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// This &amp;#34;HasAuthentication&amp;#34; interface is the key!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">HasAuthentication&lt;/span> &lt;span class="nf">authentication&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">HasAuthentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// You can either register something for all sites
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernameAndPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Or use something different for specific sites
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">uri&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHost&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;mysite.com&amp;#34;&lt;/span>&lt;span class="o">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernameAndPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;AzureDiamond&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;hunter2&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Ruby&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当我们完成 &lt;code>add&lt;/code> 添加操作后，每当站点要求或是 &lt;code>driver&lt;/code> 加载出身份认证页面时，Selenium 会帮我们自动提供验证信息（如 username 与 password），&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/bidi_apis/#register-basic-auth" target="_blank" rel="noopener"
>这样的操作是隐式完成的&lt;/a>。以往，我们可能需要单独开一条线程来应对随时可能出现的 「运行时身份认证」或是通过 「try&amp;hellip;exception」机制主动捕获异常并调用相应的处理模块。&lt;/p>
&lt;p>这个特性目前是基于 Selenium 4 的 &lt;a class="link" href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener"
>CDP&lt;/a> （Chrome DevTools Protocol）实现的，意味着此功能仅能运行在支持这个协议的浏览器上。值得一提的是，Selenium 旗下产品 &lt;a class="link" href="https://w3c.github.io/webdriver-bidi/" target="_blank" rel="noopener"
>WebDriver Bidi&lt;/a> 的允许开发者在不支持 CDP 的浏览器使用这项功能，好消息是这个项目还未完整孵化出来，我们可以期待一下。&lt;/p>
&lt;h2 id="relative-locators">Relative Locators&lt;/h2>
&lt;p>相对定位器（Relative Locators）是一种基于「自然语言术语」的元素定位解决方案，开发者可通过诸如「上方」「下方」「左侧」「右边」等描述捕获那些「看得见但摸不着」的标记元素，这种描述可以适应 DOM 的变化。&lt;/p>
&lt;p>这种方法背后的概念是允许开发者根据在页面上描述元素的方式来查找元素。更自然的说法是「find the element that is below the image」，而不是「find the INPUT inside the DIV with the &amp;ldquo;id &amp;quot; of &amp;ldquo;main&amp;rdquo;」 。通常，我们可以将此方案视为一种==基于视觉==的元素定位方法。&lt;/p>
&lt;p>这套方法论最初由 &lt;a class="link" href="https://www.sahipro.com/" target="_blank" rel="noopener"
>Sahi&lt;/a> 提出，这是一个极其强大的基于 &lt;a class="link" href="https://baike.baidu.com/item/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0/23661682" target="_blank" rel="noopener"
>低代码&lt;/a> 实现的自动化测试平台，感兴趣的朋友可以了解以下。&lt;/p>
&lt;p>我们以 &lt;code>Python&lt;/code> 和 &lt;code>Java&lt;/code> 举个例子，简要说明这个方案的强大之处。&lt;/p>
&lt;p>如下图所示是一个常见的登陆页面，我们现在尝试用新版本 API 定位页面元素。&lt;/p>
&lt;div align="center">&lt;img src="login-form-relative-locators.png"/>&lt;/div>
&lt;h3 id="above">Above&lt;/h3>
&lt;p>如上图是一个常见的登录页面，我们想找到位于密码字段上方的电子邮件地址字段。为此，我们通过其 id 找到密码字段，然后使用 relative locators 定位器捕获电子邮件字段。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">above&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">passwordField&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">above&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passwordField&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="below">Below&lt;/h3>
&lt;p>反过来，让我们定位密码字段，它位于电子邮件地址字段下方。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">below&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emailAddressField&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">below&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">emailAddressField&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="to-the-left-of">To the left Of&lt;/h3>
&lt;p>让我们考虑一下我们想要在「提交」按钮左侧找到元素的情况。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">to_left_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">submitButton&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">toLeftOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">submitButton&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="to-the-right-of">To the Right Of&lt;/h3>
&lt;p>现在我们将考虑相反的情况，我们希望找到「取消」按钮右侧的元素。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;cancel&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">to_right_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cancelButton&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;cancel&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">toRightOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cancelButton&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="near">Near&lt;/h3>
&lt;p>上文「适应 DOM 的变化」从何而来？我觉得 &lt;code>near&lt;/code> function 是个非常重要的体现，它允许我们通过一定的规则指定所选取的元素周围 &lt;code>50px&lt;/code> 以内的其他元素。小伙伴们首先想到什么？欸嘿我不说。官方文档中这一句不起眼的描述，可能在未来，成为万千依靠 Selenium 工作的工程师们实现财富自由的垫脚石。&lt;/p>
&lt;p>回到话题，在这个案例中，我们可以通过先定位邮件标签，再通过寻找 &lt;code>input&lt;/code> tag 的偏移量，最终定位邮件地址的输入框。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressLabel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lbl-email&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">near&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emailAddressLabel&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressLabel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;lbl-email&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">near&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">emailAddressLabel&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="enhancement">Enhancement&lt;/h2>
&lt;p>如果你使用 &lt;a class="link" href="https://www.mozilla.org/en-GB/firefox/new/" target="_blank" rel="noopener"
>Firefox&lt;/a> 或是其他基于 &lt;a class="link" href="https://www.chromium.org/Home" target="_blank" rel="noopener"
>Chromium&lt;/a> 的浏览器，Selenium 4 还提供了强大的增强特性。&lt;/p>
&lt;p>除了上文介绍的 &lt;a class="link" href="#auth" >Authentication&lt;/a> ，Selenium 4 还添加了 Network Interception（&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418" target="_blank" rel="noopener"
>Are you an HTTP 418?&lt;/a>）以及一些常见执行请求，如更加高效的「等待 DOM 变更」的方法，或是查看 Javascript 错误的方法等等。&lt;/p>
&lt;p>值得一提的是，这些提升大都是基于现有 API 打磨的，意味着我们原先引用的函数方法无需改动，而我们只需升级版本 如 &lt;code>pip install --upgrade selenium&lt;/code> ，这些库函数将被自动替换（如果是要使用原先没有的新功能我们当然得改代码）。&lt;/p>
&lt;h2 id="selenium-grid">Selenium Grid&lt;/h2>
&lt;p>Selenium 重构了 &lt;a class="link" href="https://www.selenium.dev/documentation/grid/" target="_blank" rel="noopener"
>Grid&lt;/a> ，使其完全支持分布式，能够运行于 Kubernetes 等现代基础设施之上。&lt;/p>
&lt;p>重构后的 Grid 可以管理本地机器上的 Docker 容器，提取诸如独立的 Firefox 服务器之类的镜像，这样我们的基础设施维护工作就会变得轻松一些。&lt;/p>
&lt;p>最后， Grid 更加安全，也更加易于管理。Selenium 改进了 Grid 的UI，将其置于 GraphQL 模型上运行，任何人都可以自由查询并使用该模型来创建自己的可视化或 Grid 监视器。开发者可以使用 VNC 与正在运行的会话（session）进行交互，从而更好地了解到正在发生地事情。&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/blog/2021/announcing-selenium-4/" target="_blank" rel="noopener"
>Announcing Selenium 4 | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/locating_elements/#relative-locators" target="_blank" rel="noopener"
>Locating elements | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/bidi_apis/#register-basic-auth" target="_blank" rel="noopener"
>BiDi APIs | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418" target="_blank" rel="noopener"
>418 I&amp;rsquo;m a teapot - HTTP | MDN (mozilla.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noopener"
>HTTP authentication - HTTP | MDN (mozilla.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="noopener"
>SeleniumHQ/selenium: A browser automation framework and ecosystem. (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『Notes』Python Programming diary</title><link>https://blog.echosec.top/p/python-debug/</link><pubDate>Thu, 14 Oct 2021 18:14:26 +0800</pubDate><guid>https://blog.echosec.top/p/python-debug/</guid><description>&lt;img src="https://blog.echosec.top/p/python-debug/6e1a7a.jpg" alt="Featured image of post 『Notes』Python Programming diary" />&lt;h2 id="packagesnotfounderror-the-following-packages-are-missing-from-the-target-environment">PackagesNotFoundError: The following packages are missing from the target environment&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 使用 Pycharm 手动添加新环境，或使用 &lt;code>conda create -n [env-name] [python=3.9]&lt;/code>指令遇到如下报错：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PackagesNotFoundError: The following packages are missing from the target environment - &lt;span class="nv">python&lt;/span>&lt;span class="o">=&lt;/span>3.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>事件回溯：&lt;/strong> Pycharm 手动添加源，本质上相当于执行了 &lt;code>conda&lt;/code> 脚手架指令，简单的可视化交互其本质上也只是使用了 &lt;code>-p&lt;/code> 参数指定 &lt;code>env&lt;/code> 存储路径以及 &lt;code>Python&lt;/code> 版本，所以根因出在脚手架身上。&lt;/p>
&lt;p>在报错时，我设置了 &lt;code>conda config:channels&lt;/code> 也就是所谓的 「源」为清华源。若我开启本机代理，则环境创建会时抛出另一个访问清华园的 &lt;code>404&lt;/code> 错误；若我不开启本机代理，则会抛出本 Tag 异常。我在开关本机代理的时候，也排列组合设置了 Pycharm 中的代理设置（无代理/手动代理）。最终依靠移除 &lt;code>conda&lt;/code> 关于源的环境变量解决问题。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 执行如下代码移除 &lt;code>conda&lt;/code> 源（使用默认源）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">conda config --remove-key channels
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="sslerrorssleoferror8-eof-occurred-in-violation-of-protocol-_sslc1129">SSLError(SSLEOFError(8, &amp;lsquo;EOF occurred in violation of protocol (_ssl.c:1129)&amp;rsquo;))&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 使用 &lt;code>pip&lt;/code> 脚手架下载任意包抛出。先经过 N 论超时警告，最后抛出 &lt;code>SSLError&lt;/code> 或 &lt;code>HTTPSConnectionPool&lt;/code> 异常。错误日志如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; pip install requests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>4, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>3, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>2, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>1, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Could not fetch URL https://pypi.tuna.tsinghua.edu.cn/simple/requests/: There was a problem confirming the ssl certificate: HTTPSConnectionPo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ol&lt;span class="o">(&lt;/span>&lt;span class="nv">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;pypi.tuna.tsinghua.edu.cn&amp;#39;&lt;/span>, &lt;span class="nv">port&lt;/span>&lt;span class="o">=&lt;/span>443&lt;span class="o">)&lt;/span>: Max retries exceeded with url: /simple/requests/ &lt;span class="o">(&lt;/span>Caused by SSLError&lt;span class="o">(&lt;/span>SSLEOFError&lt;span class="o">(&lt;/span>8, &lt;span class="s1">&amp;#39;EOF occu
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">rred in violation of protocol (_ssl.c:1129)&amp;#39;&lt;/span>&lt;span class="o">)))&lt;/span> - skipping
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR: Could not find a version that satisfies the requirement requests &lt;span class="o">(&lt;/span>from versions: none&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR: No matching distribution found &lt;span class="k">for&lt;/span> requests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>事件回溯：&lt;/strong>&lt;code>pip&lt;/code> 配置了全局 &lt;a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener"
>清华源&lt;/a>（如下所示），运行指令时使用由 &lt;code>v2rayN&lt;/code> 发起的系统代理，这是一个「墙内人」几乎不会遇到的问题……&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; pip config list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">global.index-url&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;https://pypi.tuna.tsinghua.edu.cn/simple&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考方案：&lt;/strong> 根因在于我们访问的镜像接口识别并屏蔽了代理流量（不可信的源），也即核心解决思路为「不使用代理」访问镜像源。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>「&lt;strong>推荐&lt;/strong>」修改 &lt;u>代理客户端&lt;/u> 路由规则（以 &lt;code>v2rayN&lt;/code> 为例其他代理软件同理）&lt;/p>
&lt;p>这是个一劳永逸的做法，代理软件将不再接管访问此域名的流量。&lt;/p>
&lt;p>启动代理客户端，依次打开 &lt;kbd>设置&lt;/kbd> → &lt;kbd>参数设置&lt;/kbd> → &lt;kbd>系统代理设置&lt;/kbd>，在「例外」中填入镜像域名，以清华源 pip 镜像域名为例，填入 &lt;code>pypi.tuna.tsinghua.edu.cn&lt;/code>，如下图所示：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220524045444990.png" style="zoom: 67%;" />&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>&lt;strong>「推荐」&lt;/strong> 开启 TUN 模式代理（以 Clash for Windows v0.19.19 为例）&lt;/p>
&lt;p>在面板中启动 TUN Mode，此时 Clash 可以通过端点间隧道（虚拟网卡）代理当前局域网的全局流量，此时无论是浏览器流量还是各种电脑软件的流量都会通过 Clash 虚拟网卡访问互联网。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在执行 &lt;code>pip&lt;/code> 指令时清除系统代理，也即关闭代理软件的系统代理功能&lt;/p>
&lt;p>比较繁琐，需要执行前关闭代理，（如果你当前的环境依赖代理）执行后再重新开启代理。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="文件编码">文件编码&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 此问题难以使用某一类异常描述，因为运行时不会报错，但运行结果和预想的不太一样。例如，网络上抓取语料，需要获取 &lt;code>user-nickname&lt;/code>，不免会遇上使用特殊符号命名的玩家。这些符号直接在网页上渲染，或是直接在控制台输出，都是「所见即所得」，但在「写入文件」这一步骤时，出现了不可控的「乱码」问题。&lt;/p>
&lt;p>&lt;strong>事件回溯：&lt;/strong> 以下方 Python 代码为例，我们定义一个包含「特殊符号」集合的变量，并以 UTF-8 编码形式将其写入到 CSV 文件当中。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">csv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;🌪&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;嬡芣释掱&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newline&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">writer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">writer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writerow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打开 &lt;code>test.csv&lt;/code>，查看写入的数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162216767.png" alt="image-20211025162216767" style="zoom:50%;" />&lt;/div>
&lt;p>当时的第一反应是 &lt;code>encoding&lt;/code> 参数的选择不恰当，而事实证明的确如此。但我却在编码类型的选择上陷入大坑。最后试出了一种能够正常显示写入数据的编码格式 &lt;code>utf-16&lt;/code>。&lt;/p>
&lt;p>修改参数 &lt;code>encoding=&amp;quot;utf-16&amp;quot;&lt;/code> 后再次打开文件，查看写入数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162348681.png" alt="image-20211025162348681" style="zoom:50%;" />&lt;/div>
&lt;p>可以看到「特殊符号」的**字形（glyph）**已被正常渲染，但似乎分隔符的识别出现了问题，同一行数据被识别为同一个单元的内容。&lt;/p>
&lt;p>于是我在查了有关资料后，找到了另一种编码格式 &lt;code>utf-8-sig&lt;/code>。&lt;/p>
&lt;p>修改参数 &lt;code>encoding=&amp;quot;utf-8-sig&amp;quot;&lt;/code> 后再次打开文件，查看写入数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162553256.png" alt="image-20211025162553256" style="zoom:50%;" />&lt;/div>
&lt;p>蚌埠住了，这次分隔符正常识别，火星文正常显示，但表情包符号却乱码了。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 使用 &lt;code>utf-8-sig&lt;/code> 或 &lt;code>utf-16&lt;/code> 编码尝试应对字形渲染问题。&lt;/p>
&lt;p>但值得一提的是，无论是 &lt;code>utf-8&lt;/code>、&lt;code>utf-8-sig&lt;/code> 还是 &lt;code>utf-16&lt;/code> ，只要不是默认的 &lt;code>gbk&lt;/code> 都不会引发读写错误。尽管在 GUI 软件上出现了字形渲染的问题，但将同样的数据读回 Python 程序后，其仍然是一个正常显示的可以操作的 str 对象。&lt;/p>
&lt;h2 id="字符编码">字符编码&lt;/h2>
&lt;blockquote>
&lt;p>最后更新时间：2022-01-28&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>错误现象：&lt;/strong>「看着一摸一样」的两句字符串，在 &lt;code>==&lt;/code> 条件判别下返回 &lt;code>Flase&lt;/code>。&lt;/p>
&lt;p>&lt;strong>事件回溯：&lt;/strong> 这里要记录一个有趣的背景故事。这是作者在玩 &lt;a class="link" href="https://www.hcaptcha.com/" target="_blank" rel="noopener"
>hCaptcha challenge&lt;/a> 时遇上的趣事。&lt;/p>
&lt;p>如果你接触过爬虫，你一定了解这玩意（如下图所示），给出一个需求标签，点选九宫格中符合要求的图片。当下有很多流行的人机挑战， &lt;code>hCaptcha challenge&lt;/code> 算是其中 T0 级别的模块，能够阻挡近乎九成的爬虫流量，新手遇上这种视觉验证类的 &lt;code>CAPTCHA&lt;/code> ，基本上不会有太多想法。&lt;/p>
&lt;div align="center">&lt;img src="image-20220128230029379.png" alt="image-20220128230029379" style="zoom:50%;" />&lt;/div>
&lt;p>但我们环顾这个技术行业，&lt;code>hCaptcha challenge&lt;/code> 显然算不上最“变态”的或者说最困难的人机挑战。最相关的好比 Google 的 &lt;code>reCaptcha v2&lt;/code> ，除了简单的图像分类外，还创新性的使用了图像切割的形式抽象地表述实体，让简单的「分类问题」变成了难度更高的「目标识别」问题（如下图所示），从编码者角度来看，无论是自动化模块的编写还是视觉模块的处理都是不小的挑战。&lt;/p>
&lt;div align="center">&lt;img src="Snipaste_2022-01-29_00-00-03.png" alt="Snipaste_2022-01-29_00-00-03.png" style="zoom:50%;" />&lt;/div>
&lt;p>当然，如果你同时熟悉 &lt;code>Undetected Automation&lt;/code> 以及 &lt;code>Darknet Image Classification&lt;/code> 或 &lt;code>Object Detection&lt;/code>，我相信这对你来说不是什么难事。但你要相信，当下的人机挑战的病态程度已经远超你的想象，篇幅有限此处不多展开，后买咱再开个坑详细说说「人机挑战的那些事」。&lt;/p>
&lt;p>&lt;strong>回到正题&lt;/strong>，此处的 &lt;code>字符编码&lt;/code> 问题出自于 &lt;code>hCaptcha challenge&lt;/code> 。我们通过网页元素截取 &lt;code>label&lt;/code> 也即我们需要 「点击」的图像标签名，送入模型比对后得出相应的结果。此处截取的 &lt;code>label&lt;/code> 是具有 &lt;code>locale&lt;/code> 特性的，如果你以 &lt;code>zh-CN&lt;/code> 请求形式打开，标签名会显示中文。坑就在这了，作者获取到的某些 &lt;code>label&lt;/code> 并&lt;u>不是标准的中文格式编码&lt;/u>，什么意思呢，你可以用你喜欢的编程语言去比对如下两个字符串，看它们是否“相等”。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Python &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ー条船&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;一条船&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>结果显然是不相等的，在该篇博客中，由于页面字体兼容此种字符编码的渲染，所以你很明显能看到两个“一”有所不同，但如果在你的 &lt;code>IDE&lt;/code> 中，设置了等宽编程字体，或者 &lt;code>Source code pro&lt;/code> 之类的流行字体，这对字符串从肉眼看是完全一样的。&lt;/p>
&lt;p>不知道这是不是 &lt;code>hCaptcha&lt;/code> 开发团队的有意为之，至少我觉得这是从“反爬虫”角度来说非常高明的一招。想撩到来犯爬虫，先潦倒它的开发者。同样地，其他语种也会有这样的问题，如英文 &lt;code>bіcycle&lt;/code>（自行车）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#Python&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;bіcycle&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;bicycle&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>好的，这下连本博客的默认字体引擎也无法渲染了，肉眼可见的“完全一致”，但如果你将它们复制进你的 &lt;code>IDE&lt;/code> ，执行结果显然是 &lt;code>False&lt;/code>。&lt;/p>
&lt;p>如果你也感叹这一招十分高明，大可在网上检索一下其中的“玄机”。&lt;/p>
&lt;p>如果你也在处理 &lt;code>hCaptcha challenge&lt;/code>，和我使用同样的思路获取 &lt;code>label&lt;/code>，并且没有发现这个字符编码问题，你会陷入窘况。显然，我们训练的模型的标注 &lt;code>label&lt;/code> 都是标准的国际统一的字符编码，在这种特殊的情况下，一个单词，因为某个字母的编码不同，经过解释器后，在模型看来，这是两个完全不一样的“实体目标”。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 手动编织 &lt;code>dict mapping&lt;/code> ，将异常编码做一层映射再导向模型。&lt;/p>
&lt;p>这是个有效的，但也是最笨的方法。当然，根据本人的实验结论来看，使用 &lt;code>locale=zh-CN&lt;/code> 时，这项阻碍是最小的（大部分异常都能看出差别）。如果你使用 &lt;code>en-US&lt;/code> 本地化，任何一个英文字母都有可能出现异常编码（且肉眼难以察觉），工程难度非常大。&lt;/p>
&lt;h2 id="此时不应有-">此时不应有 &amp;amp;&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 命令提示符抛出提示「此时不应有 &amp;amp;」后秒退。在 Pycharm 中启动的 CMD 终端秒退。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> &lt;kbd>Win&lt;/kbd> + &lt;kbd>R&lt;/kbd> ，键入 &lt;code>regedit&lt;/code> 打开注册表，在如下路径找到 &lt;code>Autorun&lt;/code>，将其数据数值删去。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cython" data-lang="cython">&lt;span class="line">&lt;span class="cl">&lt;span class="n">HKEY_CURRENT_USER&lt;/span>\&lt;span class="n">Software&lt;/span>\&lt;span class="n">Microsoft&lt;/span>\&lt;span class="n">Command&lt;/span> &lt;span class="n">Processor&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="image-20220524043332047.png" alt="image-20220524043332047" style="zoom: 50%;" /></description></item><item><title>『Hugo』Hugo Styles</title><link>https://blog.echosec.top/p/custom-hugo-theme-styles/</link><pubDate>Sun, 10 Oct 2021 18:21:10 +0800</pubDate><guid>https://blog.echosec.top/p/custom-hugo-theme-styles/</guid><description>&lt;img src="https://blog.echosec.top/p/custom-hugo-theme-styles/86fa17a.jpg" alt="Featured image of post 『Hugo』Hugo Styles" />&lt;h2 id="引言">引言&lt;/h2>
&lt;p>相信你点开这篇文章时，就已感受到本站主题与站源默认样式有较大区别。&lt;/p>
&lt;p>作者最近在自学一些前端的知识，顺便捡起 Hugo 折腾博客建站，理论实践双路开花（不是。在折腾的过程中，结合一些学到的东西，适当发挥，产生了一些曼妙的想法。&lt;/p>
&lt;p>本文就此分享一些站源默认样式不具备的特性以及一些有趣的风格魔改玩法。&lt;/p>
&lt;h2 id="preview">Preview&lt;/h2>
&lt;p>在开始修改样式之前呢，请确保你知道自己在做什么！你需要知道你应该修改哪些文件以达到想要的结果。此部分有经验的玩家可以跳过了~&lt;/p>
&lt;p>Hugo 的模板渲染具有层级明显的覆盖路径。若你也在使用 Stack 主题，你会发现你的站点目录下存在 &lt;code>./themes/hugo-theme/stack&lt;/code>主题目录，而此主题目录结构是否与你站点根目录的结构非常相似？是的，主题项目本身就是一个完整的 Hugo 站点样式，而 Hugo 会优先索引你站点根目录下的文件，其次才是主题子目录。不同根但同层级下的同名文件，会出现「交并」现象，也即你需要将需要改动的文件连同文件夹一起复制到你的站点根目录下，仅改动你站点根目录下的资源。&lt;/p>
&lt;h2 id="仿-vue-风格魔改">仿 Vue 风格魔改&lt;/h2>
&lt;h3 id="修改选中目标样式">修改「选中目标」样式&lt;/h3>
&lt;p>你需要新建/修改站点文件 &lt;code>./assets/scss/custom.scss&lt;/code>，添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 设置选中字体的区域背景颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nd">::selection&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#dae3ea&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#34495e&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">::-moz-selection&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#dae3ea&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#34495e&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">::-webkit-selection&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#dae3ea&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#34495e&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们可以获得如下改变，视觉舒适感倍增！&lt;/p>
&lt;div align="center">&lt;img src="image-20211010200628635.png" alt="image-20211010200628635" style="zoom: 50%;" />&lt;/div>
&lt;div align="center">&lt;img src="image-20211010200715239.png" alt="image-20211010200715239" style="zoom:50%;" />&lt;/div>
&lt;p>顺便提一嘴有没有人和我一样觉得浏览器默认选中体样式有点丑，虽然平时看的很快，也不会在意这些细节，但停下来观察区分后，这种细节带来的体验升级真是用了就回不去。&lt;/p>
&lt;h3 id="修改正文字体样式">修改「正文字体」样式&lt;/h3>
&lt;p>同样，我们需要改动站点文件&lt;code>./assets/scss/custom.scss&lt;/code>，添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">:root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 字体颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">--card-text-color-main&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#34495e&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们可以获得如下改变：&lt;/p>
&lt;div align="center">&lt;img src="image-20211010202530197-16339419379641.png" alt="image-20211010201217691" style="zoom:50%;" />&lt;/div>
&lt;div align="center">&lt;img src="image-20211010202454989-16339419459263.png" alt="image-20211010201233909" style="zoom:50%;" />&lt;/div>
&lt;h3 id="修改行内代码样式-span-idcode-colorspan">修改「行内代码」样式 &lt;span id="code-color">&lt;/span>&lt;/h3>
&lt;p>同样，我们需要改动站点文件&lt;code>./assets/scss/custom.scss&lt;/code>，添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">:root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 行内代码背景色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">--code-background-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#f8f8f8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 行内代码前景色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">--code-text-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#e96900&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们可以获得如下改变：&lt;/p>
&lt;div align="center">&lt;img src="image-20211010202705348.png" alt="image-20211010201604590" style="zoom:50%;" />&lt;/div>
&lt;div align="center">&lt;img src="image-20211010201618142.png" alt="image-20211010201618142" style="zoom:50%;" />&lt;/div>
&lt;h3 id="修改键盘标签样式">修改「键盘标签」样式&lt;/h3>
&lt;p>我们需要改动站点文件&lt;code>./assets/scss/custom.scss&lt;/code>，添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 键盘标签样式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nt">kbd&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mf">.1&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mf">.1&lt;/span>&lt;span class="kt">em&lt;/span> &lt;span class="mf">.6&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-size&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mf">.8&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#242729&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">border&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="ni">solid&lt;/span> &lt;span class="mh">#adb3b9&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">border-radius&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="nf">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mh">#fff&lt;/span> &lt;span class="ni">inset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">white-space&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">nowrap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">vertical-align&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">middle&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-family&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">monospace&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用如下 Markdown 高级语法可以生成键盘标签样式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">在 Windows 操作系统中，「复制」功能的快捷键是：&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">kbd&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>CTRL&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">kbd&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> + &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">kbd&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>C&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">kbd&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们可以获得如下改变：&lt;/p>
&lt;div align="center">在 Windows 操作系统中，「复制」功能的快捷键是：&lt;kbd>CTRL&lt;/kbd> + &lt;kbd>C&lt;/kbd>&lt;/div>
&lt;h3 id="修改正文链接样式">修改「正文链接」样式&lt;/h3>
&lt;p>我们需要改动站点文件 &lt;code>./assets/scss/style.scss&lt;/code>，注释掉主题对 &lt;code>&amp;lt;a&amp;gt;&lt;/code> 标签的样式设定，然后在文件中添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">text-decoration&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">accent-color&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:hover&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">accent-color-darker&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nc">.link&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#42b983&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-weight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">600&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">text-decoration&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">cursor&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">pointer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:hover&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">text-decoration&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">underline&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们会获得如下改变：&lt;/p>
&lt;div align="center">&lt;img src="image-20211013190157639.png" alt="image-20211013190157639" style="zoom:50%;" />&lt;/div>
&lt;div align="center">&lt;img src="image-20211013190248688.png" alt="image-20211013190248688" style="zoom:50%;" />&lt;/div>
&lt;p>主要改动是正文超链接文本变色（#42b983）且当滑鼠移向文本时标记下划线，这在 &lt;code>dark&lt;/code> 模式下保持同样效果。其他改动主要是符合个人的文档习惯，例如添加 &lt;code>padding&lt;/code> 提供符合中文文档写作规范的视觉效果。&lt;/p>
&lt;p>📌 这是个激进的改动，移除了 Stack 默认样式中关于 box-shadow 阴影下划线以及触发渐变的样式特效。&lt;/p>
&lt;p>当文档中出现多个对比色系的强调色时，文章给人的第一感觉会很「脏」。如下提供一种仍基于 Vue 的视觉平衡方案。当然如果你觉得这样的改动难以接受，可以跳过此步骤，毕竟本篇博客中各个修改方案都是互相独立的，选择合适的就好~&lt;/p>
&lt;p>此处给出的的视觉平衡方案是再次微调「行内代码」样式。我们需要改动站点文件 &lt;code>./assets/scss/custom.scss&lt;/code> 找到 &lt;a class="link" href="#code-color" >修改「行内代码」样式&lt;/a> 中我们添加的代码，然后修补为如下形式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">:root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Vue plan 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// --code-background-color: #f3f4f4;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// --code-text-color: #476582;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Vue plan 2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">--code-background-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#f8f8f8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">--code-text-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#e96900&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>Vue plan 2&lt;/code> 的颜色样式与之前的修改完全相同，你只需要反复注释对比两个 plan ，选择感官上合适的既可。&lt;/p>
&lt;p>微调后我们可以获得如下改变：&lt;/p>
&lt;div align="center">&lt;img src="image-20211013192930517.png" alt="image-20211013192930517" style="zoom:50%;" />&lt;/div>
&lt;div align="center">&lt;img src="image-20211010202705348.png" alt="image-20211010201604590" style="zoom:50%;" />&lt;/div>
&lt;p>emmm，个人感觉看着都挺舒服的Orz。相比默认样式来说更符合我个人的审美，我觉得默认样式的 &lt;code>inline-code&lt;/code> 的背景色纯度过高（反正你怎么开心怎么调，毕竟样式调整本来就是很主观的东西）。&lt;/p>
&lt;h2 id="自定义友链界面">自定义友链界面&lt;/h2>
&lt;p>目前 Stack 主题并不提供友链样式，我们可以自己魔改一个。具体效果看本站 Links 子页既可。显然开疆拓土并不是一件易事，下文既将分享完整的样式代码，但复制粘贴也得小心，记得按开头提醒的那样基于备份文件修改样式，在任何时候都不应该直接对主题子模块进行改动。&lt;/p>
&lt;h3 id="遇见友链">遇见友链&lt;/h3>
&lt;p>第一步需要让「Links」界面出现在 Menu 上，这样所见所得调试起来比较方便。&lt;/p>
&lt;ol>
&lt;li>以你喜欢的方式在你的站点根目录下执行如下代码新建友链子页：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new page/links.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>打开 &lt;code>links.md&lt;/code> 文件，添加/修改前置参数：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: &amp;#34;『 Links 』友情链接&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date: 2021-10-01T16:45:06+08:00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">slug: &amp;#34;links&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">layout: &amp;#34;links&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">license: false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">toc: false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处我们需要明确 &lt;code>toc:false&lt;/code> 隐藏目录。因为本文提供的样式是基于 Markdown + Shortcode 执行的，当我们的 Markdown 正文中出现标题分级时，这份文件会被当成文章跳转，而站点左边栏将被隐去，我们希望 Links 子页能和 Categories 以及 About 一样达到在首页中切换窗格的效果，而非页面的“转换”。&lt;/p>
&lt;ol start="3">
&lt;li>我们需要修改站点配置文件（以 &lt;code>config.yaml&lt;/code> 为例），添加如下内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">menu&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">main&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Links 友链&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">identifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">links&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Links&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/links&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">weight&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="m">75&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pre&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">link&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>需要注意的是，当你的配置文件中已存在 menu-main 时，你仅需要添加组内容，千万不要再将 menu-main 复写。当然，你也可以在 &lt;code>links.md&lt;/code> 的前置参数中声明此配置。&lt;/p>
&lt;p>修改 &lt;code>weight&lt;/code> 权重调整此栏目于 Menu 中的排位；修改 &lt;code>name&lt;/code> 以调整需要显示在网页上的信息；&lt;code>pre&lt;/code> 表示此栏目搭配使用的图标，它默认存放在主题文件夹的 &lt;code>./assets/icons/&lt;/code> 目录下。&lt;/p>
&lt;ol start="4">
&lt;li>此时我们已能在博客首页中点开 &lt;code>Links&lt;/code> 子页面了。&lt;/li>
&lt;/ol>
&lt;h3 id="创建友链">创建友链&lt;/h3>
&lt;blockquote>
&lt;p>本篇博客毕竟是「提高篇」这里就不多介绍 Shortcode 及其样式调度的原理了，感兴趣的朋友们可以自行检索，此处直接上源码！&lt;/p>
&lt;/blockquote>
&lt;p>既然本方案基于 Markdown 和 Shortcode 实现，现在编写友链内容的 Markdown 文件有了，就差 Short code 短码调用了。&lt;/p>
&lt;ol>
&lt;li>站点根目录下新建/修改 &lt;code>./layouts/shortcodes/friend.html&lt;/code>，添加如下内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">{{- $name := .Get &amp;#34;name&amp;#34; | default (.Get 0) -}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{- $url := .Get &amp;#34;url&amp;#34; | default (.Get 1) -}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{- $avatar := .Get &amp;#34;avatar&amp;#34; | default (.Get 2) -}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{- $bio := .Get &amp;#34;bio&amp;#34; | default (.Get 3) -}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{- $url -}}&amp;#34;&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{- $name -}}&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;friend-link&amp;#34;&lt;/span> &lt;span class="na">target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;_blank&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;friend&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;friend-link-div&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;friend-link-avatar&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">{{&lt;/span> &lt;span class="err">.&lt;/span>&lt;span class="na">Get&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="na">avatar&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;friend-avatar&amp;#34;&lt;/span> &lt;span class="na">loading&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lazy&amp;#34;&lt;/span> &lt;span class="na">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Avatar&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;friend-link-info&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">i&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;fa fa-link&amp;#34;&lt;/span> &lt;span class="na">aria-hidden&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">i&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">i&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;friend-name&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ $name }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">i&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;friend-bio&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ $bio }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>参数讲解&lt;/li>
&lt;/ol>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Name&lt;/th>
&lt;th style="text-align:center">Value&lt;/th>
&lt;th style="text-align:center">Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">name&lt;/td>
&lt;td style="text-align:center">必填（Type: String）&lt;/td>
&lt;td style="text-align:center">名称&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">url&lt;/td>
&lt;td style="text-align:center">必填（Type: String）&lt;/td>
&lt;td style="text-align:center">站点链接&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">avatar&lt;/td>
&lt;td style="text-align:center">必填（Type: String）&lt;/td>
&lt;td style="text-align:center">头像链接&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">bio&lt;/td>
&lt;td style="text-align:center">必填（Type: String）&lt;/td>
&lt;td style="text-align:center">简介&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ol start="3">
&lt;li>
&lt;p>应用案例&lt;/p>
&lt;p>在你刚创建的 &lt;code>./content/page/links.md&lt;/code> 正文中输入如下格式内容用以「创建友链」：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- 此处为了正常演示添加反斜杠防止转译。 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">friend&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;BeiYu&amp;#34;&lt;/span> &lt;span class="na">url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://www.bj-yan.top/&amp;#34;&lt;/span> &lt;span class="na">avatar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://cdn.jsdelivr.net/gh/qin2dim/cdn-relay@0.1.0/avatars/44976445.png&amp;#34;&lt;/span> &lt;span class="na">bio&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;北屿小智障！&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">friend&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;BernieLBY&amp;#34;&lt;/span> &lt;span class="na">url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://github.com/BernieLBY&amp;#34;&lt;/span> &lt;span class="na">avatar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://cdn.jsdelivr.net/gh/qin2dim/cdn-relay@0.1.0/avatars/37860855.jpg&amp;#34;&lt;/span> &lt;span class="na">bio&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;刘院士&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们 &lt;u>也许&lt;/u> 可以获得如下效果：&lt;/p>
&lt;a href="https://www.bj-yan.top/" title="BeiYu" class="friend-link" target="_blank" rel="friend">
&lt;div class="friend-link-div">
&lt;div class="friend-link-avatar">
&lt;img src=https://cdn.jsdelivr.net/gh/qin2dim/cdn-relay@0.1.0/avatars/44976445.png class="friend-avatar" loading="lazy" alt="Avatar">
&lt;/div>
&lt;div class="friend-link-info">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;i class="friend-name">BeiYu&lt;/i>
&lt;p class="friend-bio">北屿小智障！&lt;/p>
&lt;/div>
&lt;/div>
&lt;/a>
&lt;a href="https://github.com/BernieLBY" title="BernieLBY" class="friend-link" target="_blank" rel="friend">
&lt;div class="friend-link-div">
&lt;div class="friend-link-avatar">
&lt;img src=https://cdn.jsdelivr.net/gh/qin2dim/cdn-relay@0.1.0/avatars/37860855.jpg class="friend-avatar" loading="lazy" alt="Avatar">
&lt;/div>
&lt;div class="friend-link-info">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;i class="friend-name">BernieLBY&lt;/i>
&lt;p class="friend-bio">刘院士&lt;/p>
&lt;/div>
&lt;/div>
&lt;/a>
&lt;h3 id="修饰友链">修饰友链&lt;/h3>
&lt;ol>
&lt;li>站点根目录下新建/修改 &lt;code>./assets/scss/style.css&lt;/code>，添加如下内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="k">@import&lt;/span> &lt;span class="s2">&amp;#34;partials/layout/links.scss&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>站点根目录下新建/修改 &lt;code>./assets/scss/partials/layout/links.scss&lt;/code>，添加如下内容：&lt;/p>
&lt;details >&lt;summary>展开代码&lt;/summary>
&lt;div class="markdown-inner">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 头像边框颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nv">$avatar-border-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#566a82&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$avatar-border-color-dark&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#C0C0C0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// style-card 背景色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nv">$friend-link-background-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#51a8ca&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$friend-link-background-color-dark&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#696971&lt;/span>&lt;span class="mi">41&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 友链 name 原始色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nv">$friend-link-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#11a1a2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$friend-link-color-dark&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#ffffff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 友链 name 气泡响应对比色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nv">$friend-link-hover-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#ea4e2f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$friend-link-hover-color-dark&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">241&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">213&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">159&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// bio 简介上下文
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nv">$context-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#404040&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$context-color-dark&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#c0c0c0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 友链头像及头像边框的样式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nc">.friend-avatar&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">56&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">56&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-top&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-left&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">border-radius&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">border&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="mf">.6&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="ni">inset&lt;/span> &lt;span class="nv">$avatar-border-color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>&lt;span class="nt">data-scheme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nt">dark&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="k">&amp;amp;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">border&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="mf">.6&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="ni">inset&lt;/span> &lt;span class="nv">$avatar-border-color-dark&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nc">.friend-link-div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 实现卡片双栏排列效果
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-top&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-inline-start&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="mf">.5&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">43&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">inline-block&lt;/span> &lt;span class="k">!important&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 控制上下连续排列的卡片之间的行距
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">margin-bottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 卡片圆角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">border-radius&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 卡片阴影
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">-webkit-box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nf">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">231&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">224&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">224&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.15&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">-moz-box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nf">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.15&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.7&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nf">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.16&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 卡片背景色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nv">$friend-link-background-color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>&lt;span class="nt">data-scheme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nt">dark&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="k">&amp;amp;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nv">$friend-link-background-color-dark&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 卡牌气泡响应动画
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">-webkit-transition&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">transform&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.4&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="ni">ease&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">-moz-transition&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">transform&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.4&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="ni">ease&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">-o-transition&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">transform&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.4&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="ni">ease&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">transition&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">transform&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.15&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="ni">ease&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:hover&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">transform&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="mf">.03&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nc">.friend-link-avatar&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">92&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">float&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">left&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-right&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// name 特效样式， hover 气泡效果,友链 name 变色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nc">.friend-link-info&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-top&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-right&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nv">$friend-link-color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>&lt;span class="nt">data-scheme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nt">dark&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="k">&amp;amp;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nv">$friend-link-color-dark&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:hover&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nv">$friend-link-hover-color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>&lt;span class="nt">data-scheme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nt">dark&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="k">&amp;amp;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nv">$friend-link-hover-color-dark&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// name 文字样式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nc">.friend-name&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">text-overflow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">ellipsis&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">overflow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">white-space&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">nowrap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-style&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">normal&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-family&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Comic Sans MS&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="ni">cursive&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-size&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// bio 文字样式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nc">.friend-bio&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">text-overflow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">ellipsis&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">overflow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">white-space&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">nowrap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-top&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// font: 12px/1 Tahoma,Helvetica,Arial,&amp;#34;\5b8b\4f53&amp;#34;,sans-serif;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="na">font-family&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Helvetica&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s1">&amp;#39;Hiragino Sans GB&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s1">&amp;#39;Microsoft Yahei&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s1">&amp;#39;微软雅黑&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Arial&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="ni">sans-serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-size&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nv">$context-color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>&lt;span class="nt">data-scheme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nt">dark&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="k">&amp;amp;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nv">$context-color-dark&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 响应式页面，允许根据不同的尺寸调整样式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">@media&lt;/span> &lt;span class="ni">screen&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="na">max-width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">720&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.friend-link-div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">92&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin-right&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.friend-bio&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">align-content&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">justify-content&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">left&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.friend-link-avatar&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">84&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">margin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// .friend-link-info {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// height: 100%;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// margin: auto;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// display: flex;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// align-items: center;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// justify-content: left;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">.friend-name&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-size&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-style&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">normal&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">font-family&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Microsoft Yahei&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s1">&amp;#39;微软雅黑&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Arial&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="ni">sans-serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;/li>
&lt;li>
&lt;p>访问本站 Links 友链子页，查看盛况，并根据自己的喜好适当微调样式或模板代码。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="loading">Loading&amp;hellip;&lt;/h2></description></item><item><title>『 Blog 』Resources Transfer</title><link>https://blog.echosec.top/p/resources-transfer/</link><pubDate>Thu, 07 Oct 2021 14:06:41 +0800</pubDate><guid>https://blog.echosec.top/p/resources-transfer/</guid><description>&lt;img src="https://blog.echosec.top/p/resources-transfer/d330174.jpg" alt="Featured image of post 『 Blog 』Resources Transfer" />&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>本文介绍 2 种能够实现的 GitHub 资源传递的解决方案，并简要介绍与此相关的技术模型。&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;blockquote>
&lt;p>「资源代下」是一种可能在中国才会出现的盛况。&lt;/p>
&lt;/blockquote>
&lt;p>不可否认，「&lt;a class="link" href="https://zh.wikipedia.org/zh-hans/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="noopener"
>防火长城&lt;/a>」的诞生确实推动了许多行业的发展，也为许多商业模式的出现奠定了基石，这堵「墙」在这杵着，隔离了“脏数据”，也让万千学子“查文献”的门槛上了一个台阶。&lt;/p>
&lt;p>时至今日，国内高校大都拥有内建或合租的 VPN 网络供本校学子进行学术科研工作，但这些 VPN 往往被当作是针对「学术文献」资源建立的「传输通道」，所能提供的「视野」相较于全局代理要小很多。&lt;/p>
&lt;p>于是，在这种又忙又卷的环境中，出现了这么一群在鼓捣“特种领域”但又没鼓捣清楚自己为啥访问不了某些站点的人。&lt;/p>
&lt;p>诚然，目前没有可靠的数据表明这类群体的规模，但从直觉上看，这是个非常庞大的“市场”。&lt;/p>
&lt;p>打开淘宝，你能发现各种各样需要跨越「防火长城」才能流畅进行的「资源拉取服务」。这里有我们常见的 GitHub 资源下载（或数据集下载）， Google Cloud 资源下载以及各种需要代理才能流畅访问的素材资源的下载。&lt;/p>
&lt;p>&lt;span id="taobao">&lt;/span>&lt;/p>
&lt;div align="center">&lt;img src="photo_2021-10-07_13-29-48.jpg" alt="photo_2021-10-07_13-29-48" style="zoom:67%;" />&lt;/div>
&lt;p>作者点进了显示在综合排列考前的 「GitHub 资源代下」的店铺，翻阅了店铺当前仅有的一条 Q&amp;amp;A。&lt;/p>
&lt;div align="center">&lt;img src="photo_2021-10-07_13-35-54.jpg" alt="photo_2021-10-07_13-35-54" style="zoom:36%;" />&lt;/div>
&lt;p>当我看到「&lt;strong>高速下载连接&lt;/strong>」这个关键词时，我已参透这背后的运营模式，惊呼“这 TM 也能赚钱？”，但当我看到图片中的回复时，我并不惊讶。&lt;/p>
&lt;p>当我们已经习惯于使用 GitHub 并基于 GitHub 的各种产品进行日常工作时，我们当然会对如上现象感到疑惑，但我们还是得解释以下这是个什么情况！&lt;/p>
&lt;p>对于一个拥有 200 M 家庭带宽的用户来说，使用代理后下载各种 GiHub 资源的速度都是非常快的，因为常见的 GiHub 挂载资源包体积都非常小（数据集除外）。但同样的事情对于“墙内”用户来说非常痛苦，眼看着个位数 MiB 体积的资源就是下不完，下载速度可能只有 10 kb/s。&lt;/p>
&lt;p>好了，正所谓「&lt;strong>有需求就有市场&lt;/strong>」，只要卖家的交易行为还在法律的条框之内，我们也不能说什么，毕竟有人着急着要下载，也不缺这一两块的小费，又刚好有人能提供这种服务，双方一拍即合，一个船新的市场就诞生了~&lt;/p>
&lt;p>说到这，可能还有的小伙伴会疑惑：我以为它是把资源自己下载下来后，通过某种方式分享给买家，这个「高速下载连接」是什么？这种薄利多销的“模式”，真的不会亏损吗？如果我也想给身边的“朋友”提供这种服务，有没有比较可靠的解决方案？不着急，下文慢慢说。&lt;/p>
&lt;h2 id="technology-stack">Technology Stack&lt;/h2>
&lt;h3 id="resource-transfer">Resource Transfer&lt;/h3>
&lt;p>本文所讨论的「资源传递」与我们通常理解的「&lt;a class="link" href="https://baike.baidu.com/item/%E6%96%87%E7%8C%AE%E4%BC%A0%E9%80%92/6646200" target="_blank" rel="noopener"
>文献传递&lt;/a>」有所不同。后者通常是指「将用户所需的文献复制品以有效的方式和合理的费用，直接或间接传递给用户的一种非返还式的文献提供服务」；而前者强调的是传递的代理以及资源的转发，传递的资源必须是在网络上共享且开放使用的。&lt;/p>
&lt;p>以下，我们将基于传统文献传递的观点，一步步说明这个被一眼看透的商业模式到底时怎样赚钱的。&lt;/p>
&lt;h3 id="cloudflare-workers-cfw">Cloudflare Workers (CFW)&lt;/h3>
&lt;p>&lt;span id="rt-1">&lt;/span>&lt;/p>
&lt;p>首先需要解答的问题是：「如何给不会翻墙的国内用户提供加速下载 GitHub 资源的服务？」&lt;/p>
&lt;p>目前的最优解是 &lt;a class="link" href="https://workers.cloudflare.com/" target="_blank" rel="noopener"
>&lt;code>Cloudflare Workers (CFW)&lt;/code>&lt;/a> + &lt;code>jsdelivr&lt;/code> + &lt;code>cnpmjs&lt;/code> 实现的无服务 (&lt;a class="link" href="https://www.cloudflare.com/zh-cn/learning/serverless/what-is-serverless/" target="_blank" rel="noopener"
>Severless&lt;/a>) 反向代理 + 内容分发策略。具体内容后面会单独发一篇博客说明，实现起来比较简单（但可能对新手不是很友好，具体可见 &lt;a class="link" href="https://github.com/hunshcn/gh-proxy" target="_blank" rel="noopener"
>gh-proxy&lt;/a> 项目的自述文档）。&lt;/p>
&lt;p>这一步完成后，我们将从 Wokers 获取一个 CDN 链接，这个链接是用来做什么的呢？当然是用来回答问题的~&lt;/p>
&lt;p>作者已部署了一个应用案例，分发链接如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://curly-shape-d178.qinse.workers.dev/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后找到你需要的资源的下载链接，以作者先前编写的 &lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider/releases/tag/v4.5.4" target="_blank" rel="noopener"
>V2Ray云彩姬 v4.5.4&lt;/a> 发行客户端为例，其链接如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://github.com/QIN2DIM/V2RayCloudSpider/releases/download/v4.5.4/v2rss_4.5.4_Windows-64bit.zip&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;figure>&lt;img src="image-20211007151926050.png"
alt="无代理直连下载"/>&lt;figcaption>
&lt;p>无代理直连下载&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>将两者按如下格式合并拼写，访问拼接后的链接，即可实现加速下载。我们清理下载缓存，使用加速下载，看看能有多少提升。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://curly-shape-d178.qinse.workers.dev/https://github.com/QIN2DIM/V2RayCloudSpider/releases/download/v4.5.4/v2rss_4.5.4_Windows-64bit.zip&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;figure>&lt;img src="image-20211007152042536.png"
alt="反向代理加速下载"/>&lt;figcaption>
&lt;p>反向代理加速下载&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>是的，只需将下载链接完整复制到 CDN 链接之后就能实现反向代理（加速下载）。&lt;/p>
&lt;p>值得一提的是，此步骤的精华输出就是这个可用的 CDN 链接，意味着如果你想搭建自己的服务，上文提供的链接你已经可以拿去用了~&lt;/p>
&lt;p>此外，我们需要知道，CFW 提供免费服务「每天 10 万次请求以及每分钟 1000 次请求」仅当需求无法满足时，你才需要升级到 $5 的付费版本，此时你的 API Limit 变为「每月 1000 万次请求」 。从 &lt;a class="link" href="#taobao" >上文截图所示的销量情况&lt;/a> 来看，如果你有幸用上了付费版本，那你早已垄断了这个行业的生意（笑死。&lt;/p>
&lt;p>好了回到话题，经此讨论我们不难得出如下图所示的资源传递技术模型：&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/resources-transfer/tech-stack-resources-transfer-1.svg"
loading="lazy"
>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先，假设 Customer 能够正常浏览 GitHub 站点，并在浏览中产生需求；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>客户带着需求以及下载链接找到 Chatbot，并于 Chatbot 发生首轮交互；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过预先设定的 Inline 引导框架，客户能够提供经过 Review 的资源链接；&lt;/p>
&lt;p>至少要确认客户发来的链接指向 GitHub。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Chatbot 调度已经封装好的 SDK，修饰资源链接并返回给客户；&lt;/p>
&lt;p>若此时用户满意，则订单结束；若订单异常，则需要技术支持（人工客服）介入回滚订单。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户获取「高速下载链接」凭借 CDN 技术平步上青云。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;a class="link" href="#rt-1" >上文所述的实现方案&lt;/a> 仅是作者的反射想法，生产环境要稍微麻烦些。此模型是实现 Background 所述模式的最简单方案。对于作者此类对 Cloudflare Workers 有所了解的玩家，部署一套用于加速 GitHub 资源拉取的反向代理接口，可能只需要几分钟（毕竟有成熟的轮子），编写一套完整的 Inline 引导框架可能需要一至两天的时间。如果你不知道怎么做 Chatbot，你可以“肉身交互”（模板回复）；如果你觉得部署麻烦，你可以在网络上直接获取 CFW 的加速链接，以及共享通用的 Inline 引导框架，甚至是手把手教你开淘宝店的奶妈教程，门槛非常低。&lt;/p>
&lt;h3 id="aliyundrive-hash-mapping">Aliyundrive Hash Mapping&lt;/h3>
&lt;p>如下分享的是一套可实现「内外双循环」的技术模型，此模型可插入到&lt;a class="link" href="#rt-1" >上文所述的实现方案&lt;/a> 的任一环节中。&lt;/p>
&lt;img src="tech-stack-resources-transfer-2.svg" style="zoom:92%;" />
&lt;p>技术支持与客户交流（或 Inline 引导），并询问客户是否拥有 Aliyundrive 账号；&lt;/p>
&lt;ul>
&lt;li>YES，我就问问；&lt;/li>
&lt;li>NO，提出免费下载，引导客户使用你的邀请码注册云盘账号，待获取 Response（网盘资源的分享链接） 后分发给客户。若用户否决提议（财大气粗），则返回 CFW 技术模型收费下载。&lt;/li>
&lt;/ul>
&lt;p>别光顾着问，先给人家下载东西，两三下就下好了。反正下好了就给客户发网盘分享链接，没有账号就得注册，用你的邀请码（明文超链接）跳转会很方便，也算是一种引导暗示。&lt;/p>
&lt;p style="background:#FAEBD7">（占坑不定时更新）&lt;/p>&lt;p>&lt;/p>
&lt;h2 id="business-model">Business model&lt;/h2>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/user">用户 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/customer-support">客户支持 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/bot">博特 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://workers.cloudflare.com/" target="_blank" rel="noopener"
>Cloudflare Workers®&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://baike.baidu.com/item/%e6%96%87%e7%8c%ae%e4%bc%a0%e9%80%92/6646200" target="_blank" rel="noopener"
>文献传递_百度百科 (baidu.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/zh-hans/%e9%98%b2%e7%81%ab%e9%95%bf%e5%9f%8e" target="_blank" rel="noopener"
>防火长城 - 维基百科，自由的百科全书 (wikipedia.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Notes 』Aliyundrive API</title><link>https://blog.echosec.top/p/notes-aliyundrive-api/</link><pubDate>Mon, 04 Oct 2021 15:12:52 +0800</pubDate><guid>https://blog.echosec.top/p/notes-aliyundrive-api/</guid><description>&lt;img src="https://blog.echosec.top/p/notes-aliyundrive-api/3862634.jpg" alt="Featured image of post 『 Notes 』Aliyundrive API" />&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;p>截止至 2021/09/15，Aliyundrive 仍采用 &lt;code>access-token&lt;/code> + &lt;code>auto refresh&lt;/code> 机制实现用户鉴权以及身份信息的超时更新。&lt;/p>
&lt;p>需要通过手动（或额外的自动化操作脚本）的方式「首次」获取 &lt;code>access_token&lt;/code>，&lt;code>refresh_token&lt;/code> 以及 &lt;code>default_drive_id&lt;/code> ，之后可携带「更新码」请求相应的接口实现身份信息的自动更新。&lt;/p>
&lt;h3 id="get-token">Get Token&lt;/h3>
&lt;p>以任何你喜欢的方式登录 &lt;a class="link" href="https://www.aliyundrive.com/sign/in?spm=aliyundrive.index.0.0.2d8360203L8x1O" target="_blank" rel="noopener"
>阿里云盘网页版&lt;/a>，登陆之后开启调试台 &lt;kbd>F12&lt;/kbd>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/notes-aliyundrive-api/image-20211004151603514.png"
width="2056"
height="1256"
srcset="https://blog.echosec.top/p/notes-aliyundrive-api/image-20211004151603514_hu8cdde9c935b14df51ae59762d5a04c2f_256137_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/notes-aliyundrive-api/image-20211004151603514_hu8cdde9c935b14df51ae59762d5a04c2f_256137_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="163"
data-flex-basis="392px"
>&lt;/p>
&lt;p>根据这三个参数，可以对普通用户的挂载资源进行增删改查。&lt;/p>
&lt;h3 id="hello-world">Hello World&lt;/h3>
&lt;p>使用 &lt;a class="link" href="#get_user_info" >&lt;strong>接口：获取用户信息&lt;/strong>&lt;/a> 测试 Token 是否有效。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Change your private information&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">STATIC_ACCESS_TOKEN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">STATIC_REFRESH_TOKEN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">DEFAULT_DRIVE_ID&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_user_info&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">api_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://api.aliyundrive.com/v2/user/get&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;authorization&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">STATIC_ACCESS_TOKEN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">api_url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">get_user_info&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若一切正常，你将成功获取到如下信息（返回信息仅供演示，此处隐去 private value ）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;domain_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;avatar&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;created_at&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;updated_at&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;nick_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;phone&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;role&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;enabled&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;user_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;default_drive_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;user_data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;back_up_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;手机备份&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;folder_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;photo_folder_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sub_folder&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;video_folder_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;share&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;deny_change_password_by_self&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;need_change_password_next_login&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;permission&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，你已成功配置 &lt;code>authorization-header&lt;/code> 并调用 &lt;code>/user/get&lt;/code> 接口实现&lt;strong>用户信息获取&lt;/strong>，而几乎所有的公开 API 都仅需此配置即可调用。&lt;/p>
&lt;h2 id="public-api">Public API&lt;/h2>
&lt;h3 id="user-group">User Group&lt;/h3>
&lt;h4 id="get-user-info">Get User Info&lt;/h4>
&lt;p>&lt;span id="get_user_info">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://api.aliyundrive.com/v2/user/get" target="_blank" rel="noopener"
>https://api.aliyundrive.com/v2/user/get&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>info&lt;/p>
&lt;p>获取账号基础信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>authorization&lt;/em>&lt;/td>
&lt;td>your access_token&lt;/td>
&lt;td>access_token（ 2 小时刷新一次）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>Body&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Response&lt;/p>
&lt;/li>
&lt;li>
&lt;p>example&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="source-group">Source Group&lt;/h3>
&lt;p>与挂载资源相关的接口组。&lt;/p>
&lt;h4 id="get-file-list">Get File List&lt;/h4>
&lt;p>&lt;span id="get_file_list">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://api.aliyundrive.com/v2/file/list" target="_blank" rel="noopener"
>https://api.aliyundrive.com/v2/file/list&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>info&lt;/p>
&lt;p>获取目标挂载区的文件列表标签。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Name&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;em>authorization&lt;/em>&lt;/td>
&lt;td>&lt;em>your access_token&lt;/em>&lt;/td>
&lt;td>access_token（ 2 小时刷新一次）详见刷新 token&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;em>drive_id&lt;/em>&lt;/td>
&lt;td>&lt;em>your drive_id&lt;/em>&lt;/td>
&lt;td>磁盘id值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">parent_file_id&lt;/td>
&lt;td>root&lt;/td>
&lt;td>上级文件夹路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">limit&lt;/td>
&lt;td>10&lt;/td>
&lt;td>每页显示文件数量&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">all&lt;/td>
&lt;td>false&lt;/td>
&lt;td>是否显示全部&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">image_thumbnail_process&lt;/td>
&lt;td>image/resize,w_160/format,jpeg&lt;/td>
&lt;td>图片缩略图类型&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">order_by&lt;/td>
&lt;td>updated_at&lt;/td>
&lt;td>排序字段&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">order_direction&lt;/td>
&lt;td>desc&lt;/td>
&lt;td>升序 asce / 降序 desc&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">fields&lt;/td>
&lt;td>*&lt;/td>
&lt;td>字段通配符&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>Body&lt;/li>
&lt;li>Response&lt;/li>
&lt;li>example&lt;/li>
&lt;/ul>
&lt;h4 id="get-file-details">Get File Details&lt;/h4>
&lt;p>&lt;span id="get_file_details">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://api.aliyundrive.com/v2/file/get" target="_blank" rel="noopener"
>https://api.aliyundrive.com/v2/file/get&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>info&lt;/p>
&lt;p>获取某个文件实体的详细信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>authorization&lt;/em>&lt;/td>
&lt;td>&lt;em>your access_token&lt;/em>&lt;/td>
&lt;td>access_token（ 2 小时刷新一次）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>Body&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;drive_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;your drive_id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;file_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;the file id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Response&lt;/p>
&lt;/li>
&lt;li>
&lt;p>example&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="get-download-url">Get Download Url&lt;/h4>
&lt;p>&lt;span id="get_download_url">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://api.aliyundrive.com/v2/file/get_download_url" target="_blank" rel="noopener"
>https://api.aliyundrive.com/v2/file/get_download_url&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>info&lt;/p>
&lt;p>拉取某个指定的文件实体&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>authorization&lt;/em>&lt;/td>
&lt;td>&lt;em>your access_token&lt;/em>&lt;/td>
&lt;td>access_token（2小时刷新一次）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>Body&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Response&lt;/p>
&lt;/li>
&lt;li>
&lt;p>example&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="advanced-work">Advanced Work&lt;/h2>
&lt;h3 id="内联搜索系统">内联搜索系统&lt;/h3>
&lt;p>在 &lt;code>Telegram bot | Inline Queries&lt;/code> 服务中将阿里云盘作为超大型文件的内联搜索中间件。&lt;/p>
&lt;h3 id="用户组资源映射">用户组资源映射&lt;/h3>
&lt;p>使用 &lt;code>AliyunDrive&lt;/code> 网页版的现有特性，构建文件秒传通道。&lt;/p>
&lt;h2 id="excellent-work">Excellent Work&lt;/h2>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/liupan1890/aliyunpan" target="_blank" rel="noopener"
>liupan1890/aliyunpan: 阿里云盘小白羊版 阿里云盘PC版 (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.lengmou.net/articles/2021/03/31/1617160877140.html" target="_blank" rel="noopener"
>基于阿里云盘的共享云盘搭建 | 冷眸小站 (lengmou.net)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Hugo 』Hugo Deploy</title><link>https://blog.echosec.top/p/hugo-hugo-deploy/</link><pubDate>Thu, 30 Sep 2021 11:16:18 +0800</pubDate><guid>https://blog.echosec.top/p/hugo-hugo-deploy/</guid><description>&lt;img src="https://blog.echosec.top/p/hugo-hugo-deploy/6561379.jpg" alt="Featured image of post 『 Hugo 』Hugo Deploy" />&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>本文介绍一种利用 &lt;a class="link" href="https://docs.github.com/en/actions" target="_blank" rel="noopener"
>GitHub Actions / Workflows&lt;/a> 以及 &lt;a class="link" href="https://docs.github.com/cn/repositories/creating-and-managing-repositories/about-repositories#about-repository-visibility" target="_blank" rel="noopener"
>GitHub Private Repository&lt;/a> 特性实现的 &lt;a class="link" href="https://gohugo.io/hosting-and-deployment/hosting-on-github/" target="_blank" rel="noopener"
>Hugo&lt;/a> 站点安全分发策略。通过创建公有仓库部署 &lt;a class="link" href="https://docs.github.com/cn/pages/getting-started-with-github-pages/about-github-pages#:~:text=GitHub%20%E7%9A%84%E4%BA%A7%E5%93%81%E2%80%9D%E3%80%82-,%E5%85%B3%E4%BA%8E%20GitHub%20Pages,-GitHub%20Pages%20%E6%98%AF" target="_blank" rel="noopener"
>GitHub Pages&lt;/a> ，创建私有仓库存储 &lt;a class="link" href="https://gohugo.io/getting-started/directory-structure/" target="_blank" rel="noopener"
>Hugo 站点源码&lt;/a>，通过私有仓库中的工作流以及 &lt;a class="link" href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh" target="_blank" rel="noopener"
>Deploy Key&lt;/a> 机制桥接两个仓库的数据，达到私有化源码信息的同时部署个人站点的目的。&lt;/p>
&lt;h2 id="相关工作">相关工作&lt;/h2>
&lt;p>目前传统的 &lt;code>Hugo + GitHub Pages&lt;/code> 部署思路主要分为以下 3 种（以 &lt;code>username.github.io&lt;/code> 公有库为例）：&lt;/p>
&lt;p>&lt;span id="plan1">&lt;/span>&lt;/p>
&lt;ol>
&lt;li>&lt;code>Pages Path = main/(root)&lt;/code>，&lt;code>hugo publishDir = &amp;quot;./public&amp;quot;&lt;/code>，以 &lt;code>./public&lt;/code> 文件夹为项目根推送站点。&lt;/li>
&lt;/ol>
&lt;p>&lt;span id="plan2">&lt;/span>&lt;/p>
&lt;ol start="2">
&lt;li>&lt;code>Pages Path = main/docs&lt;/code>，&lt;code>hugo publishDir= &amp;quot;./docs&amp;quot;&lt;/code>，以 Hugo 站点文件夹为项目根推送。&lt;/li>
&lt;/ol>
&lt;p>&lt;span id="plan3">&lt;/span>&lt;/p>
&lt;ol start="3">
&lt;li>&lt;code>Pages Path = gh-pages/(root)&lt;/code>，仍将 Hugo 站点文件夹作为项目根推送至 main 主分支，但通过引入 &lt;a class="link" href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noopener"
>GitHub Pages action&lt;/a> 以及 &lt;a class="link" href="https://github.com/marketplace/actions/hugo-setup" target="_blank" rel="noopener"
>Hugo setup&lt;/a> 工作流，编译你推送的 Hugo 源码并将渲染出来的站点文件（如默认的 &lt;code>./public&lt;/code>）拷贝到（当前仓库）子分支 &lt;code>gh-pages&lt;/code>，实现站点部署。&lt;/li>
&lt;/ol>
&lt;p>因 GitHub Pages 的部署仓库必须为 Public，如上 3 种方案优劣划分明显。&lt;/p>
&lt;p>&lt;strong>&lt;a class="link" href="#plan1" >方案一&lt;/a>&lt;/strong> 是新手入门此技术栈最为常见的路线之一，优势显著——&lt;strong>门槛低，快速部署&lt;/strong>。参照着网络上大部分的 Quick Start 教程都可以成功部署自己的站点。但其劣势也足够明显——&lt;strong>无法有效管控 Hugo 源码&lt;/strong>。&lt;/p>
&lt;p>我们需要知道，Hugo + GitHub Pages 技术栈中，两套代码是相互独立的。Hugo 通过我们编写的「博客内容」以及「主题样式」渲染出站点；而 GitHub Pages 相当于提供了一个实体来托管我们渲染出来的站点。换句话说，除了 GitHub Pages 我们还有不下 10 种 &lt;a class="link" href="https://gohugo.io/hosting-and-deployment/" target="_blank" rel="noopener"
>托管方案&lt;/a>。此处举个不恰当例子，Hugo 相当于是一个写了 &lt;code>print(&amp;quot;Hello World&amp;quot;)&lt;/code> Python 代码的程序，我们可以用 &lt;code>Pycharm&lt;/code> 打印它，也可以用 &lt;code>Spyder&lt;/code> 打印，只是换了个壳，但如果我们「代码」没了，我只能有当前打印出来的东西，我们博客运营至今的工作进度都没法继承并且「丢失」了。&lt;/p>
&lt;p>显然，本地存储文件的损坏或丢失将引发不可预估的灾难。&lt;/p>
&lt;p>&lt;strong>&lt;a class="link" href="#plan2" >方案二&lt;/a>&lt;/strong> 是一种能够有效处理上文所述痛点的解决方案。该方案的关键操作是将整个 Hugo 站点文件托管，指定 GitHub Pages 挂载子目录（既编译输出目录），有效存储了此技术栈的「内脏信息」，但同时它也暴露出了一些无法应对的问题——&lt;strong>我们并不希望自己暂未发表的内容被公开&lt;/strong>。显然这是矛盾的，这与 GitHub 要求挂载博客的仓库必须「可见」有关（Free Plan）。我们暂未完成的工作可能会以 &lt;code>draf: true&lt;/code> 形式标记，防止其被编译渲染进而呈现到公开可见的站点上，但如果我们将整个 Hugo 代码都上传到公有库中， 包括 &lt;code>content/post&lt;/code> 在内的所有文件都是可见的。&lt;/p>
&lt;p>有的人提出将敏感信息加入到 &lt;code>.gitignore&lt;/code> ，待文章编写工作完成后再一次性上传。显然这治标不治本，甚至有些方案一的影子。&lt;/p>
&lt;p>&lt;strong>&lt;a class="link" href="#plan3" >方案三&lt;/a>&lt;/strong> 是在方案二上的提升与拓展。&lt;strong>该方案主要解决提交历史紊乱的问题&lt;/strong>。在此方案中，我们一般会人为 ignore &lt;code>publishDir&lt;/code>，意味着我们提交 Hugo 代码时，不会携带编译输出目录中大量繁杂的变更信息。如此一来，我们每次在本地完成编写工作后，无需运行 Hugo 编译指令，只需正常提交改动（仅变更 Markdown 文章或主题样式信息），而编译、推送、部署的工作由工作流自动完成。&lt;/p>
&lt;p>如上所述，如果你的需求是：&lt;strong>需要一个「不可见仓库」存储源码，同时又不得不依赖「可见仓库」托管博客站点&lt;/strong>，那你也许会对本文介绍的解决方案感兴趣。&lt;/p>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;h3 id="预备知识">预备知识&lt;/h3>
&lt;p>若您阅读了上文所述信息，您应该了解本方案并不是一个 Hello World 操作指南，其具备一定的上手难度，需要您至少掌握如下技术以解决本文暂未提及的偶发性 BUG。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>了解 Git 基本指令（如：remote, pull, add, commit, push, checkout&amp;hellip;）；&lt;/p>
&lt;p>另外，读者需要知道&lt;a class="link" href="https://blog.csdn.net/sjt19910311/article/details/83685616" target="_blank" rel="noopener"
>如何设定全局配置用以绑定个人 GitHub 账号&lt;/a>，否则你需要在每次提交代码时输出账号密码。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>了解 Hugo 基本指令，知道如何用 Hugo 写文章；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>了解 Bash(shell) 基本指令；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>了解怎么添加 Actions;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>已有成功部署 Hugo + GitHub Pages 个人博客站点的经历；&lt;/p>
&lt;p>意味着本文默认读者已有 GitHub 账号且知道如何新建公有/私有仓库。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[Optional] CNAME 以及 GitHub Pages 自定义域名相关知识；&lt;/p>
&lt;p>你需要知道 CNAME 文件需要填什么，CNAME 文件命名与存储位置，以及如何在 Pages 中指定 custom domain。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="创建必要仓库">创建必要仓库&lt;/h3>
&lt;h4 id="创建-github-公有仓库">创建 GitHub 公有仓库&lt;/h4>
&lt;p>若您仅想测试本方案是否可行，大可新建一个 test repo，而无需直接在 username.github.io 上开刀。此处我们新建一个公有仓库 &lt;a class="link" href="https://github.com/QIN2DIM/test-demo-repo" target="_blank" rel="noopener"
>test-demo-repo&lt;/a>。建议在创建仓库时不初始化任何文件，让其保持空置状态。&lt;/p>
&lt;div align="center">&lt;img src="image-20210930183711805.png" alt="image-20210930183711805" style="zoom:50%;" />&lt;/div>
&lt;h4 id="创建-github-私有仓库">创建 GitHub 私有仓库&lt;/h4>
&lt;p>同样，我们创建一个不初始化任何文件的私有仓库 &lt;a class="link" href="https://github.com/QIN2DIM/test-demo-actions" target="_blank" rel="noopener"
>test-demo-actions&lt;/a>。注意，此处为了演示对比，作者将仓库权限设为「可见」。&lt;/p>
&lt;h3 id="配置-deploy_key">配置 DEPLOY_KEY&lt;/h3>
&lt;p>参考 GitHub 官方文档查看如何 &lt;a class="link" href="https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" target="_blank" rel="noopener"
>生成 SSH 密钥&lt;/a>。注意替换 &lt;code>&amp;quot;your_email@example.com&amp;quot;&lt;/code> 即可，生产的密钥默认保存在 &lt;code>~/.ssh/&lt;/code>目录下。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>分配公钥 DEPLOY KEY&lt;/strong>&lt;/p>
&lt;p>以你喜欢的方式打开 &lt;code>id_rsa.pub&lt;/code>（以使用 RSA 算法为例，根据你所选的算法文件名有所不同），复制其内容，打开 &lt;u>公有仓库&lt;/u> ，&lt;em>Settings&lt;/em> &amp;ndash; &lt;em>Deploy Keys&lt;/em> &amp;ndash; &lt;em>Add deploy key&lt;/em>，添加密钥。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930185355860.png"
width="1820"
height="901"
srcset="https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930185355860_hu9345745325c6478d1567ff075a670f79_105721_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930185355860_hu9345745325c6478d1567ff075a670f79_105721_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="分配公钥 DEPLOY KEY"
class="gallery-image"
data-flex-grow="201"
data-flex-basis="484px"
>&lt;/p>
&lt;p>此处你可能会疑惑 &lt;a class="link" href="https://blog.csdn.net/qq_34817440/article/details/102963636" target="_blank" rel="noopener"
>GitHub SSH Key 和 GitHub Deploy Key 的区别&lt;/a> 是什么,可以简要理解为 root 用户和 user 用户的区别,前者配置在你的账号设置里，可以操作你的所有仓库，后者配置在仓库里，只能对此仓库具备操作权限。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>分配私钥 SECRET KEY&lt;/strong>&lt;/p>
&lt;p>以你喜欢的方式打开 &lt;code>id_rsa&lt;/code>，复制其内容，打开 &lt;u>私有仓库&lt;/u> 也即 &lt;u>源码库&lt;/u> ，&lt;em>Settings&lt;/em> &amp;ndash; &lt;em>Secrets&lt;/em> &amp;ndash; &lt;em>New repository secret&lt;/em> 添加仓库密钥（给予工作流中被临时分发的虚拟机操作你的某个仓库的权限）。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930190145809.png"
width="1735"
height="865"
srcset="https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930190145809_hue2b6dc52e6492790407d2348035056eb_46428_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930190145809_hue2b6dc52e6492790407d2348035056eb_46428_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="481px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="生产-hugo-站点源码">生产 Hugo 站点源码&lt;/h3>
&lt;ol>
&lt;li>在一个你喜欢的本机位置打开 Git Bash 并创建 hugo 站点：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new site blog &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>此处我们需要用 git 指令拉取主题代码，并将其作为子模块导入，故需先初始化 git 运行环境：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>此处使用 &lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Stack 主题&lt;/a> 构建演示站点：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>拷贝 &lt;em>Stack example site&lt;/em> 演示站点特性：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp -a themes/hugo-theme-stack/exampleSite/. .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>删除默认站点配置文件（防止冲突）：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rm config.toml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="6">
&lt;li>启动 Hugo 本地服务，查看站点是否正常运行：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="7">
&lt;li>访问 Hugo 本地服务器（默认1313端口）如果一切安好，你可以看到如下画面：&lt;span id="local-server">&lt;/span>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930192053948.png"
width="1878"
height="1427"
srcset="https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930192053948_hu19a63ef842d61ec7f52684ab8820a5c1_616902_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930192053948_hu19a63ef842d61ec7f52684ab8820a5c1_616902_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="demo-site"
class="gallery-image"
data-flex-grow="131"
data-flex-basis="315px"
>&lt;/p>
&lt;ol start="8">
&lt;li>Press &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>C&lt;/kbd> to stop hugo server 我们要开始后续步骤了~&lt;/li>
&lt;/ol>
&lt;h3 id="连接-hugo-与-私有仓库">连接 Hugo 与 私有仓库&lt;/h3>
&lt;ol>
&lt;li>将 &lt;u>源码库&lt;/u> （私有库）作为远程仓库链接（请替换为你自己的 URL）：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git remote add origin https://github.com/QIN2DIM/test-demo-actions.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>我们的仓库处于空置状态，需要先进行一些预处理：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git branch -M main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>
&lt;p>添加变动并强制推送：&lt;/p>
&lt;p>这也解释了上文为什么不推荐在创建仓库时添加初始化文件，如果你那样做了，此处需要多一步历史对齐的操作。链接远程仓库后需要先把远程仓库中的初始化文件拉到本地，否则强制推送会出现一些遗留问题。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add --all &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git commit -m &lt;span class="s2">&amp;#34;migrate&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git push -f origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>
&lt;p>查看仓库盛况&lt;/p>
&lt;p>如果一切安好，你会在你的私有源码库中看到如下目录结构的信息，如果你足够了解 Git 默认的文件比对机制，应该知道并未被上传的资源是「空文件」。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930194231428.png"
width="1826"
height="1080"
srcset="https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930194231428_hu4a210234f1aa8b4e9eec788678321114_132586_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hugo-hugo-deploy/image-20210930194231428_hu4a210234f1aa8b4e9eec788678321114_132586_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Init private repository"
class="gallery-image"
data-flex-grow="169"
data-flex-basis="405px"
>&lt;/p>
&lt;p>此时，诸如此目录结构的「Hugo 源码」已能渲染出成型的博客站点，就如同你在&lt;a class="link" href="#local-server" >本地启动服务&lt;/a>那样。而我们需要思考的是，这个私有仓库并不能挂载博客，我们需要将渲染出来的站点代码放到可见的公有仓库下面（如 username.github.io），这个工作交由 &lt;code>workflows&lt;/code> 进行。&lt;/p>
&lt;h3 id="创建工作流">创建工作流&lt;/h3>
&lt;p>就算您不了解 &lt;code>GitHub Actions / Workflows&lt;/code>也无大碍，我会在后文详细注释「workflows 代码」中关键步骤的具体含义，让你足够了解自己在做什么。你也可以阅览作者临时总结的关于 &lt;a class="link" href="#workflows" >workflows 的运行逻辑&lt;/a>，来了解它是如何工作的。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>打开 &lt;u>私有源码库&lt;/u> ，创建工作流&lt;img src="image-20210930195206733.png" alt="Set up a workflow yourself" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将以下代码覆盖 &lt;code>Edit new file&lt;/code> 窗格中的内容，并按照提示&lt;strong>修改&lt;code>env&lt;/code>环境变量&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 工作流的名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo-deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 触发事件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 当主分支 main 文件变更时触发任务&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">main]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># jobs 此工作流执行的任务&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 在 Workflows 中,各个 job 是并行执行的，此处仅有 1 个 job&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># job-id 在一个工作流中唯一区分，此 job-id 为 build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 此 job 运行的虚拟系统&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 此 job 的任务执行步骤，默认顺序执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># step1: 检查运行环境是否正常&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 若您的代码中携带子模块，请务必书写如下内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># step2: 开始执行核心逻辑&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># name 是步骤的名称，相当于步骤的简明注释，但可有可无&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Building...&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># uses FORMAT: 用户/仓库@版本信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - uses 是 workflows 的精髓，其作用可概述为：预加载并运行指定资源&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 它可以指向 workflows-image，甚至可以具体到某个仓库中的一个可执行文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - 此处使用 reuixiy/hugo-deploy@v1 桥接两个仓库&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">reuixiy/hugo-deploy@v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># env 环境变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - job 中的每一个 step 都是独立的进程，其内创建的变量互不共享&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - 通过 env 创建的环境变量（键值对）可以被 step 读取并使用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - 此处需要设定4个环境变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># DEPLOY_REPO 部署 GitHub Pages 的可见代码库(如 username/username.github.io)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">DEPLOY_REPO&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">username/test-demo-repo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># DEPLOY_BRANCH 部署 GitHub Pages 的可见代码库的分支&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - 若上一步选择的是 username.github.io，请不要在不熟悉本解决方案的情况下填写 main,master 等主分支名词；&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - 工作流会自动创建原先不存在的分支&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">DEPLOY_BRANCH&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># DEPLOY_KEY 操作权限（非对称）密钥&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - 源码仓库中的工作流读取私钥，获取 GitHub Pages 所在仓库的（读写）权限&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - workflows 读取的是 Secrets Key，只是此处的变量名叫 DEPLOY_KEY&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">DEPLOY_KEY&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.DEPLOY_KEY }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># TZ 时区信息，主要为了 git commit -m &amp;#34;xxx&amp;#34; 提供备注信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">TZ&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Asia/Shanghai&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div align="center">&lt;img src="image-20210930203417304.png" alt="Commit workflows yourself" style="zoom: 50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>为了防止冲突以及提高容错，我们选择先将远程仓库的代码改动（add main.yml）同步到本地：&lt;/p>
&lt;p>顺便等一下 workflows 运行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git pull origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看仓库盛况&lt;/p>
&lt;p>当你看到 workflows 运行完成的标志后，访问你部署 GitHub Pages 的仓库页面，如果一切安好，你讲看到如下内容：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20210930204344604.png" alt="image-20210930204344604" style="zoom: 50%;" />&lt;/div>
&lt;ol start="5">
&lt;li>
&lt;p>分析盛况&lt;/p>
&lt;p>若你严格按照本方案提供的步骤操作， workflows 配置文件的提交也算是一次触发动机，Actions 会自动进行首次工作。若您的顺序有点颠倒，比如先加了工作流，才想起来自己没有配置密钥，那么你仅需要做任何改动再次向主分支提交代码触发 actions 的工作流即可，比如修改一下 workflows 配置文件的注释之类的。&lt;/p>
&lt;p>你可以看到，在你的公有库（指定分支）下的内容就是你 「Hugo 源码」编译输出的内容。以此公有库分支（如 build 或你指定的分支）为根（/root）即可生成 Pages。&lt;/p>
&lt;p>是的你没听错，我们进行到这个步骤都还没配置 GitHub Pages，就如同上文所说，Hugo 是「内脏」，而 GitHub Pages 仅是「壳」。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="验收">验收&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>打开公有库配置 GitHub Pages。&lt;/p>
&lt;p>&lt;em>Settings&lt;/em> &amp;ndash; &lt;em>Pages&lt;/em> ，指定 &lt;em>Source&lt;/em>，Branch 就是你指定的分支，路径选择 &lt;code>/(root)&lt;/code>，完事 Save。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20210930205246497.png" style="zoom:33%;" />&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>Page Build&lt;/p>
&lt;p>等待 GitHub Pages 部署完成，访问部署站点。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20210930205605076.png" style="zoom: 50%;" />&lt;/div>
&lt;ol start="3">
&lt;li>
&lt;p>Hello Man&lt;/p>
&lt;p>部分同学到这一步会遇到如下图所示的问题（相对路径索引异常），不要慌。&lt;/p>
&lt;p>1）你需要确保 Hugo Config 中的 baseUrl 是否填写正确。如公有仓库名为 &lt;code>superman/blog&lt;/code>，则 &lt;code>baseUrl: https://supermain.github.io/blog&lt;/code>，若仓库名为 &lt;code>superman/superman.github.io&lt;/code>，则 &lt;code>baseUrl: https://supermain.github.io&lt;/code>。若您的仓库名包含英文大小写，请确保 &lt;code>baseUrl&lt;/code> 中统一小写的写法，这与 Linux 文件系统命名有关。&lt;/p>
&lt;p>2）如果你正在 test 仓库上进行本方案的实验任务，且其他仓库已经部署了（自定义）根域名站点，那你需要在测试站点上也配置 CNAME（具体如何配置需要您自行掌握，这不在本篇博客的介绍范围之内），同时需要检查上一步的提议。这并不是什么难事，作者几乎每一个有价值的 GitHub Project 都会使用 Hugo + Github Pages 的技术栈部署技术文档，而这些站点都使用同一个自定义域名，而作者的 &lt;a class="link" href="QIN2DIM/QIN2DIM.github.io" >QIN2DIM/QIN2DIM.github.io&lt;/a> 仓库则部署了 Blog Pages。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20210930210421107.png" style="zoom: 33%;" />&lt;/div>
&lt;ol start="4">
&lt;li>
&lt;p>Hello World&lt;/p>
&lt;p>本站目前采用的就是这种部署方案。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="关联问题">关联问题&lt;/h2>
&lt;h3 id="workflows-how-does-it-work">Workflows: How does it work?&lt;/h3>
&lt;p>&lt;span id="workflows">&lt;/span>&lt;/p>
&lt;h3 id="uses-reuixiyhugo-deployv1">Uses: reuixiy/hugo-deploy@v1&lt;/h3>
&lt;p>&lt;span id="reuixiy/hugo-deploy@v1">&lt;/span>&lt;/p>
&lt;p>我们在 workflows 配置文件的任务步骤中拉取并执行了 &lt;a class="link" href="https://github.com/reuixiy/hugo-deploy/blob/master/entrypoint.sh" target="_blank" rel="noopener"
>reuixiy/hugo-deploy@v1&lt;/a> 指向的代码。这个脚本文件主要做了 3 件事：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>读取我们配置的 env 环境变量&lt;/p>
&lt;ul>
&lt;li>定位我们挂载 GitHub Pages 站点的仓库地址；&lt;/li>
&lt;li>配置 GitHub SSH 用户名以及邮箱（用于鉴权）；&lt;/li>
&lt;li>拉取 DEPLOY_KEY 并赋予操作权限；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>将我们的源码库克隆到虚拟容器中，执行 Hugo 编译指令生产静态站点&lt;/p>
&lt;p>划重点，如果你的 Hugo 站点配置文件中没有指定 &lt;code>publishDir&lt;/code> 参数，那么编译输出默认是&lt;code>./public&lt;/code>。换句话说，如果你之前手动指定了 &lt;code>publishDir&lt;/code> 为其他文件，那你需要注释掉这个参数，否则工作流的运行会出现异常。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>进入编译输出文件夹（./public），并在此文件路径下执行代码提交指令&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>此外，我们并不需要在 workflows 配置文件中编写 Hugo setup 等配置 Hugo 编译环境的步骤，因为我们引用的 &lt;a class="link" href="https://github.com/reuixiy/hugo-deploy/blob/master/entrypoint.sh" target="_blank" rel="noopener"
>reuixiy/hugo-deploy@v1&lt;/a> 已经写了一个拉取最新拓展版 Hugo 的 Dockerfile。&lt;/p>
&lt;p>脚本源码如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Required environment variables:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DEPLOY_KEY SSH private key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DEPLOY_REPO GitHub Pages repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DEPLOY_BRANCH GitHub Pages publishing branch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># GITHUB_ACTOR GitHub username&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># GITHUB_REPOSITORY GitHub repository (source code)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TZ Timezone&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">REMOTE_REPO&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;git@github.com:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DEPLOY_REPO&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.git&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">REMOTE_BRANCH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DEPLOY_BRANCH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global user.name &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">GITHUB_ACTOR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global user.email &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">GITHUB_ACTOR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">@users.noreply.github.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># https://github.com/reuixiy/hugo-theme-meme/issues/27&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global core.quotePath &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/share/zoneinfo/&lt;span class="si">${&lt;/span>&lt;span class="nv">TZ&lt;/span>&lt;span class="si">}&lt;/span> /etc/localtime
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir /root/.ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh-keyscan -t rsa github.com &amp;gt; /root/.ssh/known_hosts &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DEPLOY_KEY&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt; /root/.ssh/id_rsa &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>chmod &lt;span class="m">400&lt;/span> /root/.ssh/id_rsa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone --recurse-submodules &lt;span class="s2">&amp;#34;git@github.com:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">GITHUB_REPOSITORY&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.git&amp;#34;&lt;/span> site &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="nb">cd&lt;/span> site
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo --gc --minify --cleanDestinationDir
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">pushd&lt;/span> public &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git init &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git remote add origin &lt;span class="nv">$REMOTE_REPO&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git add -A &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git checkout -b &lt;span class="nv">$REMOTE_BRANCH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git commit -m &lt;span class="s2">&amp;#34;Automated deployment @ &lt;/span>&lt;span class="k">$(&lt;/span>date &lt;span class="s1">&amp;#39;+%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TZ&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git push -f origin &lt;span class="nv">$REMOTE_BRANCH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">popd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf /root/.ssh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>下图所示为本文介绍方案的总流程图。核心环节是创建在 「私有仓库」 中的 &lt;em>Workflows hugo-deploy&lt;/em>：&lt;/p>
&lt;ol>
&lt;li>工作流将你的 Hugo 私有代码克隆进虚拟容器中；&lt;/li>
&lt;li>执行 Hugo 编译指令生成静态站点；&lt;/li>
&lt;li>通过 &lt;em>Secreat Key&lt;/em> / &lt;em>Deploy Key&lt;/em> 权限密钥获取 GitHub Pages 公有仓库的读写权限；&lt;/li>
&lt;li>将编译输出文件 &lt;em>./publishDir&lt;/em> 推送至公有仓库。&lt;/li>
&lt;/ol>
&lt;p>最后部署了 GitHub Pages 的公有仓库拥有自己的网页渲染工作流，执行完毕后将自动更新你的博客站点。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hugo-hugo-deploy/Hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%AE%89%E5%85%A8%E5%88%86%E5%8F%91%E6%9E%B6%E6%9E%84.svg"
loading="lazy"
alt="Hugo 个人博客安全分发架构"
>&lt;/p>
&lt;p>下表为本文涉及四种方案在部署速度，隐私性、上手难度等维度的横向比较：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">属性/方案&lt;/th>
&lt;th style="text-align:center">&lt;a class="link" href="#plan1" >方案一&lt;/a>&lt;/th>
&lt;th style="text-align:center">&lt;a class="link" href="#plan2" >方案二&lt;/a>&lt;/th>
&lt;th style="text-align:center">&lt;a class="link" href="#plan3" >方案三&lt;/a>&lt;/th>
&lt;th style="text-align:center">安全分发&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">部署速度&lt;/td>
&lt;td style="text-align:center">☀️☀️☀️&lt;/td>
&lt;td style="text-align:center">☀️☀️&lt;/td>
&lt;td style="text-align:center">☀️☀️&lt;/td>
&lt;td style="text-align:center">☀️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">隐私性&lt;/td>
&lt;td style="text-align:center">☀️☀️☀️&lt;/td>
&lt;td style="text-align:center">☀️&lt;/td>
&lt;td style="text-align:center">☀️&lt;/td>
&lt;td style="text-align:center">☀️☀️☀️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">持久运营&lt;/td>
&lt;td style="text-align:center">☀️&lt;/td>
&lt;td style="text-align:center">☀️☀️☀️&lt;/td>
&lt;td style="text-align:center">☀️☀️☀️&lt;/td>
&lt;td style="text-align:center">☀️☀️☀️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">上手难度&lt;/td>
&lt;td style="text-align:center">☀️&lt;/td>
&lt;td style="text-align:center">☀️&lt;/td>
&lt;td style="text-align:center">☀️☀️&lt;/td>
&lt;td style="text-align:center">☀️☀️&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>不难看出，本文所介绍的“安全分发”方案优势在于利用 &lt;em>GitHub Private Repository&lt;/em> 不可见特性在提高了隐私性的同时解决了方案一无法持久运营的问题，但其所依赖的 &lt;em>Workflows&lt;/em> 相关技术栈提升了方案整体的上手难度。&lt;/p>
&lt;p>此外，本文介绍的方案使用了&lt;a class="link" href="https://github.com/reuixiy/hugo-deploy/blob/master/entrypoint.sh" target="_blank" rel="noopener"
>reuixiy/hugo-deploy@v1&lt;/a> 提供的 Hugo 站点“分发”脚本，其流程上使用 &lt;em>DockerFile&lt;/em> 进行 Hugo 编译环境的创建，而非使用 &lt;em>GitHub Actions&lt;/em> 提供的预加载环境，这极大拖累了“整机性能”，导致“安全分发”的部署速度在此次横评中垫底。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hugo-hugo-deploy/image-20211001062008560.png"
width="1450"
height="558"
srcset="https://blog.echosec.top/p/hugo-hugo-deploy/image-20211001062008560_hu7998d4d07d85a6e8eaeafa4a460d7cc8_78490_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hugo-hugo-deploy/image-20211001062008560_hu7998d4d07d85a6e8eaeafa4a460d7cc8_78490_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Workflows hugo-deploy details"
class="gallery-image"
data-flex-grow="259"
data-flex-basis="623px"
>&lt;/p>
&lt;p>不可否认的是，你完全可以选择使用诸如 &lt;a class="link" href="#plan1" >方案一&lt;/a> + &lt;a class="link" href="https://www.jianguoyun.com/" target="_blank" rel="noopener"
>坚果云&lt;/a> 双路复用的解决方案，既保证了部署速度和隐私性，又具备代码实时上云的持久运营能力；也可以使用 GitHub bot 来替代“安全分发”中的某些环节；也可以魔改“安全分发”的工作流来拔升部署速度；甚至你可以使用多级 NAS 存储你的项目源码。毕竟折腾技术总是有趣上头，根据你的具体需求和环境选择适合你的方案即可！&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://dev.to/aormsby/how-to-set-up-a-hugo-site-on-github-pages-with-git-submodules-106p" target="_blank" rel="noopener"
>How to Set Up a Hugo Site on Github Pages - with Git Submodules! - DEV Community&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io/hosting-and-deployment/" target="_blank" rel="noopener"
>Hosting &amp;amp; Deployment | Hugo (gohugo.io)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/reuixiy/hugo-deploy/blob/master/entrypoint.sh" target="_blank" rel="noopener"
>hugo-deploy/entrypoint.sh at master · reuixiy/hugo-deploy (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.github.com/cn/actions" target="_blank" rel="noopener"
>GitHub Actions文档 - GitHub Docs&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Blog 』需要留意的法律问题</title><link>https://blog.echosec.top/p/blogs-live-legal-issues/</link><pubDate>Fri, 24 Sep 2021 10:28:41 +0800</pubDate><guid>https://blog.echosec.top/p/blogs-live-legal-issues/</guid><description>&lt;img src="https://blog.echosec.top/p/blogs-live-legal-issues/3360802.jpg" alt="Featured image of post 『 Blog 』需要留意的法律问题" />&lt;p>本文章“常见问题”的搜集源自 &lt;a class="link" href="https://www.66law.cn/laws/" target="_blank" rel="noopener"
>华律网&lt;/a> ，&lt;a class="link" href="https://www.pkulaw.cn/" target="_blank" rel="noopener"
>北大法宝&lt;/a> 以及相关生活经验。&lt;/p>
&lt;h2 id="导航">导航&lt;/h2>
&lt;p>&lt;strong>常见问题 [LICENSE]&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e7%9f%a5%e8%af%86%e5%85%b1%e4%ba%ab%e8%ae%b8%e5%8f%af%e5%8d%8f%e8%ae%ae" >知识共享许可协议(&lt;strong>C&lt;/strong>reative &lt;strong>C&lt;/strong>ommons license)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#MIT%e8%ae%b8%e5%8f%af%e5%8d%8f%e8%ae%ae" >MIT 许可协议(The MIT License)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#Apache%e8%ae%b8%e5%8f%af%e5%8d%8f%e8%ae%ae" >Apache 许可协议&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="BSD%e8%ae%b8%e5%8f%af%e8%af%81" >BSD 许可证&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#GNU%e9%80%9a%e7%94%a8%e5%85%ac%e5%85%b1%e8%ae%b8%e5%8f%af%e8%af%81" >GNU 通用公共许可证&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>常见问题 [知识产权]&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e8%bd%ac%e8%bd%bd%ef%bc%8c%e5%bc%95%e7%94%a8%ef%bc%8c%e6%8a%84%e8%a2%ad%ef%bc%8c%e5%8e%9f%e5%88%9b%e7%9a%84%e5%8c%ba%e5%88%ab" >转载，引用，抄袭，原创的区别&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e7%94%a8%e5%88%ab%e4%ba%ba%e7%9a%84%e4%bd%9c%e5%93%81%e5%bd%93%e5%a4%b4%e5%83%8f%e4%be%b5%e6%9d%83%e5%90%97?" >用别人的作品当头像侵权吗?&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%a6%82%e2%80%9c%e6%b6%89%e5%8f%8a%e4%be%b5%e6%9d%83%ef%bc%8c%e8%af%b7%e8%81%94%e7%b3%bb%e5%88%a0%e9%99%a4%e2%80%9d%e7%ad%89%e5%85%8d%e8%b4%a3%e5%a3%b0%e6%98%8e%e6%98%af%e5%90%a6%e6%9c%89%e6%95%88%ef%bc%9f" >如“涉及侵权，请联系删除”等免责声明是否有效？&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>常见问题 [劳动纠纷]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>常见问题 [合同纠纷]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>法条索引&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e4%b8%ad%e5%8d%8e%e4%ba%ba%e6%b0%91%e5%85%b1%e5%92%8c%e5%9b%bd%e8%91%97%e4%bd%9c%e6%9d%83%e6%b3%95" >中华人民共和国著作权法&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="常见问题-lincense">常见问题 [LINCENSE]&lt;/h2>
&lt;h3 id="知识共享许可协议">知识共享许可协议&lt;/h3>
&lt;p>&lt;span id="知识共享许可协议">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e7%9f%a5%e8%af%86%e5%85%b1%e4%ba%ab%e8%ae%b8%e5%8f%af%e5%8d%8f%e8%ae%ae" target="_blank" rel="noopener"
>知识共享许可协议 - 维基百科，自由的百科全书 (wikipedia.org)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;table class="wikitable">
&lt;tbody>&lt;tr>
&lt;th>&lt;big>标志&lt;/big>&lt;/th>
&lt;th>&lt;big>权利&lt;/big>&lt;/th>
&lt;th>&lt;big>备注&lt;/big>
&lt;/th>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image" title="Attribution">&lt;img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Cc-by_new.svg/75px-Cc-by_new.svg.png" decoding="async" width="75" height="75" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Cc-by_new.svg/113px-Cc-by_new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Cc-by_new.svg/150px-Cc-by_new.svg.png 2x" data-file-width="80" data-file-height="80">&lt;/a>
&lt;/td>
&lt;td>&lt;b>署名&lt;/b>（英语：&lt;span lang="en">Attribution&lt;/span>，&lt;b>by&lt;/b>）
&lt;/td>
&lt;td>您（用户）可以复制、发行、展览、表演、放映、广播或通过信息网络传播本作品；您必须按照作者或者许可人指定的方式对作品进行署名。
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image" title="Share-alike">&lt;img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/2/29/Cc-sa.svg/75px-Cc-sa.svg.png" decoding="async" width="75" height="75" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/2/29/Cc-sa.svg/113px-Cc-sa.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/2/29/Cc-sa.svg/150px-Cc-sa.svg.png 2x" data-file-width="64" data-file-height="64">&lt;/a>
&lt;/td>
&lt;td>&lt;b>&lt;a href="https://blog.echosec.top/wiki/%E7%9B%B8%E5%90%8C%E6%96%B9%E5%BC%8F%E5%85%B1%E4%BA%AB" title="相同方式共享">相同方式共享&lt;/a>&lt;/b>（英语：&lt;span lang="en">&lt;b>S&lt;/b>hare&lt;b>A&lt;/b>like&lt;/span>，&lt;b>sa&lt;/b>）
&lt;/td>
&lt;td>您可以自由复制、散布、展示及演出本作品；若您改变、转变或更改本作品，仅在遵守与本作品相同的许可条款下，您才能散布由本作品产生的派生作品。（参见&lt;a href="https://blog.echosec.top/wiki/Copyleft" title="Copyleft">copyleft&lt;/a>）。
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image" title="Non-commercial">&lt;img alt="" src="75px-Cc-nc.svg-163253623170044.png" decoding="async" width="75" height="75" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/db/Cc-nc.svg/113px-Cc-nc.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/db/Cc-nc.svg/150px-Cc-nc.svg.png 2x" data-file-width="64" data-file-height="64">&lt;/a>
&lt;/td>
&lt;td>&lt;b>非商业性使用&lt;/b>（英语：&lt;span lang="en">&lt;b>N&lt;/b>on&lt;b>c&lt;/b>ommercial&lt;/span>,&lt;b>nc&lt;/b> ）
&lt;/td>
&lt;td>您可以自由复制、散布、展示及演出本作品；您不得为&lt;a href="https://blog.echosec.top/wiki/%E5%95%86%E4%B8%9A" title="商业">商业&lt;/a>目的而使用本作品。
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image" title="Non-derivative">&lt;img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Cc-nd.svg/75px-Cc-nd.svg.png" decoding="async" width="75" height="75" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Cc-nd.svg/113px-Cc-nd.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Cc-nd.svg/150px-Cc-nd.svg.png 2x" data-file-width="64" data-file-height="64">&lt;/a>
&lt;/td>
&lt;td>&lt;b>禁止演绎&lt;/b>（英语：&lt;span lang="en">&lt;b>N&lt;/b>o &lt;b>D&lt;/b>erivative Works&lt;/span>，&lt;b>nd&lt;/b>)
&lt;/td>
&lt;td>您可以自由复制、散布、展示及演出本作品；您不得改变、转变或更改本作品。
&lt;/td>&lt;/tr>&lt;/tbody>&lt;/table>
&lt;table class="wikitable sortable jquery-tablesorter">
&lt;thead>&lt;tr>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">&lt;b>&lt;big>图标&lt;/big>&lt;/b>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">&lt;b>&lt;big>说明&lt;/big>&lt;/b>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">缩写
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">&lt;b>署名要求&lt;/b>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">混合作品
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">允许&lt;b>商业性使用&lt;/b>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">允许&lt;a title="自由文化作品定义">自由文化作品&lt;/a>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">符合&lt;a title="开源定义">OKI&lt;/a>的“开放定义”
&lt;/th>&lt;/tr>&lt;/thead>&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC0 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/6/69/CC0_button.svg/100px-CC0_button.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/6/69/CC0_button.svg/150px-CC0_button.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/6/69/CC0_button.svg/200px-CC0_button.svg.png 2x" data-file-width="88" data-file-height="31">&lt;/a>
&lt;/td>
&lt;td>不受限制地在全球范围内发布内容
&lt;/td>
&lt;td>CC0&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">否&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/100px-CC-BY_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/150px-CC-BY_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/200px-CC-BY_icon.svg.png 2x" data-file-width="88" data-file-height="31">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）
&lt;/td>
&lt;td>BY&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY-SA 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/d0/CC-BY-SA_icon.svg/100px-CC-BY-SA_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/d0/CC-BY-SA_icon.svg/150px-CC-BY-SA_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/d0/CC-BY-SA_icon.svg/200px-CC-BY-SA_icon.svg.png 2x" data-file-width="88" data-file-height="31">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-相同方式共享（&lt;b>SA&lt;/b>）
&lt;/td>
&lt;td>BY-SA&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-by-NC 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/9/99/Cc-by-nc_icon.svg/100px-Cc-by-nc_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/99/Cc-by-nc_icon.svg/150px-Cc-by-nc_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/99/Cc-by-nc_icon.svg/200px-Cc-by-nc_icon.svg.png 2x" data-file-width="120" data-file-height="42">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-非商业性使用（&lt;b>NC&lt;/b>）
&lt;/td>
&lt;td>BY-NC&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY-NC-SA 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/1/12/Cc-by-nc-sa_icon.svg/100px-Cc-by-nc-sa_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/12/Cc-by-nc-sa_icon.svg/150px-Cc-by-nc-sa_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/12/Cc-by-nc-sa_icon.svg/200px-Cc-by-nc-sa_icon.svg.png 2x" data-file-width="120" data-file-height="42">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-非商业性使用（&lt;b>NC&lt;/b>）-相同方式共享（&lt;b>SA&lt;/b>）
&lt;/td>
&lt;td>BY-NC-SA&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY-ND 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/1/16/Cc-by-nd_icon.svg/100px-Cc-by-nd_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/16/Cc-by-nd_icon.svg/150px-Cc-by-nd_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/16/Cc-by-nd_icon.svg/200px-Cc-by-nd_icon.svg.png 2x" data-file-width="120" data-file-height="42">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-禁止演绎（&lt;b>ND&lt;/b>）
&lt;/td>
&lt;td>BY-ND&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY-NC-ND 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Cc-by-nc-nd_icon.svg/100px-Cc-by-nc-nd_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Cc-by-nc-nd_icon.svg/150px-Cc-by-nc-nd_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Cc-by-nc-nd_icon.svg/200px-Cc-by-nc-nd_icon.svg.png 2x" data-file-width="120" data-file-height="42">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-非商业性使用（&lt;b>NC&lt;/b>）-禁止演绎（&lt;b>ND&lt;/b>）
&lt;/td>
&lt;td>BY-NC-ND&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否
&lt;/td>&lt;/tr>&lt;/tbody>&lt;tfoot>&lt;/tfoot>&lt;/table>
&lt;p>例如本站所使用的 &lt;a class="link" href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh" target="_blank" rel="noopener"
>&lt;code>CC BY-NC-SA 4.0&lt;/code>&lt;/a> 许可，署名-非商用-相同方式共享 4.0。&lt;/p>
&lt;h3 id="mit-许可协议">MIT 许可协议&lt;/h3>
&lt;p>&lt;span id="MIT许可协议">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/wiki/MIT%e8%a8%b1%e5%8f%af%e8%ad%89" target="_blank" rel="noopener"
>MIT许可证 - 维基百科，自由的百科全书 (wikipedia.org)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>更大的权利与更少的限制&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>被许可人权利&lt;/strong>&lt;/p>
&lt;p>被许可人有权利使用、复制、修改、合并、出版发行、散布、再许可和/或贩售软件及软件的副本，及授予被供应人同等权利，惟服从以下义务（义务并非强制）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>被许可人义务&lt;/strong>&lt;/p>
&lt;p>在软件和软件的所有副本中都必须包含以上著作权声明和本许可声明。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="apache-许可协议">Apache 许可协议&lt;/h3>
&lt;h3 id="bsd-许可证">BSD 许可证&lt;/h3>
&lt;h3 id="gnu-通用公共许可证">GNU 通用公共许可证&lt;/h3>
&lt;h2 id="常见问题-知识产权">常见问题 [知识产权]&lt;/h2>
&lt;h3 id="转载引用抄袭原创的区别">转载，引用，抄袭，原创的区别&lt;/h3>
&lt;p>&lt;span id="转载，引用，抄袭，原创的区别">&lt;/span>&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：以下陈述为作者个人理解，完整词缀描述请查百科或相关法条。如下以“文章发表”为例子说明“著作权”的常见体现，同样的形式也用于“乐曲”“计算机软件”“影视作品”等实体，需要注意的是 &lt;code>idea&lt;/code> 不属于保护范围，仅有想法不落地不算侵权但也不受保护。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>原创&lt;/strong>：甲用户在知乎首发了一篇文章A，不属于改编、翻译、注释、整理他人已有创作而产生的作品。&lt;/p>
&lt;p>简单理解，如果文章是自己敲出来的，内容和观点或是文章标题都无法在网上查到相同的案例的，都可以认为是原创。但现在各个垂直领域的基础构建几乎无死角，不可能完全不涉及他人的理论研究成果，所以文章中出现引用是必要的也是必须的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>引用&lt;/strong>：乙用户在任何平台上发表文章B，使用了A文章中的数据或者结论，注明来源。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>篡改&lt;/strong>：乙用户在任何平台上发表文章B*，使用了A文章中的数据或者结论，注明来源，但对数据本身有所改动或将原文逻辑紧密的上下文断章取义放到自己的文章中用以强化自己的观点（歪曲理解）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>抄袭&lt;/strong>：丙用户在任何平台上发表文章C，将B或A中的内容分散融入到自己文章的上下文之中，不注明来源。&lt;/p>
&lt;p>抄得少叫“融入”，抄得多叫“复制粘贴 + 语序润色”。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>转载&lt;/strong>：丁用户复制（&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>C&lt;/kbd> ）粘贴（&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>V&lt;/kbd>）了一篇文章后在任何平台上发表。&lt;/p>
&lt;p>所以默认情况下转载就是侵权，除非获得原作者授权！（转载后的）文章中的“涉及侵权，请联系删除”等免责声明无法律效益。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="用别人的作品当头像侵权吗">用别人的作品当头像侵权吗?&lt;/h3>
&lt;p>&lt;span id="用别人的作品当头像侵权吗?">&lt;/span>&lt;/p>
&lt;p>用别人的画作为账号头像的，如果不以盈利为目的，仅仅作为头像使用的，一般不构成侵权。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>相关法条&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="http://www.lasrd.gov.cn/include/content.php?id=17101#:~:text=%E6%9D%83%E5%88%A9%E7%9A%84%E9%99%90%E5%88%B6-,%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E6%9D%A1,-%E5%9C%A8%E4%B8%8B%E5%88%97%E6%83%85%E5%86%B5" target="_blank" rel="noopener"
>《中华人民共和国著作权法》第二十二条&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://www.lasrd.gov.cn/include/content.php?id=17101#:~:text=%E5%92%8C%E6%89%A7%E6%B3%95%E6%8E%AA%E6%96%BD-,%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E6%9D%A1,-%E6%9C%89%E4%B8%8B%E5%88%97%E4%BE%B5" target="_blank" rel="noopener"
>《中华人民共和国著作权法》第四十七条&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="如涉及侵权请联系删除等免责声明是否有效">如“涉及侵权，请联系删除”等免责声明是否有效？&lt;/h3>
&lt;p>&lt;span id="如“涉及侵权，请联系删除”等免责声明是否有效？">&lt;/span>&lt;/p>
&lt;p>“先授权，后转载”是”著作权法“的强制规定，未经授权进行转载均构成侵权。&lt;/p>
&lt;p>（1）“未经许可，严禁转载”，对于网络内容提供者而言，无论“声明”与否，只要未经许可转载都算侵权。&lt;/p>
&lt;p>（2）“禁止转载”，顾名思义，不可转载。&lt;/p>
&lt;h2 id="法条索引">法条索引&lt;/h2>
&lt;h3 id="中华人民共和国著作权法">中华人民共和国著作权法&lt;/h3>
&lt;p>&lt;span id="中华人民共和国著作权法">&lt;/span>&lt;/p></description></item><item><title>『 Hugo 』Shortcode</title><link>https://blog.echosec.top/p/hugo-shortcode/</link><pubDate>Wed, 22 Sep 2021 20:23:13 +0800</pubDate><guid>https://blog.echosec.top/p/hugo-shortcode/</guid><description>&lt;img src="https://blog.echosec.top/p/hugo-shortcode/3174729.jpg" alt="Featured image of post 『 Hugo 』Shortcode" />&lt;h2 id="demo">DEMO&lt;/h2>
&lt;p>提示：若无法播放以下内嵌视频，请注意系统代理的使用是否正确。&lt;/p>
&lt;h3 id="youtube">YouTube&lt;/h3>
&lt;blockquote>
&lt;p>插入视频：&lt;code>https://www.youtube.com/watch?v=vmkRMvhCW5c&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">youtube&lt;/span> &lt;span class="na">vmkRMvhCW5c&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/vmkRMvhCW5c"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;h3 id="本地视频">本地视频&lt;/h3>
&lt;blockquote>
&lt;p>插入视频：&lt;code>./minor-Shiru-Chen.mp4&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">video&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;./minor-Shiru-Chen.mp4&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="video-wrapper">
&lt;video
controls
src="./minor-Shiru-Chen.mp4"
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="./minor-Shiru-Chen.mp4">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;h3 id="哔哩哔哩">哔哩哔哩&lt;/h3>
&lt;blockquote>
&lt;p>插入视频：&lt;code>https://www.bilibili.com/video/BV1vs41197Fh?&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">bilibili&lt;/span> &lt;span class="na">BV1vs41197Fh&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="video-wrapper">
&lt;iframe src="https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1vs41197Fh"
scrolling="no"
frameborder="no"
framespacing="0"
allowfullscreen="true"
>
&lt;/iframe>
&lt;/div>
&lt;h3 id="腾讯视频">腾讯视频&lt;/h3>
&lt;blockquote>
&lt;p>插入视频：&lt;code>https://v.qq.com/x/page/y00408t8246.html&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">tencent&lt;/span> &lt;span class="na">y00408t8246&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="video-wrapper">
&lt;iframe src="https://v.qq.com/txp/iframe/player.html?vid=y00408t8246&amp;auto=0"
scrolling="no"
frameborder="no"
framespacing="0"
allowfullscreen="true"
>
&lt;/iframe>
&lt;/div>
&lt;h3 id="西瓜视频">西瓜视频&lt;/h3>
&lt;h3 id="搜狐视频">搜狐视频&lt;/h3>
&lt;h3 id="优酷视频">优酷视频&lt;/h3>
&lt;h2 id="shortcodes">Shortcodes&lt;/h2>
&lt;h3 id="what-shortcode">WHAT Shortcode&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://gohugo.io/content-management/shortcodes/#what-a-shortcode-is" target="_blank" rel="noopener"
>What a Shortcode is&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>shortcode&lt;/code> 短码调用，您的博客文章中被“特殊标注”的内容将被 Hugo 识别转义。&lt;/p>
&lt;p>通常，我们将 &lt;code>shortcode&lt;/code> 技术用于“内联搜索”的应用场景，换句话说， &lt;code>shortcode&lt;/code> 允许您在博客正文的任意位置嵌入可直接播放的媒体资源。&lt;/p>
&lt;p>也许您曾留意到，Hugo文档中经常出现&lt;a class="link" href="https://gohugo.io/getting-started/installing/#install-hugo-with-brew" target="_blank" rel="noopener"
>类似的应用案例&lt;/a>。&lt;/p>
&lt;h3 id="why-shortcode">WHY Shortcode&lt;/h3>
&lt;p>您可以通过 &lt;code>shortcode&lt;/code> 在文章的合适位置插入媒体资源用以增加信息浓度，提高内容的可读性。&lt;/p>
&lt;h3 id="how-shortcode">HOW Shortcode&lt;/h3>
&lt;h4 id="how-it-works">How it works?&lt;/h4>
&lt;h4 id="how-to-use-the-build-in--shortcode-of-hugo">How to use the build-in &lt;code>shortcode&lt;/code> of Hugo？&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://gohugo.io/content-management/shortcodes/#use-shortcodes" target="_blank" rel="noopener"
>Use Shortcode&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>在您的 Markdown 文章中使用如下格式的短码调用, 其内容将被 Hugo 识别为&lt;code>shortcode&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">yourShortcodeName&lt;/span> &lt;span class="err">[&lt;/span>&lt;span class="na">params&lt;/span>&lt;span class="err">]&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>在您的站点根目录下新建&lt;code>./layouts/shortcodes/yourShortcodeName.html&lt;/code>，编写这个文件&lt;/p>
&lt;p>此时，您在此&lt;code>.html&lt;/code>中编辑的语法内容将被 Markdown 容器接受并被 Hugo kernel 渲染输出体现在您的调试网页上。&lt;/p>
&lt;p>若您暂时不知道该写点什么，不必担心，&lt;a class="link" href="#overview" >Stack 默认提供了几种可靠的短码调用策略&lt;/a>。它们&lt;a class="link" href="https://gohugo.io/templates/shortcode-templates/#file-location" target="_blank" rel="noopener"
>默认存储&lt;/a>在&lt;code>./themes/hugo-theme-stack/layouts/shortcodes&lt;/code>中，根据 Hugo 模板调用的优先顺序，当您的根目录下的 &lt;code>./layourts/shortcodes/&lt;/code>并不存在有效同名项目时，Stack 提供的默认策略将生效。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>注意&lt;/strong>：一般情况下，&lt;code>\{\{&amp;lt; &amp;gt;}}&lt;/code> 标识符（此处加了反斜杠防止转义）中的 &lt;code>yourShortcodeName&lt;/code> 需要与您所指定的位于&lt;code>./layouts/shortcodes/&lt;/code>或&lt;code>./themes/hugo-theme-stack/layouts/shortcodes&lt;/code>下的&lt;code>.html&lt;/code>文件名一致。&lt;/p>
&lt;p>例如指定 &lt;code>./layouts/shortcodes/youtube.html&lt;/code>，那么合适的调用格式是 &lt;code>\{\{&amp;lt; youtube &amp;gt;}}&lt;/code>，后面的&lt;code>[params]&lt;/code>则根据具体的&lt;code>shortcode&lt;/code>接口内容而定。&lt;/p>
&lt;h4 id="how-to-use-the-custom-shortcode-of-stack">How to use the custom &lt;code>shortcode&lt;/code> of Stack&lt;/h4>
&lt;p>例如实现业内插入 Youtube 来源视频，假设如下 Markdown 内容为您的一篇&lt;strong>博客正文&lt;/strong>，若您正处于 &lt;code>hugo server&lt;/code> 本地调试模式，可直接复制挪用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">&lt;span class="k">&amp;gt; &lt;/span>&lt;span class="ge">这是写在你的 Markdown 正文中的内容哟~
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ge">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">## Example 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> 插入视频：`https://www.youtube.com/watch?v=MpYy6wwqxoo`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> 接受参数视频 ID,可能网址很长,但只需要复制**键值对** &lt;span class="sb">`v=`&lt;/span> 后面的内容，如：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">youtube&lt;/span> &lt;span class="na">MpYy6wwqxoo&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">## Example 2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> 插入视频：`https://www.youtube.com/watch?v=XRGquU0ZJok&lt;span class="err">&amp;amp;&lt;/span>list=PLvOO0btloRnsiqM72G4Uid0UWljikENlU&lt;span class="err">&amp;amp;&lt;/span>index=6`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> 这是一个分 p 的视频列表，链接中写明了这个`List ID` ,以及这个&amp;#34;视频&amp;#34;在列表中的位置序号 &lt;span class="sb">`index`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">但此处我们一次性只能插入一个视频，所以依然是只需要复制**键值对** &lt;span class="sb">`v=`&lt;/span> 后面的内容，如：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">youtube&lt;/span> &lt;span class="na">XRGquU0ZJok&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="shortcode-api">Shortcode API&lt;/h3>
&lt;p>上文简要介绍了如何在 Markdown 正文中利用 &lt;code>shortcode&lt;/code> 内嵌 Youtube 视频资源，除此之外，&lt;a class="link" href="https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes" target="_blank" rel="noopener"
>Hugo 内置&lt;/a>了许多的&lt;code>shortcode&lt;/code> 模板文件。&lt;/p>
&lt;p>以下是本主题提供的其他短码调用模板，其标准引用方法如下文所示。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>: 所有 Examples 标注的内容都是写在你要提交（post）的 blog-Markdown 中的。&lt;/p>
&lt;p>目前，本主题支持如下类型的媒体资源内嵌方案：&lt;span id="overview">&lt;/span>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#shortcode-bilibili" >哔哩哔哩&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#shortcode-tencent" >腾讯视频&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#shortcode-local-video" >本地视频&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#shortcode-youtube" >YouTube&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;span id='shortcode-bilibili'>&lt;/span>&lt;/p>
&lt;h4 id="bilibili">Bilibili&lt;/h4>
&lt;p>在博文中插入&lt;strong>哔哩哔哩&lt;/strong>媒体资源。&lt;/p>
&lt;p>&lt;strong>Shortcode Format&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>vid&lt;/td>
&lt;td>AV号 / BV号 [分P号]&lt;/td>
&lt;td>必填参数。(Type: String) 视频资源ID。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">bilibili&lt;/span> &lt;span class="na">AV号或BV号&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">bilibili&lt;/span> &lt;span class="na">AV号或BV号&lt;/span> &lt;span class="na">分P号&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Examples&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>插入资源： &lt;code>https://www.bilibili.com/video/BV1Sf4y1n75U?p=1&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>在 bilibili 的规则中，同一 List 下的分 P 视频的 BV 号都是一样的，通过 &lt;code>params: p&lt;/code> 来区分不同的视频&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">bilibili&lt;/span> &lt;span class="na">BV1Sf4y1n75U&lt;/span> &lt;span class="na">1&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">bilibili&lt;/span> &lt;span class="na">BV1Sf4y1n75U&lt;/span> &lt;span class="na">2&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>插入资源：&lt;code>https://www.bilibili.com/video/BV1Yv41147QK&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- just video src --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">bilibili&lt;/span> &lt;span class="na">BV1Yv41147QK&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;span id='shortcode-tencent'>&lt;/span>&lt;/p>
&lt;h4 id="tencent">Tencent&lt;/h4>
&lt;p>在博文中插入&lt;strong>腾讯视频&lt;/strong>媒体资源。&lt;/p>
&lt;p>&lt;strong>Shortcode Format&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>vid&lt;/td>
&lt;td>视频id&lt;/td>
&lt;td>必填参数。(Type: String) 视频资源ID。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Examples&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>插入资源：&lt;code>https://v.qq.com/x/page/b31563j0jqw.html&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- just video src --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">tencent&lt;/span> &lt;span class="na">b31563j0jqw&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;span id='shortcode-local-video'>&lt;/span>&lt;/p>
&lt;h4 id="video">Video&lt;/h4>
&lt;p>在博文中插入&lt;strong>本地(.mp4)视频文件&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>Shortcode Format&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Name&lt;/th>
&lt;th style="text-align:left">Value&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">src&lt;/td>
&lt;td style="text-align:left">relative paths&lt;/td>
&lt;td>必填参数。(Type: String) 视频文件（相对）路径。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">autoplay&lt;/td>
&lt;td style="text-align:left">true / false&lt;/td>
&lt;td>可选参数。(Type: String) 自动播放。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">poster&lt;/td>
&lt;td style="text-align:left">relative paths&lt;/td>
&lt;td>可选参数。(Type: String) 视频封面（相对）路径。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Examples&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>插入资源：与本篇博文放置在同一目录下的视频文件&lt;code>./video.mp4&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- just video src --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">video&lt;/span> &lt;span class="err">&amp;#34;./&lt;/span>&lt;span class="na">video&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">mp4&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- Other option --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">video&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;./video.mp4&amp;#34;&lt;/span> &lt;span class="na">autoplay&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="na">poster&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;./video-poster.png&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;span id='shortcode-youtube'>&lt;/span>&lt;/p>
&lt;h4 id="youtube-1">Youtube&lt;/h4>
&lt;p>在博文中插入 &lt;strong>YouTube&lt;/strong> 媒体资源。&lt;/p>
&lt;p>&lt;strong>Shortcode Format&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Name&lt;/th>
&lt;th style="text-align:left">Value&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">id&lt;/td>
&lt;td style="text-align:left">video id&lt;/td>
&lt;td>必填参数。(Type: String) 视频ID。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">autoplay&lt;/td>
&lt;td style="text-align:left">true / false&lt;/td>
&lt;td>可选参数。(Type: String) 进入页面后自动播放。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Examples&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>插入资源：&lt;code>https://www.youtube.com/watch?v=jflq6vNcZyA&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- just video src --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">youtube&lt;/span> &lt;span class="na">jflq6vNcZyA&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- Other option --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">youtube&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;jflq6vNcZyA&amp;#34;&lt;/span> &lt;span class="na">autoplay&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;false&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io/content-management/shortcodes/#what-a-shortcode-is" target="_blank" rel="noopener"
>Shortcodes | Hugo (gohugo.io)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/writing/shortcodes.html" target="_blank" rel="noopener"
>Shortcodes | Hugo 主题 Stack (jimmycai.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Hugo 』Blog Comments System</title><link>https://blog.echosec.top/p/blog-comments-system/</link><pubDate>Mon, 20 Sep 2021 19:38:45 +0800</pubDate><guid>https://blog.echosec.top/p/blog-comments-system/</guid><description>&lt;img src="https://blog.echosec.top/p/blog-comments-system/648440.jpg" alt="Featured image of post 『 Hugo 』Blog Comments System" />&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>本篇博客分享如何在 &lt;a class="link" href="https://github.com/gohugoio/hugo" target="_blank" rel="noopener"
>Hugo&lt;/a> 中快速部署 &lt;a class="link" href="https://github.com/utterance" target="_blank" rel="noopener"
>utteranc&lt;/a> 博客评论系统。&lt;/p>
&lt;p>此外，作者在压测环境下做了一系列针对该系统的实验。任何你对这个系统可能遇到的极端情况，以及想知道结果但不敢操作的相关行为的代价都详细记录在了文章末尾的 Conclusion中，望有助。&lt;/p>
&lt;p>作者所使用的测试环境是 &lt;strong>Hugo/&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/configuration/#comments" target="_blank" rel="noopener"
>theme:Stack&lt;/a> + Github Pages&lt;/strong>，使用的环境信息如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">ID&lt;/th>
&lt;th style="text-align:center">Content&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td style="text-align:center">Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo version&lt;/td>
&lt;td style="text-align:center">hugo v0.88.1-5BC54738+extended&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo theme&lt;/td>
&lt;td style="text-align:center">hugo-theme-Stack v3.2.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意&lt;/strong>： 若您将本篇博客作为您部署 utterances 的参考思路，默认您已具备一个可以正常运作的 Hugo 个人站点。&lt;/p>
&lt;h2 id="what-utterances">WHAT utterances&lt;/h2>
&lt;p>&lt;code>utterances&lt;/code> 是一种基于 GitHub issues 构建，可以将 GitHub issues 作为博客评论载体的轻量级评论小部件。截止至2020/09/21，此项目扔拥有以下特性：&lt;/p>
&lt;ul>
&lt;li>完全开源&lt;/li>
&lt;li>不追踪流量，没有广告，完全免费&lt;/li>
&lt;li>不阻断流量，所有的评论数据都会存储在你指定的Repository中&lt;/li>
&lt;li>基于&lt;a class="link" href="https://primer.style/" target="_blank" rel="noopener"
>Primer&lt;/a>设计，这是一种Github官方提供的CSS工具包（相较之下有更好的兼容性和性能提升）&lt;/li>
&lt;li>支持暗黑模式（Dark theme）&lt;/li>
&lt;li>足够轻量，完美兼容 Markdown 语法，没有字体缓存或 JavaScript frameworks 依赖&lt;/li>
&lt;/ul>
&lt;h2 id="why-utterances">WHY utterances&lt;/h2>
&lt;p>为什么选择&lt;code>utterances&lt;/code>？主要原因如上文所示，&lt;code>utterances&lt;/code> 是一种基于 Github 生态孵化的足够轻量的部件，在使用同为 Github 产品 Github Pages 的前提下，使用”同源产品“能够方便我们管理资源的储备及分布。此外，”同源“意味着它比其他”第三方“产品具备更好的兼容性及运行效率，从技术选型上符合”足够使用，不需要过度折腾“的普世需求。&lt;/p>
&lt;p>此外，对于国内技术用户来说有更大的便捷之处。选择 &lt;code>utterances&lt;/code> 作为博客评论系统的多大技术出身，此类技术博客的访客通常也人手一个 Github 账号。因此， Github 一键授权后，“评论发布” 与 “issues 分发” 都将畅通无阻，而非像部分第三方系统，还需使用者注册额外账号获取 Token 并鉴权后才能回复，这样绕一圈非常耗时，可能有的系统站点还被墙了，部分访客无法访问。&lt;/p>
&lt;p>当然，还有许多 Github 同源产品，以及一些优秀的第三方产品，这里不过多介绍了。截至目前 Hugo 支持的评论系统对比如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Provider&lt;/th>
&lt;th style="text-align:center">Github Platform&lt;/th>
&lt;th style="text-align:center">Markdown&lt;/th>
&lt;th style="text-align:center">Open Source&lt;/th>
&lt;th style="text-align:center">No ADs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">disqus&lt;/td>
&lt;td style="text-align:center">❌&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">❌&lt;/td>
&lt;td style="text-align:center">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;strong>utterances&lt;/strong>&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">remark42&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">vssue&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">waline&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">twikoo&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">giscus&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">gitalk&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="how-utterances">HOW utterances&lt;/h2>
&lt;h3 id="how-it-works">How it works&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>utterances&lt;/code> 工作流大致如下：&lt;/p>
&lt;p>当你的站点首次部署 &lt;code>utterances&lt;/code> 时，它会定期（频率很快）扫描你的站点，如果发现有新的留言，会依照对应的规则（title/url/pathname）在你的 &lt;code>comments-repo&lt;/code> 里提交 issue 。比如，你选择的规则是 &lt;code>title&lt;/code>, 那么你的文章标题会被作为 &lt;code>Issue Title&lt;/code> 提交到 &lt;code>comments-repo&lt;/code> ；如果你选的规则是 &lt;code>pathname&lt;/code>，那么文章对应的访问路径就会成为你的 &lt;code>Issue Title&lt;/code>; &lt;code>url&lt;/code>同理，只是在&lt;code>pathname&lt;/code>前加上了域名标签。&lt;/p>
&lt;p>当访客（首次使用 &lt;code>utterances&lt;/code> 系统）评论时，需要先进行 Github OAth API 授权，涉及的权限是允许 &lt;code>utterances&lt;/code> 控制访客账号向你的 &lt;code>comments-repo&lt;/code> 提交留言。&lt;/p>
&lt;p>值得一提的是，当你首次成功部署&lt;code>utterances&lt;/code>后，它并不会自动扫描你的站点并为你所有的文章都创建一个对应的初始化 issue 发送到你的仓库，它只会监听自它被部署后新出现的评论，如果这个被评论的文章没有提过 issue，才会携带相关信息提交 issue，如果已存在 issue（该篇文章被 &lt;strong>utterances-user&lt;/strong> 评论过），则会携带相关信息盖楼（在同 issue 下留言，而非继续创建）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当有访客来到这发表评论时，会经过如下过程：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.echosec.top/p/blog-comments-system/utteranc-workflow-16322305582472.svg"
loading="lazy"
alt="utterances-workflow"
>&lt;/p>
&lt;p>上图 &lt;code>utterances-workflow&lt;/code> 提到了几个关键节点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>comments-repo&lt;/code>：用于存放用户评论信息的仓库&lt;/p>
&lt;p>意味着我们需要创建一个 Repository 存放 blog comments&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>utterances-bot&lt;/code>：用于处理其他 Github 用户提交的 comment&lt;/p>
&lt;p>意味着我们需要在这个 Repository ( &lt;code>comments-repo&lt;/code> ) 中下载 &lt;code>utterances&lt;/code>，包含授权以及机器人一条龙管家服务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="how-to-use-utterances-on-hugo">How to use utterances on Hugo&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>New a Public Repository, such as &amp;lsquo;comments-repo&amp;rsquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Change the configuration of your Hugo site-code.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># ~/config.yaml &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 再次声明，本博客使用 Stack 主题作为分享参考，此主题使用.yaml 格式配置文件，且预先写好了 utterances 接口网页，意味着仅需改动配置文件就能使用。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如果你至此的所有环境与操作都与作者相同，那恭喜你马上就要通关了！&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如果你的主题用其他格式文件，注意语法的调整。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如果你的主题没有携带 utterances 脚本代码，请在~/layouts/partials/comments/provider/ 目录下新建一个 utterances.html 文件，并在里面输入下一个代码块中的内容。如何判断你的主题是否支持 utterances 呢？ 查看 ~/themes/&amp;lt;your-theme&amp;gt;/layouts/partials/comments/provider/ 目录下是否存在 utterances.html 既可。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 全局配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">params&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 留言系统设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">comments&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 评论系统提供商。目前支持的有：disqus utterances remark42 vssue waline twikoo giscus gitalk&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">utterances&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 关于 utterances 的具体配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">utterances&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># repo 必填项，指向你的`comments-repo`，参照写法如 qin2dim/blog-comments 注意别加.github.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;GithubUserName&amp;gt;/&amp;lt;RepositoryName&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># issueTerm: 必填项，issue标题的切分规则，可写 pathname title url&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">issueTerm&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pathname&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># theme 必填项，评论区的主题&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 可选 github-light github-dark preferred-color-scheme &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># github-dark-origin lcy-dark dark-blue photon-dark boxy-light&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">theme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github-light&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># label 可选项，提交的issue的默认标签，不填则不打标签。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">// utterances.html template of theme, Stack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://utteranc.es/client.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">repo&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Site.Params.comments.utterances.repo }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">issue-term&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Site.Params.comments.utterances.issueTerm }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">{{&lt;/span> &lt;span class="na">with&lt;/span> &lt;span class="err">.&lt;/span>&lt;span class="na">Site&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">Params&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">comments&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">utterances&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">label&lt;/span> &lt;span class="err">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ . }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">{{&lt;/span> &lt;span class="na">end&lt;/span> &lt;span class="err">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">async&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nc">utterances&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">max-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">unset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">function&lt;/span> &lt;span class="nx">setUtterancesTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">theme&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">utterances&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.utterances iframe&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">utterances&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">utterances&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contentWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">postMessage&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;set-theme&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">theme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`github-&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">theme&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;https://utteranc.es&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">event&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">origin&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s1">&amp;#39;https://utteranc.es&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">setUtterancesTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">documentElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scheme&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;onColorSchemeChange&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">setUtterancesTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Install utterances for your &amp;lsquo;comments-repo&amp;rsquo; .&lt;/p>
&lt;p>访问 &lt;a class="link" href="https://github.com/apps/utterances" target="_blank" rel="noopener"
>utterances&lt;/a> 为你的仓库下载执行脚本。切记仅对你存储评论的仓库下载脚本（Only select repositories）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Git the utterances-bot to operate your &amp;lsquo;comments-repo&amp;rsquo;.&lt;/p>
&lt;p>再次访问 &lt;a class="link" href="https://github.com/apps/utterances" target="_blank" rel="noopener"
>utterances&lt;/a> 授予机器人操作仓库的权限（Configure）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Enjoy your live.&lt;/p>
&lt;p>本地启动 Hugo 服务器，或者推送启动了评论功能的站点代码，直接访问你的 Github Pages，测试评论功能。&lt;/p>
&lt;img src="image-20210921221634558.png" style="zoom: 50%;" />
&lt;/li>
&lt;/ul>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>本地 hugo server 提交的评论也会被 utterances-bot 收录到 issues 中&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/blog-comments-system/image-20210921222542719.png"
width="2015"
height="1054"
srcset="https://blog.echosec.top/p/blog-comments-system/image-20210921222542719_hud5dc7da48c84aefbe260857398577f80_237619_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/blog-comments-system/image-20210921222542719_hud5dc7da48c84aefbe260857398577f80_237619_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Comments-repo"
class="gallery-image"
data-flex-grow="191"
data-flex-basis="458px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>直接在 issues 中发送的留言，也被会 utterances-bot 转发到 issues 对应的博客评论区中&lt;/strong>&lt;/p>
&lt;p>值得一提的是，如果你此时正在本地运行 hugo server，有人在 issue 中发送新的留言，你能直接在 local server 中接收到这个信息，意味着你的文章评论区会直接渲染出更新的内容（如果你是 fast render 模式，需要刷新一下页面）。 同理，已经部署发布的站点也能收到这些讯息（实时更新）。&lt;/p>
&lt;img src="image-20210921223843970.png" alt="image-20210921223843970" style="zoom:67%;" />
&lt;/li>
&lt;li>
&lt;p>&lt;strong>从 utterances-bot 被成功部署的时刻算起，被评论过的文章才会被映射成 issue 收录进 comments-repository 中&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>作为仓库的创建者，你有权删除任何 issue&lt;/strong>&lt;/p>
&lt;p>一个已创建的评论 issue 后被删除，其盖楼评论会一起消失，意味着 issue 对应博客下的所有评论都会被瞬间清空。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>作为仓库的创建者，你有权 close/reopen 任何 issue，但这并不影响评论系统的正常运转&lt;/strong>&lt;/p>
&lt;p>如下图所示，作者先手动关闭了一个评论 issue，观察到稍后在博客中的留言依然可以被转发进来。此时 issue 仍保持&lt;code>close&lt;/code>状态，并不会因为有新的动态而&lt;code>reopen&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/blog-comments-system/image-20210921230424682.png"
width="1484"
height="1093"
srcset="https://blog.echosec.top/p/blog-comments-system/image-20210921230424682_hu1e9cf67bbeff687ab88bdea8c44593ef_132420_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/blog-comments-system/image-20210921230424682_hu1e9cf67bbeff687ab88bdea8c44593ef_132420_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="B signal from hugo server"
class="gallery-image"
data-flex-grow="135"
data-flex-basis="325px"
>&lt;/p>
&lt;p>同样，从&lt;code>closed issue&lt;/code>中发的言论，仍会被同步到 issue 对应的博客评论区中，如下图所示。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/blog-comments-system/image-20210921230722030.png"
width="2708"
height="814"
srcset="https://blog.echosec.top/p/blog-comments-system/image-20210921230722030_hu5cb2465af768e815f71b2160a2c767b6_220402_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/blog-comments-system/image-20210921230722030_hu5cb2465af768e815f71b2160a2c767b6_220402_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="A signal from closed issue"
class="gallery-image"
data-flex-grow="332"
data-flex-basis="798px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>从 issue 中被删去的留言，在 issue 对应文章的评论区中的留言也会被同步删除&lt;/strong>&lt;/p>
&lt;p>但是在博客中确无法找到删除留言的元素，意味着博客留言者想要移除/修改自己已发表的评论，需要到 comments-repo 仓库这里修改。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>映射网址无法自动调整&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>还记得Conclusion 的第一条总结吗，机器人会提供一条反射信息，是一个直接指向该篇博客的访问链接。通常情况下这时正常运作的，但如果这篇文章的第一条评论是你在本地测试时直接在 hugo server 上发送的，那反射信息就会如图中显示的那样指向http:localhost:1313/xxx，这是一个非常糟糕的情况，后续作者在部署站点上更新的评论，依然无法让机器人自动调整反射网址。如果你这么做了，你可能手动修改issue中的反射信息，否则他无法指向正确的博客链接。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>机器人提供的反射域名并不会因为你设置了CNAME而有所改变，依然会是&lt;code>https://Yourname.github.io/xxxx&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>utterances 具备一定的“跟踪”能力&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如第一条 Conclusion 所示，当你的文章被标记收录后，机器人会提供你的文章标题以及副标题信息。即使你未来改变了这些信息（title，description），issue中的已被提供的这些信息不会自行变更，但这并不影响评论系统正常运行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>但如果你修改了文章的&lt;code>slug&lt;/code>也即修改了文章对应的检索路径（重启本地服务器后生效），这篇文章挂载的评论信息会“丢失”。同样，你在更新了 slug 的文章发送的评论，会被机器人以新的 issue 提交到你的 comments-repo，显然，首层占楼的反射信息指向了你变更后的博客网址。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/blog-comments-system/image-20210921234029895.png"
width="777"
height="297"
srcset="https://blog.echosec.top/p/blog-comments-system/image-20210921234029895_hu1bd586458df5d8d6ae2be592aa6608b3_36524_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/blog-comments-system/image-20210921234029895_hu1bd586458df5d8d6ae2be592aa6608b3_36524_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Issues of the comments-repo"
class="gallery-image"
data-flex-grow="261"
data-flex-basis="627px"
>&lt;img src="https://blog.echosec.top/p/blog-comments-system/image-20210921234644893.png"
width="774"
height="406"
srcset="https://blog.echosec.top/p/blog-comments-system/image-20210921234644893_hudbd65d4969dde2f3d85137308f6c050d_41588_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/blog-comments-system/image-20210921234644893_hudbd65d4969dde2f3d85137308f6c050d_41588_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="YAML Font Matter of Markdown"
class="gallery-image"
data-flex-grow="190"
data-flex-basis="457px"
>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>utterances 跟踪你的网址而非你的标题&lt;/strong>&lt;/p>
&lt;p>是的，猜想是对的。当你将文章的&lt;code>slug&lt;/code>改回去后，这篇文章所挂载的评论区又回来了。意味着只要不删除 issue，评论信息并不会真正 &amp;ldquo;丢失&amp;rdquo;。&lt;/p>
&lt;p>换句话说，你可以随意修改文章标题以及副标题，但不要随意修改文章的网页路径&lt;code>slug&lt;/code>，这是一项危险的操作，除非你做好了数据迁移的准备。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 comments-repo 中人为提交的 issue 会作为评论被同步到对应的文章中吗？&lt;/p>
&lt;p>答：不可以！但是，只有第一条不可以！&lt;/p>
&lt;p>以下为一条规则正确的 issue ，他被正确指向作者的“Hello Hugo”这篇博客，创建 issue 时发送了一局“Could you do it?”在博客评论区中没有提现。而后作者在同个评论区中发言“:rocket: Can you make it?” 却能经过转发，体现在 issue 中，可以看到作者头像右下角出现了 utterances 的标志。之后，作者在 issue 中连续发送的两条消息都能被转发到博客评论区中。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/blog-comments-system/image-20210922003310596.png"
width="1014"
height="452"
srcset="https://blog.echosec.top/p/blog-comments-system/image-20210922003310596_hu981c248986aad23bed7f866441828a2e_53573_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/blog-comments-system/image-20210922003310596_hu981c248986aad23bed7f866441828a2e_53573_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="224"
data-flex-basis="538px"
>&lt;img src="https://blog.echosec.top/p/blog-comments-system/image-20210922003342805.png"
width="925"
height="405"
srcset="https://blog.echosec.top/p/blog-comments-system/image-20210922003342805_huc15c305d86fce6746c1b59d0c14683d5_33040_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/blog-comments-system/image-20210922003342805_huc15c305d86fce6746c1b59d0c14683d5_33040_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="228"
data-flex-basis="548px"
>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.echosec.top/p/blog-comments-system/image-20210922004416298.png"
width="1740"
height="1092"
srcset="https://blog.echosec.top/p/blog-comments-system/image-20210922004416298_hueac024d129ac77b04b71d418a6c4c7c6_286614_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/blog-comments-system/image-20210922004416298_hueac024d129ac77b04b71d418a6c4c7c6_286614_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="被动通信"
class="gallery-image"
data-flex-grow="159"
data-flex-basis="382px"
>&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://utterances.es/?installation_id=19642746&amp;amp;setup_action=install" target="_blank" rel="noopener"
>utterances&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/utterance" target="_blank" rel="noopener"
>utterances (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>The world’s fastest framework for building websites | Hugo (gohugo.io)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/configuration/#comments" target="_blank" rel="noopener"
>配置主题 | Hugo 主题 Stack (jimmycai.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Hugo 』Typlog Atlas</title><link>https://blog.echosec.top/p/typlog-atlas/</link><pubDate>Mon, 20 Sep 2021 19:38:28 +0800</pubDate><guid>https://blog.echosec.top/p/typlog-atlas/</guid><description>&lt;img src="https://blog.echosec.top/p/typlog-atlas/topic.png" alt="Featured image of post 『 Hugo 』Typlog Atlas" />&lt;h2 id="demo">DEMO&lt;/h2>
&lt;p>&lt;img src="https://blog.echosec.top/p/typlog-atlas/IMG_5395.jpg"
width="3257"
height="4885"
srcset="https://blog.echosec.top/p/typlog-atlas/IMG_5395_hu2a5c815046d1543c42e798457ad5314d_6666683_480x0_resize_q75_box.jpg 480w, https://blog.echosec.top/p/typlog-atlas/IMG_5395_hu2a5c815046d1543c42e798457ad5314d_6666683_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="66"
data-flex-basis="160px"
>&lt;img src="https://blog.echosec.top/p/typlog-atlas/IMG_2992.jpg"
width="2688"
height="4032"
srcset="https://blog.echosec.top/p/typlog-atlas/IMG_2992_hu28bbd280ade207f644fc1e629f5d4496_4886553_480x0_resize_q75_box.jpg 480w, https://blog.echosec.top/p/typlog-atlas/IMG_2992_hu28bbd280ade207f644fc1e629f5d4496_4886553_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="66"
data-flex-basis="160px"
>&lt;img src="https://blog.echosec.top/p/typlog-atlas/IMG_5502.jpg"
width="5797"
height="3865"
srcset="https://blog.echosec.top/p/typlog-atlas/IMG_5502_hu76cc990b57d2904a4a5aaad8b6d423aa_2350861_480x0_resize_q75_box.jpg 480w, https://blog.echosec.top/p/typlog-atlas/IMG_5502_hu76cc990b57d2904a4a5aaad8b6d423aa_2350861_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/typlog-atlas/IMG_5080.jpg"
width="6000"
height="4000"
srcset="https://blog.echosec.top/p/typlog-atlas/IMG_5080_hu64bb4a98e708af93b67eddf26681e167_1955383_480x0_resize_q75_box.jpg 480w, https://blog.echosec.top/p/typlog-atlas/IMG_5080_hu64bb4a98e708af93b67eddf26681e167_1955383_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="360px"
>&lt;img src="https://blog.echosec.top/p/typlog-atlas/IMG_4893.jpg"
width="3903"
height="5854"
srcset="https://blog.echosec.top/p/typlog-atlas/IMG_4893_hue25010fc06f7240390c3c616179f3151_16863397_480x0_resize_q75_box.jpg 480w, https://blog.echosec.top/p/typlog-atlas/IMG_4893_hue25010fc06f7240390c3c616179f3151_16863397_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="66"
data-flex-basis="160px"
>&lt;img src="https://blog.echosec.top/p/typlog-atlas/IMG_5674.jpg"
width="4000"
height="6000"
srcset="https://blog.echosec.top/p/typlog-atlas/IMG_5674_hu8c01a0eb20a3cf32220a6562416c4b71_16880583_480x0_resize_q75_box.jpg 480w, https://blog.echosec.top/p/typlog-atlas/IMG_5674_hu8c01a0eb20a3cf32220a6562416c4b71_16880583_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="66"
data-flex-basis="160px"
>&lt;/p>
&lt;hr>
&lt;h2 id="what-typlog">What Typlog&lt;/h2>
&lt;p>&lt;strong>Typlog 相册语法&lt;/strong> 是一种基于 Markdown 图像插入语法的，能将你插入到 Markdown 文本中的图片渲染呈现“瀑布流”排版效果的一种嵌入式插件。&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/writing/#%E6%8F%92%E5%85%A5%E7%9B%B8%E5%86%8C" target="_blank" rel="noopener"
>Stack@Hugo主题&lt;/a> 借鉴支持 &lt;a class="link" href="https://blog.typlog.com/images" target="_blank" rel="noopener"
>Typlog 相册语法&lt;/a>，该主题已获原作者 &lt;a class="link" href="https://lepture.com/" target="_blank" rel="noopener"
>Lepture&lt;/a> 授权。&lt;/p>
&lt;h2 id="why-typlog">Why Typlog&lt;/h2>
&lt;p>&lt;strong>Typlog 相册语法&lt;/strong> 能够丰富你的 Markdown 正文内容，也能在需要的地方增加信息浓度。&lt;/p>
&lt;h2 id="how-typlog">How Typlog&lt;/h2>
&lt;h3 id="how-to-insert-a-picture-by-markdown-syntax">How to insert a picture by Markdown syntax&lt;/h3>
&lt;p>Markdown 插入图片的语法规则如下所示。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">alt text for the image&lt;/span>](&lt;span class="na">src of the image&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处的 &lt;code>src&lt;/code> 可以是本地资源路径，也可以是网络图片的链接（如果目标资源设置了防盗链，可能无法直接在&lt;code>webview&lt;/code>中使用）。&lt;/p>
&lt;p>Markdown 插入图片的用法如下代码块所示。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">local source&lt;/span>](&lt;span class="na">hello-hugo.jpg&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">remote source&lt;/span>](&lt;span class="na">https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="how-to-insert-a-picture-by-typlog-syntax">How to insert a picture by Typlog syntax&lt;/h3>
&lt;p>Typlog 语法格式基于上述代码实现。“瀑布流”排版效果实现起来非常简单，&lt;strong>仅需将&lt;code>Syntax Block&lt;/code>按照你的意愿进行“堆叠”，插入的图片就会被“等比例调整”实现自动排版效果&lt;/strong>。&lt;/p>
&lt;p>实现&lt;code>2 × 2&lt;/code>矩阵图的自动排版参考语法如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">img-1&lt;/span>](&lt;span class="na">image1.jpg&lt;/span>)![&lt;span class="nt">img-2&lt;/span>](&lt;span class="na">image2.jpg&lt;/span>)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">img-3&lt;/span>](&lt;span class="na">image3.jpg&lt;/span>)![&lt;span class="nt">img-4&lt;/span>](&lt;span class="na">image4.jpg&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>实现&lt;code>1 × 2 + 1 + 1 x 2&lt;/code>矩阵图的自动排版参考语法如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src1&lt;/span>) ![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src2&lt;/span>)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src3&lt;/span>)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src4&lt;/span>) ![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src5&lt;/span>) ![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src6&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Typlog 作为一个由 Stack 引入的拓展插件，仅能在你的 Hugo 站点上生效，而本地编辑 Markdown 的工具（如 Typora）在默认情况下是不会提现 Typlog 的排版效果的。&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://pixabay.com/images/search/?cat=feelings&amp;amp;colors=gray" target="_blank" rel="noopener"
>Pixabay&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/writing/#%e6%8f%92%e5%85%a5%e7%9b%b8%e5%86%8c" target="_blank" rel="noopener"
>开始创作 | Hugo 主题 Stack&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.typlog.com/images" target="_blank" rel="noopener"
>Images in Typlog - Type A Log&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Awesome 』Root</title><link>https://blog.echosec.top/p/awesome-resources/</link><pubDate>Mon, 20 Sep 2021 05:00:48 +0800</pubDate><guid>https://blog.echosec.top/p/awesome-resources/</guid><description>&lt;img src="https://blog.echosec.top/p/awesome-resources/cover.jpg" alt="Featured image of post 『 Awesome 』Root" />&lt;h2 id="aggregator">Aggregator&lt;/h2>
&lt;blockquote>
&lt;p>聚合引擎。&lt;/p>
&lt;/blockquote>
&lt;h3 id="network-security">Network Security&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://hack.coolzhanweb.com/#term-7" target="_blank" rel="noopener"
>黑客导航 | 安全网址导航&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://start.me/p/X20Apn" target="_blank" rel="noopener"
>听风者情报源&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="toolbox">ToolBox&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://ujuji.com/" target="_blank" rel="noopener"
>优聚集&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="http://www.ucdrs.superlib.net/" target="_blank" rel="noopener"
>全国图书馆参考咨询联盟 (superlib.net)&lt;/a> | &lt;a class="link" href="https://www.duxiu.com/login.jsp?backurl=&amp;amp;num=&amp;amp;username=&amp;amp;refer=&amp;amp;flag=true" target="_blank" rel="noopener"
>读秀网&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="curiosity">Curiosity&lt;/h2>
&lt;blockquote>
&lt;p>一些猎奇网站。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.yikm.net/" target="_blank" rel="noopener"
>小霸王，其乐无穷&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://zoom.earth/" target="_blank" rel="noopener"
>Zoom Earth | 实时气象卫星图像&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="excellent-ers">Excellent ERs&lt;/h2>
&lt;blockquote>
&lt;p>汇总各个主题下优秀的博主以及细分领域极具代表性的开源工程项目。（TODO 需细化分类）&lt;/p>
&lt;/blockquote>
&lt;h3 id="blogeryoutuber">Bloger/Youtuber&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.youtube.com/watch?v=XKZM_AjCUr0" target="_blank" rel="noopener"
>Youtuber|电玩科技AK&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.v2rayssr.com/" target="_blank" rel="noopener"
>Youtuber|波仔&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="http://www.ruanyifeng.com/home.html" target="_blank" rel="noopener"
>Bloger|阮一峰&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.duyaoss.com/" target="_blank" rel="noopener"
>Bloger|DuyaoSS-机场测速和简介&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://10beasts.net/" target="_blank" rel="noopener"
>Bloger|Barry-10BeastsVPN测评&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.wangluotizi.com/" target="_blank" rel="noopener"
>Bloger|梯子大神&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;hellip;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="project">Project&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/XTLS" target="_blank" rel="noopener"
>Project X &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/v2ray" target="_blank" rel="noopener"
>Project V &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/trojan-gfw" target="_blank" rel="noopener"
>Trojan-GFW&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/p4gefau1t/trojan-go" target="_blank" rel="noopener"
>Trojan-Go&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;blockquote>
&lt;p>开眼看世界，送给CN编程菜鸟的一份礼物。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.githubs.cn/" target="_blank" rel="noopener"
>GitHub中文社区 &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://hellogithub.com/" target="_blank" rel="noopener"
>HelloGitHub 分享 GitHub 上入门级、有趣的开源项目&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.w3schools.com/" target="_blank" rel="noopener"
>W3Schools Online Web Tutorials&lt;/a> | &lt;a class="link" href="https://www.w3school.com.cn/" target="_blank" rel="noopener"
>w3school 在线教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="material">Material&lt;/h2>
&lt;blockquote>
&lt;p>(免费)素材站点，包括但不限于图标，图片，视频模板以及BT种子网站。&lt;/p>
&lt;/blockquote>
&lt;h3 id="bt-stream">BT-Stream&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.mypianku.net/" target="_blank" rel="noopener"
>片库 - 全网高清影视聚合下载 (mypianku.net)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="icons">Icons&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://icons8.com/" target="_blank" rel="noopener"
>Free Icons, Clipart Illustrations, Photos, and Music (icons8.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://emojixd.com/" target="_blank" rel="noopener"
>🤣 Emoji表情大全，颜文字百科 💌 - EmojiXD&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://iconstore.co/" target="_blank" rel="noopener"
>Free icons by first-class designers | Iconstore&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="pictures">Pictures&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://pixabay.com/zh/" target="_blank" rel="noopener"
>Pixabay&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.pexels.com/zh-cn/" target="_blank" rel="noopener"
>Pexels&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://foter.com/" target="_blank" rel="noopener"
>Foter&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="videos">videos&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.aigei.com/" target="_blank" rel="noopener"
>爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载 (aigei.com)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://unsplash.com/t/film" target="_blank" rel="noopener"
>Film | Unsplash&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://mixkit.co/" target="_blank" rel="noopener"
>Mixkit - Awesome free assets for your next video project&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="osint">OSINT&lt;/h2>
&lt;blockquote>
&lt;p>开源情报分析框架，囊括了你在网络上以非接触方式了解一个人的各种渠道。&lt;/p>
&lt;/blockquote>
&lt;h3 id="search-engine">Search Engine&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://gibiru.com/" target="_blank" rel="noopener"
>Gibiru – Protecting your privacy since 2009&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://duckduckgo.com/?q=&amp;amp;atb=v1-1" target="_blank" rel="noopener"
>DuckDuckGo — 隐私保护，化繁为简。&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://crt.sh/?" target="_blank" rel="noopener"
>crt.sh | Certificate Search&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.zoomeye.org/component" target="_blank" rel="noopener"
>ZoomEye - Cyberspace Search Engine&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://weixin.sogou.com/" target="_blank" rel="noopener"
>搜狗微信搜索_订阅号及文章内容独家收录，一搜即达 (sogou.com)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.opengps.cn/Data/IP/ipplus.aspx" target="_blank" rel="noopener"
>高精度IP定位4 - openGPS.cn&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cn.linkedin.com/pub/dir?lastName=&amp;amp;firstName=%e8%a2%81%e5%8d%9a&amp;amp;trk=public_profile_people-search-bar_search-submit" target="_blank" rel="noopener"
>领英 | Linkedin&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.reg007.com/" target="_blank" rel="noopener"
>你注册过哪些网站？一搜便知 - REG007&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="tech-blog">Tech Blog&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.secjuice.com/tag/osint/" target="_blank" rel="noopener"
>OSINT - Secjuice&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://pentester.land/" target="_blank" rel="noopener"
>Pentester Land · Offensive Infosec&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://ahrefs.com/blog/google-advanced-search-operators/" target="_blank" rel="noopener"
>Google Search Operators&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://osintframework.com/" target="_blank" rel="noopener"
>OSINT Framework&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="tools-for-breaking-privacy">Tools for Breaking Privacy&lt;/h3>
&lt;h4 id="global">Global&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://t.me/FreeSGKbot?start=SGKHSBMGGW" target="_blank" rel="noopener"
>@FreeSGKbot&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://whatsmyname.app/" target="_blank" rel="noopener"
>WhatsMyName Web&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="cn-people">CN People&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="http://www.cltt.org/studentscore" target="_blank" rel="noopener"
>全国普通话培训测试信息资源网&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://account.chsi.com.cn/account/password!retrive" target="_blank" rel="noopener"
>找回密码_学信网&lt;/a> | &lt;a class="link" href="https://account.chsi.com.cn/account/password!rtvlgname" target="_blank" rel="noopener"
>找回用户名_学信网&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="tools-for-reasoning">Tools for Reasoning&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="http://suncalc.net/" target="_blank" rel="noopener"
>suncalc&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="programming">Programming&lt;/h2>
&lt;blockquote>
&lt;p>与编程相关的一些站点&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://deepsource.io/" target="_blank" rel="noopener"
>DeepSource: Fast and reliable static analysis platform&lt;/a>&lt;/p>
&lt;p>代码质量检测，自动集成，扫描代码中的bug，反模式编程，以及非范式编程。&lt;/p>
&lt;p>支持 PYTHON, JAVASCRIPT, RUBY, GO, TERRAFORM, JAVA, COVERAGE&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Hugo 』Hello Hugo</title><link>https://blog.echosec.top/p/hello-hugo/</link><pubDate>Sun, 19 Sep 2021 23:40:03 +0800</pubDate><guid>https://blog.echosec.top/p/hello-hugo/</guid><description>&lt;img src="https://blog.echosec.top/p/hello-hugo/2511065.jpg" alt="Featured image of post 『 Hugo 』Hello Hugo" />&lt;p>使用&lt;code>Hugo/theme:Stack + Github Pages&lt;/code> 快速搭建个人博客网站，足够轻量，包含最新特性，快速上手，记录一些容易踩的坑。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：若您将本博客作为您的部署参考指南，默认您拥有一枚可用的&lt;code>Github&lt;/code>账号，了解&lt;code>git&lt;/code>，&lt;code>bash/shell&lt;/code>常用指令，且您的本机运行环境中已预先安装&lt;code>hugo&lt;/code>脚手架。本篇博客的行内指令若无特殊说明，均在站点根目录下执行，请注意区别。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">ID&lt;/th>
&lt;th style="text-align:center">Content&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td style="text-align:center">Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo version&lt;/td>
&lt;td style="text-align:center">hugo v0.88.1-5BC54738+extended&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo theme&lt;/td>
&lt;td style="text-align:center">hugo-theme-Stack v3.2.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;h3 id="preview">Preview&lt;/h3>
&lt;p>我们需要知道当前版本中的 Github Pages 能创建在你的任意一个 Github Project 之上，而非一定要在&lt;code>yourname.github.io&lt;/code>上创建。但无论是哪种创建方式，都要遵守相应的部署规则，才能不报错，不出现路径定位异常等问题。&lt;/p>
&lt;p>其次，Github Pages 默认以你的 Project Repository 为项目根，意味着你&lt;strong>部署 Github Pages 的仓库首页&lt;/strong>应该存在如&lt;code>index.html&lt;/code>，&lt;code>404.html&lt;/code>等站点文件，参考组织结构如下图所示。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/Snipaste_2021-09-20_00-42-35.png"
width="2055"
height="730"
srcset="https://blog.echosec.top/p/hello-hugo/Snipaste_2021-09-20_00-42-35_hufbbd0cd106106cda9e414f3ca7ff70f3_79807_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/Snipaste_2021-09-20_00-42-35_hufbbd0cd106106cda9e414f3ca7ff70f3_79807_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="参考组织结构"
class="gallery-image"
data-flex-grow="281"
data-flex-basis="675px"
>&lt;/p>
&lt;p>显然，此处的“仓库首页”是你的 Pages 指向的 folder ，如下图所示。&lt;span id="select folder">&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920005037531.png"
width="1264"
height="402"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920005037531_hu6a14e650ccf543636d4c92a1e14b7c7b_57653_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920005037531_hu6a14e650ccf543636d4c92a1e14b7c7b_57653_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Pages 运行根"
class="gallery-image"
data-flex-grow="314"
data-flex-basis="754px"
>&lt;/p>
&lt;p>举个例子，你的用户名叫 &lt;code>xiaoming&lt;/code>，你创建了一个仓库叫 &lt;code>APIs-docs&lt;/code>，那么你的仓库链接是&lt;code>https://github.com/xiaoming/apis-docs&lt;/code>（大小写不敏感）。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>此时如果你的 &lt;code>Select folder = /(root)&lt;/code>，那么你直接访问上文所述仓库链接后，能直接在当前页面中看到&lt;code>index.html&lt;/code>等文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同理，&lt;code>Select folder = /docs&lt;/code>，那么你访问链接&lt;code>https://github.com/xiaoming/apis-docs/docs&lt;/code>后，也能在当前页面中看到 &lt;code>index.html&lt;/code>等文件，也即项目源码中&lt;strong>需要有&lt;/strong>这么个一个&lt;code>/docs&lt;/code>文件夹存放渲染好的站点信息。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>这个 &lt;strong>folder&lt;/strong> 非常关键，其为 &lt;strong>hugo&lt;/strong> 的编译输出文件夹，也即配置文件中 &lt;strong>publishDir&lt;/strong> 变量指明的相对路径，后文详细说明。&lt;/p>
&lt;h3 id="new-repository">New Repository&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>用你喜欢的方式创建一个仓库(Public)。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不建议初始化任何文件，这可能会造成不可预估的版本冲突问题，如果你想添加&lt;code>README.md&lt;/code>什么的，完全可以在你的站点部署成功后手动创建。本篇博客创建的demo不勾选初始化，若您实际操作与本步骤不符，请于后续步骤中选择对应的解决方案。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920010752399.png"
width="1460"
height="1568"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920010752399_hu71d7ba8a1a19543475da1add4920f60a_192494_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920010752399_hu71d7ba8a1a19543475da1add4920f60a_192494_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Create a new repository for demo"
class="gallery-image"
data-flex-grow="93"
data-flex-basis="223px"
>&lt;/p>
&lt;h3 id="hugo-scaffold">Hugo Scaffold&lt;/h3>
&lt;h4 id="new-site">New Site&lt;/h4>
&lt;blockquote>
&lt;p>此阶段使用脚手架迅速构建 hugo 项目并创建默认的目录结构。&lt;/p>
&lt;/blockquote>
&lt;p>找个比较可靠的位置启动你熟悉的CLI App(Terminal/bash/powershell)，按步骤执行如下指令。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>创建名为&lt;code>hello-hugo&lt;/code>的站点&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hugo new site hello-hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Congratulations! Your new Hugo site is created in E:&lt;span class="se">\_&lt;/span>GithubProjects&lt;span class="se">\m&lt;/span>yProfile&lt;span class="se">\h&lt;/span>ello-hugo.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Just a few more steps and you&lt;span class="err">&amp;#39;&lt;/span>re ready to go:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. Download a theme into the same-named folder.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Choose a theme from https://themes.gohugo.io/ or
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create your own with the &lt;span class="s2">&amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34;&lt;/span> command.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. Perhaps you want to add some content. You can add single files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with &lt;span class="s2">&amp;#34;hugo new &amp;lt;SECTIONNAME&amp;gt;\&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. Start the built-in live server via &lt;span class="s2">&amp;#34;hugo server&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Visit https://gohugo.io/ &lt;span class="k">for&lt;/span> quickstart guide and full documentation.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>进入站点根目录&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> hello-hugo/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>打印站点根目录下的文件&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">archetypes/ config.toml content/ data/ layouts/ static/ themes/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时一个完整的 hugo 项目已经创建完毕，现在需要修改配置文件，使其兼容 Github Pages 部署规则。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="update-configuration">Update Configuration&lt;/h4>
&lt;blockquote>
&lt;p>此阶段以demo的形式说明 &lt;code>Hugo + Github Pages&lt;/code>技术栈的核心配置。&lt;/p>
&lt;/blockquote>
&lt;p>以你喜欢的方式打开&lt;code>~/hello-hugo/config.toml&lt;/code>（也可能是其他后缀的配置文件，遵循对应的语法规则既可）并将其中的内容作如下更新：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">baseurl&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;https://yourname.github.io/hello-hugo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">publishDir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;docs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>全局变量 &lt;code>publishDir&lt;/code> 指明 hugo 的编译输出目录，其路径默认在站点根目录下(&lt;code>~/hello-hugo/&lt;/code>)，hugo 以此为根生成的静态站点。&lt;/p>
&lt;p>我们需要将 publishDir 与 Github Pages 的 folder 对应， folder 是 Github Pages 的渲染根目录。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>注意&lt;/strong>：请替换这里的&lt;code>yourname&lt;/code>为你的 &lt;code>Github UserName&lt;/code>，此处我们还没有拉取任何的主题，不需要跟着其他教程设置变量&lt;code>theme&lt;/code>。&lt;/li>
&lt;li>&lt;strong>注意&lt;/strong>：本博客选用 &lt;code>folder = “/docs”&lt;/code> 策略，需要添加 &lt;code>publishDir = &amp;quot;docs&amp;quot;&lt;/code> ，反之则不需要添加此行代码。值得一提的是，Github Pages 的执行根只有&lt;code>/(root)&lt;/code> 和&lt;code>/docs&lt;/code>两个选项，也即此处的 publishDir 要么不写(以&lt;code>./public&lt;/code>为项目根)，要么只能写 docs。&lt;/li>
&lt;/ul>
&lt;h4 id="remote-origin">Remote Origin&lt;/h4>
&lt;blockquote>
&lt;p>此阶段通过Git命令将 Hugo（本地文件） 与 Github Pages （远程仓库）组织结构对接。&lt;/p>
&lt;/blockquote>
&lt;p>还记得我们刚创建的 Repository 吗? 它的仓库链接是 &lt;code>https://github.com/yourname/hello-hugo.git&lt;/code>，同样，你需要更换此处的&lt;code>yourname&lt;/code>。&lt;/p>
&lt;p>按序执行如下指令，实现上下文对接两个强大的技术栈！&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>初始化 Git 环境&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initialized empty Git repository in E:/_GithubProjects/myProfile/hello-hugo/.git/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>链接远程仓库&lt;/strong>&lt;/p>
&lt;p>若您初次使用bash-git，需要进行身份验证。此处没有返回值说明操作成功。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git remote add origin https://github.com/qin2dim/hello-hugo.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>创建主分支&lt;/strong>&lt;/p>
&lt;p>因为此demo创建时不勾选初始化，默认情况下是没有分支的，需要手动创建。通过如下指令创建分支&lt;code>main&lt;/code>，并将其设为默认分支。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git branch -M main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>标注更改内容并创建 commit 缓存&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;committing hugo template&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>master &lt;span class="o">(&lt;/span>root-commit&lt;span class="o">)&lt;/span> 4e0cab8&lt;span class="o">]&lt;/span> committing hugo template
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">2&lt;/span> files changed, &lt;span class="m">9&lt;/span> insertions&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> archetypes/default.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> config.toml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>将标注信息推送至远程仓库&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -u origin main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enumerating objects: 5, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counting objects: 100% &lt;span class="o">(&lt;/span>5/5&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Delta compression using up to &lt;span class="m">16&lt;/span> threads
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Compressing objects: 100% &lt;span class="o">(&lt;/span>4/4&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Writing objects: 100% &lt;span class="o">(&lt;/span>5/5&lt;span class="o">)&lt;/span>, &lt;span class="m">483&lt;/span> bytes &lt;span class="p">|&lt;/span> 241.00 KiB/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total &lt;span class="m">5&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: This repository moved. Please use the new location:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: https://github.com/QIN2DIM/hello-hugo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To https://github.com/qin2dim/hello-hugo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * &lt;span class="o">[&lt;/span>new branch&lt;span class="o">]&lt;/span> main -&amp;gt; main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> &lt;span class="nb">set&lt;/span> up to track remote branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> from &lt;span class="s1">&amp;#39;origin&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>查看远程仓库&lt;/strong>&lt;/p>
&lt;p>若您按照如上所述步骤操作，此时打开你的远程仓库，能看到如下目录结构。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920015937151.png"
width="2043"
height="764"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920015937151_huf2c00499ff8ca77d289c654553d6f18b_145226_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920015937151_huf2c00499ff8ca77d289c654553d6f18b_145226_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bingo Operation"
class="gallery-image"
data-flex-grow="267"
data-flex-basis="641px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="select-folder">Select Folder&lt;/h3>
&lt;p>访问&lt;code>https://github.com/yourname/hello-hugo/settings/pages&lt;/code>指定你的运行根，记得保存设置。本博客指定&lt;code>/docs&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920021554554.png"
width="2043"
height="1171"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920021554554_hu716309a10cbb47c175328d4551dd22a2_189094_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920021554554_hu716309a10cbb47c175328d4551dd22a2_189094_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Select Folder"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>&lt;/p>
&lt;p>不要着急，到此为止您的站点还无法访问，若您兴致勃勃地启动&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，你会看到如下经典一幕。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920021940601.png"
width="960"
height="533"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920021940601_hu5d1d34b06f2d4ae39826ed72a8e4c2a5_42484_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920021940601_hu5d1d34b06f2d4ae39826ed72a8e4c2a5_42484_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Pages 404"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;h3 id="hugo-publishdir">Hugo PublishDir&lt;/h3>
&lt;p>回到我们的本地操作环境，是不是感觉少了点什么？是的，还记得我们一开始提到 Github Pages 的渲染首页么？&lt;code>index.html&lt;/code>去哪里了？既然不在首页，那也应该在&lt;code>./docs&lt;/code> 里呀（若不指定&lt;code>config.toml&lt;/code>中的变量&lt;code>publishDir&lt;/code>,则默认为&lt;code>./public&lt;/code>）&lt;/p>
&lt;p>是的，到此为止我们仅仅是创建了hugo的项目目录，但仍未进行hugo项目的初始化（首次构建）。&lt;/p>
&lt;p>执行如下命令编译你的Hugo：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Start building sites …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo v0.88.1-5BC54738+extended windows/amd64 &lt;span class="nv">BuildDate&lt;/span>&lt;span class="o">=&lt;/span>2021-09-04T09:39:19Z &lt;span class="nv">VendorInfo&lt;/span>&lt;span class="o">=&lt;/span>gohugoio
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;home&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;taxonomy&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;taxonomy&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> EN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------+-----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pages &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Paginator pages &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non-page files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Static files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Processed images &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aliases &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sitemaps &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cleaned &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total in &lt;span class="m">57&lt;/span> ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打印目录：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">archetypes/ content/ docs/ resources/ themes/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">config.toml data/ layouts/ static/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这不来了嘛，&lt;code>./docs&lt;/code>目录出现了，我们打印一下这个此目录的内容看看。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ls ./docs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">categories/ index.xml sitemap.xml tags/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>咦，怎么只有&lt;code>index.xml&lt;/code>，后缀不太对，不要着急，我们还没有配置任何Hugo主题。&lt;/p>
&lt;p>我们尝试将更改推送至远程仓库，看看情况对不对。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;hugo init&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>main 7301327&lt;span class="o">]&lt;/span> hugo init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">4&lt;/span> files changed, &lt;span class="m">41&lt;/span> insertions&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> docs/categories/index.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> docs/index.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> docs/sitemap.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> docs/tags/index.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -u origin main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enumerating objects: 10, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counting objects: 100% &lt;span class="o">(&lt;/span>10/10&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Delta compression using up to &lt;span class="m">16&lt;/span> threads
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Compressing objects: 100% &lt;span class="o">(&lt;/span>7/7&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Writing objects: 100% &lt;span class="o">(&lt;/span>9/9&lt;span class="o">)&lt;/span>, 1.12 KiB &lt;span class="p">|&lt;/span> 381.00 KiB/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total &lt;span class="m">9&lt;/span> &lt;span class="o">(&lt;/span>delta 2&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Resolving deltas: 100% &lt;span class="o">(&lt;/span>2/2&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: This repository moved. Please use the new location:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: https://github.com/QIN2DIM/hello-hugo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To https://github.com/qin2dim/hello-hugo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> b233f02..7301327 main -&amp;gt; main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> &lt;span class="nb">set&lt;/span> up to track remote branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> from &lt;span class="s1">&amp;#39;origin&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>访问你的项目仓库，发现高贵的&lt;code>./docs&lt;/code>文件出现了！&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920023448448.png"
width="2063"
height="588"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920023448448_huc92538f6d9744f936093acf9d109a515_111998_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920023448448_huc92538f6d9744f936093acf9d109a515_111998_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20210920023448448"
class="gallery-image"
data-flex-grow="350"
data-flex-basis="842px"
>&lt;/p>
&lt;p>访问你的站点网址&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，你会发现这里不再404，渲染出来的是XML文档信息。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920023604807.png"
width="1353"
height="361"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920023604807_huf40ff1284a76b277aba37277a86ba617_73690_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920023604807_huf40ff1284a76b277aba37277a86ba617_73690_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20210920023604807"
class="gallery-image"
data-flex-grow="374"
data-flex-basis="899px"
>&lt;/p>
&lt;p>至此，你的 &lt;code>Hugo + Github Pages&lt;/code> 技术栈已经构建完毕，接下来我们要为站点配置主题，也是注入灵魂的部分。本篇博客选用的演示主题为&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a>。&lt;/p>
&lt;h2 id="match-theme">Match theme&lt;/h2>
&lt;p>此阶段以 &lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a> 为demo说明如何将站点可视模块渲染出来，也是整个构建过程最关键的步骤之一。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>拉取主题文件&lt;/strong>&lt;/p>
&lt;p>为了方便使用Git来管理Hugo站点的源文件，我们需要将主题添加为 Submodule：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行日志如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cloning into &lt;span class="s1">&amp;#39;E:/_GithubProjects/myProfile/hello-hugo/themes/hugo-theme-stack&amp;#39;&lt;/span>...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Enumerating objects: 3085, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Counting objects: 100% &lt;span class="o">(&lt;/span>1000/1000&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Compressing objects: 100% &lt;span class="o">(&lt;/span>405/405&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Total &lt;span class="m">3085&lt;/span> &lt;span class="o">(&lt;/span>delta 782&lt;span class="o">)&lt;/span>, reused &lt;span class="m">667&lt;/span> &lt;span class="o">(&lt;/span>delta 587&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">2085&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Receiving objects: 100% &lt;span class="o">(&lt;/span>3085/3085&lt;span class="o">)&lt;/span>, 836.78 KiB &lt;span class="p">|&lt;/span> 3.17 MiB/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Resolving deltas: 100% &lt;span class="o">(&lt;/span>1944/1944&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果是第一次使用本主题，建议把 &lt;code>exampleSite&lt;/code> 文件夹中的 &lt;code>config.yaml&lt;/code> 和主题目录下的 &lt;code>assets&lt;/code> 复制到站点目录下。前者是 Hugo 站点的配置文件，已经写入了主题的可配置字段。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp ./themes/hugo-theme-stack/exampleSite/config.yaml ./config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp -a ./themes/hugo-theme-stack/assets ./assets
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>注意&lt;/strong>：当前版本中，Stack使用&lt;code>.yaml&lt;/code>配置文件，为了预防不必要的冲突，我们选择将构建 Hugo 时初始化的&lt;code>config.toml&lt;/code>移除。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rm ./config.toml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>配置主题&lt;/strong>&lt;/p>
&lt;p>以你喜欢的方式打开位于站点根目录下的&lt;code>config.yaml&lt;/code>文件，该文件用于配置Stack主题站点的各项参数。详细参数的解释请参考 &lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a> ，此处仅介绍关键配置。&lt;/p>
&lt;p>如上文介绍的那样，这里至少要配置两个参数，既&lt;code>baseURL&lt;/code>以及&lt;code>publishDir&lt;/code>。安如下提示所示，修改变量&lt;code>baseURL&lt;/code>并添加变量&lt;code>publishDir&lt;/code>声明。修改完毕记得保存。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">baseurl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://yourname.github.io/hello-hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">publishDir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处同样需要注意替换&lt;code>yourname&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>注入魔法&lt;/strong>&lt;/p>
&lt;p>执行&lt;code>hugo&lt;/code>更新编译状态，然后将更新信息推送至远程仓库，然后访问你的项目仓库，查看推送结果。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;introduce hugo-theme-stack&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920032205977.png"
width="2048"
height="893"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920032205977_hu4935d34d8b4e15fd2d5ddcd18dcfde57_177528_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920032205977_hu4935d34d8b4e15fd2d5ddcd18dcfde57_177528_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bingo Ace-Agent"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="550px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;p>访问&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，查看您部署的站点。您也可以预览作者按照如上步骤快速搭建的&lt;a class="link" href="https://qin2dim.github.io/hello-hugo" target="_blank" rel="noopener"
>Demo Site&lt;/a>。&lt;/p>
&lt;p>可能会有的小伙伴觉得本篇博客的搭建过程比较啰嗦，目前此技术栈的构建已有成熟的解决方案几乎能在任何操作系统上实现&lt;code>hugo + github pages&lt;/code>自动化部署。其实嘛- -作者认为“教程”是分享给其他人看的，需要拆分工作流，这样能让读者明确自己所在的位置，出了问题容易定位；若使用“一键脚本”，新手读者很难明晰其中的原理，很可能于后续的站点维护更新中举步维艰。&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>本篇博客详细阐述了如何在 Windows 平台上通过简单指令凭借&lt;code>Hugo + Github Pages&lt;/code>技术栈快速搭建个人站点，并提供了Demo Site。作者后续会更新更多关于此技术栈的其他内容，帮助您美化，管理、升级个人站点。&lt;/p>
&lt;hr>
&lt;p>如下为示例站点的目录结构，作者将以Blog写作为例总结此技术栈的实现流程，请注意，如下所有指令操作若无特殊说明，均默认在 hello-hugo 目录下执行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">hello-hugo
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── archetypes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── assets
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── content
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── data
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── docs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── layouts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── resources
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── static
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> └── themes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>关于站点根目录下各个文件夹(work field)的详细介绍请阅读官方文档&lt;a class="link" href="https://gohugo.io/getting-started/directory-structure/" target="_blank" rel="noopener"
>Directory Structure | Hugo (gohugo.io)&lt;/a>，此处仅在介绍工作流时涉及几个关键的文件夹。&lt;/p>
&lt;p>关于此技术栈的工作流总结如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>创建Blog&lt;/strong>&lt;/p>
&lt;p>在站点根目录&lt;code>hello-hugo&lt;/code>下新建&amp;quot;blog&amp;quot;，如&lt;code>hugo new post/blog.md&lt;/code>，默认创建在&lt;code>~/content/post/blog.md&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new post/blog.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打开这个 Markdown文件，可以看见头部声名中&lt;code>draft: true&lt;/code>默认为草稿模式（不同主题规则不同），需要置&lt;code>draft: false&lt;/code>，该篇内容才会被渲染出来，否则会被过滤。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920041943845.png"
width="473"
height="132"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920041943845_huf76ddedfe236afcd9bb66aa0b6357368_9675_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920041943845_huf76ddedfe236afcd9bb66aa0b6357368_9675_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="草稿模式"
class="gallery-image"
data-flex-grow="358"
data-flex-basis="860px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>启动本地&lt;code>hugo&lt;/code>服务器&lt;/strong>&lt;/p>
&lt;p>在站点根目录&lt;code>hello-hugo&lt;/code>下创建本地服务器&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>启动后根据打印日志查看入口，如&lt;code>http://localhost:8745/hello-hugo/ &lt;/code>，端口号不一定与此相同，默认是1313，若有冲突则会随机更换。&lt;/p>
&lt;p>这里的文档都是热加载编译，我们对项目文件的更改将直接同步到本地服务上，如&lt;strong>Blog的书写&lt;/strong>，&lt;strong>配置文件的改动&lt;/strong>以及&lt;strong>目录文件的调整&lt;/strong>等等。于是，我们编写的内容可以实时提现在站点上，方便修改调试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>缓存更新&lt;/strong>&lt;/p>
&lt;p>当你的工作结束后，停止&lt;code>local hugo-server&lt;/code>进程。你的工作进度会被自动编译到&lt;code>publishDir&lt;/code>变量指向的文件夹中（如本例的&lt;code>./docs&lt;/code>）。当然你也可以在工作结束后手动更新缓存。也即你的每一个对 hugo 的更改，如果你想体现在Github Pages 中,一定不要忘了在 Push 之前更新一下缓存。&lt;/p>
&lt;p>后续文章中，作者将介绍如何使用&lt;code>Github Actions&lt;/code>在你 Push 后自动化更新&lt;code>publishDir&lt;/code>下的文件，无需繁再 Push 前手动更新缓存，进一步偷懒。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo &lt;span class="o">(&lt;/span>main&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Start building sites …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo v0.88.1-5BC54738+extended windows/amd64 &lt;span class="nv">BuildDate&lt;/span>&lt;span class="o">=&lt;/span>2021-09-04T09:39:19Z &lt;span class="nv">VendorInfo&lt;/span>&lt;span class="o">=&lt;/span>gohugoio
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 04:04:53 Search page not found. Create a page with layout: search.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 04:04:53 Archives page not found. Create a page with layout: archives.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> EN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------+-----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pages &lt;span class="p">|&lt;/span> &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Paginator pages &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non-page files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Static files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Processed images &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aliases &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sitemaps &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cleaned &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total in &lt;span class="m">183&lt;/span> ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>资源推送&lt;/strong>&lt;/p>
&lt;p>这里推荐使用 &lt;a class="link" href="https://desktop.github.com/" target="_blank" rel="noopener"
>Github Desktop&lt;/a> 推送仓库更新。自动扫描变更，一件推送，相比于每次更新都要手敲git代码方便很多。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920040811507.png"
width="2101"
height="1009"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920040811507_hu0511d169e31c7bfedfa24dd053c8f944_138470_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920040811507_hu0511d169e31c7bfedfa24dd053c8f944_138470_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Desktop 推送资源"
class="gallery-image"
data-flex-grow="208"
data-flex-basis="499px"
>&lt;/p>
&lt;p>若您缺少可靠的解决方案,那只能老实敲代码了:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;description of this change&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>查看更新&lt;/strong>&lt;/p>
&lt;p>访问站点，查看推送结果。Github Pages 集成需要一点时间，如果你没能在推送后立即看到“改变”也不要慌，稍微等一会刷新一下既可。&lt;/p>
&lt;p>同样，若你在本地调改动资源并 auto-rebuild 后，体现在站点上的内容并没有立即改变，可以先&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>C&lt;/kbd>停止进程，r然后执行下面的命令回收垃圾，并重新部署既可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo --gc &lt;span class="c1"># 垃圾回收&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo server &lt;span class="c1"># 重新启动本地服务&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>The world’s fastest framework for building websites | Hugo (gohugo.io)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/" target="_blank" rel="noopener"
>介绍 | Hugo 主题 Stack (jimmycai.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 YOLOv5 』死神VS火影 | 2D目标检测</title><link>https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/</link><pubDate>Thu, 02 Sep 2021 23:11:00 +0800</pubDate><guid>https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/</guid><description>&lt;img src="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/Jlog7weRvmDTfhr.jpg" alt="Featured image of post 『 YOLOv5 』死神VS火影 | 2D目标检测" />&lt;blockquote>
&lt;p>2D-object-detection-Bleach-vs-Naruto&lt;/p>
&lt;/blockquote>
&lt;p>《死神VS火影》| 试用 YOLOv5 完整体验自建数据集，训练模型，参数调优，最后实现 2D 目标检测的全过程。&lt;/p>
&lt;h2 id="demo">Demo&lt;/h2>
&lt;p>&lt;img src="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/Jlog7weRvmDTfhr.jpg"
width="1280"
height="732"
srcset="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/Jlog7weRvmDTfhr_huccaad804e4b49c112e1e23c8189f5184_230476_480x0_resize_q75_box.jpg 480w, https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/Jlog7weRvmDTfhr_huccaad804e4b49c112e1e23c8189f5184_230476_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="419px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.wolai.com/pHSh6Uuc9x1wwC2GSiLtyf?theme=light" target="_blank" rel="noopener"
> &lt;strong>🚀See more demo&lt;/strong> &lt;/a>&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>NIIT 暑期实习课后作业。&lt;/p>
&lt;h2 id="install">Install&lt;/h2>
&lt;h3 id="download-project">Download Project&lt;/h3>
&lt;p>Clone 项目，使用 Pycharm 启动工程 &lt;a class="link" href="https://github.com/QIN2DIM/2D-object-detection-Bleach-vs-Naruto" target="_blank" rel="noopener"
>🚀 See Github Homepage&lt;/a>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/5b467eefa083c38d4d5f5785b4cfc250.png"
width="1728"
height="684"
srcset="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/5b467eefa083c38d4d5f5785b4cfc250_hub25e5356a7b0a5d5e8e7e008f2d30798_198584_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/5b467eefa083c38d4d5f5785b4cfc250_hub25e5356a7b0a5d5e8e7e008f2d30798_198584_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="252"
data-flex-basis="606px"
>&lt;/p>
&lt;h3 id="download-game-optional">Download Game [optional]&lt;/h3>
&lt;p>获取《死神vs火影 3.3》FLASH 游戏本体&lt;/p>
&lt;p>链接：https://pan.baidu.com/s/1gjYlIzwjsYKDt8-cq1AqhA&lt;/p>
&lt;p>提取码：5dyt&lt;/p>
&lt;h3 id="download-bvn-network-optional">Download BVN-Network [optional]&lt;/h3>
&lt;p>获取欠优化的序列模型，可直接用于预测任务&lt;/p>
&lt;p>链接：https://pan.baidu.com/s/12Re3w9V56z-J-0LGCPK_IQ&lt;/p>
&lt;p>提取码：digz&lt;/p>
&lt;h3 id="download-database-optional">Download Database [optional]&lt;/h3>
&lt;p>获取作者手动标注的数据集（未经数据增强）；包含录制的游戏视频及分割成帧的游戏图片，视频分割成帧的&lt;code>.py&lt;/code> 脚本，官方贴图（人物模型），images 图片数据集及其对应的 labels 标注集（使用 &lt;a class="link" href="https://blog.csdn.net/To_ChaRiver/article/details/119619515?spm=1001.2014.3001.5501" target="_blank" rel="noopener"
>make-sense&lt;/a> 导出）&lt;/p>
&lt;p>链接：https://pan.baidu.com/s/1o64LCXUk9LR85ipCR9-cSw&lt;/p>
&lt;p>提取码：7qqa&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>Clone 项目后，请标记 &lt;code>database&lt;/code>、&lt;code>game&lt;/code> 目录为“排除”，&lt;code>network&lt;/code> 为“运行根”。&lt;/p>
&lt;p>以 &lt;code>./network&lt;/code> 为运行根启动 &lt;code>Terminal&lt;/code>，执行 &lt;code>detect.py&lt;/code> 进行预测：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/2D-object-detection-Bleach-vs-Naruto/network
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>python detect.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行结果缓存到目录 &lt;code>./network/runs/detect/exp[number]&lt;/code> 。&lt;/p>
&lt;h2 id="project-tree">Project Tree&lt;/h2>
&lt;p>如下为本项目的工程结构。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">object&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">detection&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Bleach&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">vs&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Naruto&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">├──&lt;/span> &lt;span class="n">database&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">captures&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">images&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">labels&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">└──&lt;/span> &lt;span class="n">role_map&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">├──&lt;/span> &lt;span class="n">game&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">└──&lt;/span> &lt;span class="n">死神vs火影3&lt;/span>&lt;span class="mf">.3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">├──&lt;/span> &lt;span class="n">LICENSE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">├──&lt;/span> &lt;span class="n">network&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">detect&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">export&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">hubconf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">LICENSE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">models&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">requirements&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">runs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">train&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">utils&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">└──&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">└──&lt;/span> &lt;span class="n">README&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">md&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>./database&lt;/code> 存放训练数据&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>./database/captures&lt;/code>：游戏录屏文件的存放目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./database/images&lt;/code>：游戏录屏文件切割成帧后的图片存放目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./database/labels&lt;/code>：图片帧的标注集（与images一一对应）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./database/role_map&lt;/code>：预存放的游戏人物贴图，包含角色一户（卍解）以及漩涡鸣人&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./game&lt;/code> 存放《死神vs火影3.3》FLASH 游戏本体&lt;/p>
&lt;p>Windows 客户端直接运行&lt;code>./game/死神vs火影3.3/launch.exe&lt;/code> 进入游戏。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network&lt;/code> 目录仿制 &lt;code>YOLOv5&lt;/code> 编排&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>./network/data&lt;/code> 存放需要执行预测任务的素材（如：图片、视频）&lt;/p>
&lt;ul>
&lt;li>&lt;code>./network/data/images&lt;/code>：需要执行预测任务的图片存放目录&lt;/li>
&lt;li>&lt;code>./network/data/video&lt;/code>：需要执行预测任务的视频存放目录&lt;/li>
&lt;li>&lt;code>./network/data/BleachVsNaruto.yaml&lt;/code>：引导模型训练所用数据集路径的配置文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/models&lt;/code> 存放yolo基准模型参数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/utils&lt;/code> 存放构建网络的必要工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/runs&lt;/code> 存放网络运行缓存&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>./network/runs/detect&lt;/code>：由 &lt;code>detect.py&lt;/code> 预测任务产生的输出，与所选择的 &lt;code>./network/data/&lt;/code> 资源一一对应&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/runs/train&lt;/code>：由 &lt;code>train.py&lt;/code> 训练任务产生的输出，存放导出的模型、网络收敛图以及各种评价指标图&lt;/p>
&lt;p>&lt;code>./network/runs/train/bvn-base/weights/&lt;/code> 中存放了欠优化的序列模型，可直接用于预测任务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/detect.py&lt;/code> 预测任务的启动接口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/train.py&lt;/code> 训练任务的启动接口&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>『 Python 』Python Selenium 破解极验(GeeTest)滑动验证</title><link>https://blog.echosec.top/p/python-geetest-breaker/</link><pubDate>Wed, 18 Aug 2021 21:53:50 +0800</pubDate><guid>https://blog.echosec.top/p/python-geetest-breaker/</guid><description>&lt;img src="https://blog.echosec.top/p/python-geetest-breaker/typewriter.jpg" alt="Featured image of post 『 Python 』Python Selenium 破解极验(GeeTest)滑动验证" />&lt;blockquote>
&lt;p>TOS&lt;/p>
&lt;ol>
&lt;li>本项目仅供交流学习，有疑问请在 &lt;a class="link" href="https://github.com/QIN2DIM/armour-geetest/issues" target="_blank" rel="noopener"
>Issues&lt;/a> 中提出；&lt;/li>
&lt;li>本项目不提供面向任何商业需求的版本迭代；&lt;/li>
&lt;li>关于本项目源码的使用请遵循 Apache-2.0 License；&lt;/li>
&lt;li>禁止任何人使用本项目及其分支提供任何形式的收费代理服务。&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h2 id="项目简介-">项目简介 🐱‍🏍&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/QIN2DIM/armour-geetest" target="_blank" rel="noopener"
>ArmourGeeTest&lt;/a> 是一种针对 &lt;a class="link" href="https://www.geetest.com/" target="_blank" rel="noopener"
>GeeTest 极验&lt;/a> 滑动验证的超高通过率解决方案。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>引入&lt;strong>姿态收敛&lt;/strong>以及&lt;strong>惯性&lt;/strong>等初中物理概念解决二维空间中的像素对齐问题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当这个难倒了大批爬虫玩家的问题被抽象成&lt;strong>缺口识别&lt;/strong>以及&lt;strong>像素对齐&lt;/strong>两个指标时使用本方案进行百次实验：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>当&lt;strong>缺口识别率&lt;/strong>为 100% 时，&lt;code>gt3&lt;/code>通过率为 92%。&lt;/p>
&lt;p>失败案例中超半数由收敛超时引发，剩下的被怪兽吃掉了；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当&lt;strong>缺口识别率&lt;/strong>为 100% 时，&lt;code>gt2&lt;/code>通过率 100%。&lt;/p>
&lt;p>仅在缺口被遮挡时失败，但此时更倾向认为&lt;strong>缺口识别率&lt;/strong> &amp;lt;100%；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>gt3&lt;/code> 算子收敛过程小概率出现“震荡”现象，此时（为保证通过率）任务耗时将大幅增长，开发者可通过优（手）化（调）本项目的模型超参数，达成&lt;strong>低耗时&lt;/strong> + &lt;strong>高通过率&lt;/strong>的性能指标。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="快速上手-">快速上手 🛴&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>【方案一】用户&lt;/strong>&lt;/p>
&lt;p>通过观看 &lt;a class="link" href="https://www.wolai.com/pbhA77godFuXjofA1QC7JG?theme=light" target="_blank" rel="noopener"
>ArmourGeeTest Demo &lt;/a>了解本项目的工作范围。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>【方案二】开发者&lt;/strong>&lt;/p>
&lt;p>Clone项目，根据 &lt;a class="link" href="https://github.com/QIN2DIM/sspanel-geetest/blob/main/docs/subs/%e6%8a%80%e6%9c%af%e6%96%87%e6%a1%a3.md" target="_blank" rel="noopener"
>技术文档 &lt;/a>合理配置 &lt;code>config.py&lt;/code> 后编译项目。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="用法说明-">用法说明 🤷‍♂️&lt;/h2>
&lt;blockquote>
&lt;p>更多详细信息请访问本项目 &lt;a class="link" href="https://github.com/QIN2DIM/armour-geetest" target="_blank" rel="noopener"
>Github仓库&lt;/a>。&lt;/p>
&lt;/blockquote></description></item><item><title>『 Python 』Subprocess.Popen 监控控制台输出</title><link>https://blog.echosec.top/p/python-subprocess-popen/</link><pubDate>Sun, 15 Aug 2021 23:10:59 +0800</pubDate><guid>https://blog.echosec.top/p/python-subprocess-popen/</guid><description>&lt;img src="https://blog.echosec.top/p/python-subprocess-popen/book1.jpg" alt="Featured image of post 『 Python 』Subprocess.Popen 监控控制台输出" />&lt;h2 id="问题描述">问题描述&lt;/h2>
&lt;ol>
&lt;li>在 Python 代码中编译可执行文件，需要监控执行过程及运行结果，当前场景等效为捕获控制台的特征信息的“打印情况”；&lt;/li>
&lt;li>编译程序独占进程，且存在 &lt;code>Terminal进度条&lt;/code> 等频繁刷新的需要监控的特征信息；&lt;/li>
&lt;li>需要捕获的特征信息存在简体中文，需要做编码转换；&lt;/li>
&lt;/ol>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>如下所示为本例参考代码。使用 Python3 内置模块 &lt;code>subprocess.Popen&lt;/code> 建立 channel 。设定参数 &lt;code>encoding='utf8'&lt;/code>，转码简体中文。设定 &lt;code>universal_newlines=True&lt;/code> 以及 &lt;code>bufsize=1&lt;/code> 建立缓冲区，以便捕获频繁刷新的进度条等特征信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">仅用作demo演示，请勿在真实IPC场景下直接cv代码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">sys: Windows
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">env: Python 3.7.9
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">_listener&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">global&lt;/span> &lt;span class="n">title&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 如果您还未安装you-get脚手架 请先执行 pip install you-get 或 pip3 install you-get&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 尝试直接在 Terminal 中运行 `you-get [url]` 查看区别&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># you-get 将嗅探目标链接下的影视资源对象，并保存至当前目录下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cmd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;you-get https://www.bilibili.com/video/BV1Yv41147QK&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Popen&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cmd&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stdin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PIPE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stdout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PIPE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stderr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">STDOUT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">universal_newlines&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bufsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Popen&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">poll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readline&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 仅做演示，首次下载时捕获视频文件名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">title&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startswith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Downloading&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_listener&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 仅作演示，自动打开下载好的视频&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startfile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="ne">FileNotFoundError&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ne">FileExistsError&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>[1] &lt;a class="link" href="https://docs.python.org/3.7/library/subprocess.html#popen-constructor" target="_blank" rel="noopener"
>subprocess — Subprocess management — Python 3.7.11 documentation&lt;/a>&lt;/p></description></item><item><title>『 YOLOv5 』Make Sense</title><link>https://blog.echosec.top/p/yolov5-make-sense/</link><pubDate>Wed, 11 Aug 2021 23:54:55 +0800</pubDate><guid>https://blog.echosec.top/p/yolov5-make-sense/</guid><description>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/4ef6638.png" alt="Featured image of post 『 YOLOv5 』Make Sense" />&lt;blockquote>
&lt;p>Make Sense | Free to use online tool for labelling photos.&lt;/p>
&lt;/blockquote>
&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>本文简要介绍使用 make-sense 建立 &lt;code>YOLOv5 Object Detection&lt;/code> 图像标签的完整步骤并提及使用过程中的注意事项。&lt;/p>
&lt;h2 id="平台简介">平台简介&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/SkalskiP/make-sense" target="_blank" rel="noopener"
>make-sense&lt;/a> 是一个被 &lt;a class="link" href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data" target="_blank" rel="noopener"
>YOLOv5官方&lt;/a> 推荐使用的图像标注工具。&lt;/p>
&lt;p>相比于其他工具，make-sense 的上手难度非常低，仅需数分钟，玩家便能熟练掌握工作台中的功能选项，快速地进入工作状态；此外，由于 make-sense 是一款 web 应用，各个操作系统的玩家可打破次元壁实现工作协同。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="sneak-peek-流程预览">Sneak Peek 流程预览&lt;/h3>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/08f77172e306461e92b0cb75bd1e929d.gif"
width="1754"
height="891"
srcset="https://blog.echosec.top/p/yolov5-make-sense/08f77172e306461e92b0cb75bd1e929d_hu5e8c533ededd7ddfd9def97f149d6b1c_4814462_480x0_resize_box_1.gif 480w, https://blog.echosec.top/p/yolov5-make-sense/08f77172e306461e92b0cb75bd1e929d_hu5e8c533ededd7ddfd9def97f149d6b1c_4814462_1024x0_resize_box_1.gif 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="196"
data-flex-basis="472px"
>&lt;/p>
&lt;h3 id="drop-images-缓存需要标注的图像数据集">Drop Images 缓存需要标注的图像数据集&lt;/h3>
&lt;p>进入 &lt;a class="link" href="https://www.makesense.ai/" target="_blank" rel="noopener"
>make sense&lt;/a> 站点主页，点击右下角 &lt;code>Get Started&lt;/code> 进入任务。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvX0NoYVJpdmVy,size_16,color_FFFFFF,t_70.png"
width="1342"
height="790"
srcset="https://blog.echosec.top/p/yolov5-make-sense/_hu9b50f8f8c9a09018e35f83b943878765_693622_7737bebfb8700f3918bfbf13e583e090.png 480w, https://blog.echosec.top/p/yolov5-make-sense/_hu9b50f8f8c9a09018e35f83b943878765_693622_d323be20d7b38dc389fcd4a5fd844295.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="169"
data-flex-basis="407px"
>&lt;/p>
&lt;p>拖入或上传需要标注的图像数据集。此处不支持文件夹套娃，请将所有需要标注的图像放在同一文件夹下，需要做避免重名的处理；或者您也可以多次上传位于不同文件夹下的图像。&lt;/p>
&lt;p>值得一提的是，标注任务开时候您也可以再补充缓存需要标注的图像，但没有可靠的方式“删除”已缓存的图像。若您在标注过程中发现上传了脏数据，只需不对此图片进行任何标注，导出时就不会生成对该图像的标注数据（文件）。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/a059d15d9eb8dee3bfdc1d96cf686aa6-16331692661806.png"
width="651"
height="470"
srcset="https://blog.echosec.top/p/yolov5-make-sense/a059d15d9eb8dee3bfdc1d96cf686aa6-16331692661806_hu8da9d8fde3a89ae6c0556d8da4f79a2e_111058_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/a059d15d9eb8dee3bfdc1d96cf686aa6-16331692661806_hu8da9d8fde3a89ae6c0556d8da4f79a2e_111058_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="138"
data-flex-basis="332px"
>&lt;/p>
&lt;h3 id="object-detection-进入目标检测标注模式">Object Detection 进入目标检测标注模式&lt;/h3>
&lt;p>上传图像后，选择进入目标检测的标注模式。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/617764cd22629333edd999abb6ecf1e5.png"
width="622"
height="464"
srcset="https://blog.echosec.top/p/yolov5-make-sense/617764cd22629333edd999abb6ecf1e5_hu8c6aeedf516d7601a72e8fe040048ab2_103691_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/617764cd22629333edd999abb6ecf1e5_hu8c6aeedf516d7601a72e8fe040048ab2_103691_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="134"
data-flex-basis="321px"
>&lt;/p>
&lt;h3 id="create-labels-创建标签">Create Labels 创建标签&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>导入文件自动生成标签（Load labels from file ）一行一个；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>手动创建标签，点击左边栏的“＋”符号；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>创建成功后点击 [Start project] 开始标注。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/R4QFCh7qcN2V3Et.png"
width="1877"
height="1287"
srcset="https://blog.echosec.top/p/yolov5-make-sense/R4QFCh7qcN2V3Et_hubbf57ae39ed7b77f5cba1bb001c3a824_133405_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/R4QFCh7qcN2V3Et_hubbf57ae39ed7b77f5cba1bb001c3a824_133405_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="350px"
>&lt;/p>
&lt;p>此处为了方便演示，我们选择手动创建标签。&lt;/p>
&lt;div align="center">&lt;img src="EAeOYndMx4o1Nvy.png" alt="image-20210811220853094" style="zoom: 50%;" />&lt;/div>
&lt;p>同样，我们仍可在工作过程中随时调整（&lt;kbd>Actions&lt;/kbd> | &lt;kbd>Edit Labels&lt;/kbd>）标签的&lt;code>规模&lt;/code>及&lt;code>顺序&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/9789a712bcb28ad3d50375d10ecb6afb.png"
width="387"
height="366"
srcset="https://blog.echosec.top/p/yolov5-make-sense/9789a712bcb28ad3d50375d10ecb6afb_hu4e8b75c35f39e24f2d9d3c8a44dfa048_23921_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/9789a712bcb28ad3d50375d10ecb6afb_hu4e8b75c35f39e24f2d9d3c8a44dfa048_23921_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="105"
data-flex-basis="253px"
>&lt;/p>
&lt;h3 id="work-开始标注">Work 开始标注&lt;/h3>
&lt;p>Make Sense 支持矩形 (Rect)、点 (Point)、线 (Line)、多边形 (Polyygon) 多种标注模式，点选相应的模式开始“抠图”既可。&lt;/p>
&lt;p>工作台上有放大、缩小、还原比例、拖动、删除标签等操作工具，不过多介绍，玩几下就懂了。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/9a33ab4b094ba09ca86a25ead78945ce.png"
width="1878"
height="1288"
srcset="https://blog.echosec.top/p/yolov5-make-sense/9a33ab4b094ba09ca86a25ead78945ce_hu08fc7987495858cf550b73d0b5ce94f4_462039_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/9a33ab4b094ba09ca86a25ead78945ce_hu08fc7987495858cf550b73d0b5ce94f4_462039_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="349px"
>&lt;/p>
&lt;h3 id="export-导出标注">Export 导出标注&lt;/h3>
&lt;p>点选 &lt;kbd>Actions&lt;/kbd> | &lt;kbd>Export Annotations&lt;/kbd> 导出标注。&lt;/p>
&lt;div align="center">&lt;img src="SIsn8miqA7zXbZW.png" alt="image-20210811222025070" style="zoom:50%;" />&lt;/div>
&lt;p>Export后会自动下载生成的压缩包文件。压缩包内是一一对应的标注集文件，与标注数据文件名与其对应的图像文件名一致。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/379019ee57844820a72bc2970b2736ed.png"
width="1456"
height="329"
srcset="https://blog.echosec.top/p/yolov5-make-sense/379019ee57844820a72bc2970b2736ed_hu1eb0ae680a9665f223504e18f0f00572_79024_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/379019ee57844820a72bc2970b2736ed_hu1eb0ae680a9665f223504e18f0f00572_79024_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="442"
data-flex-basis="1062px"
>&lt;/p>
&lt;h3 id="review-审查标注数据">Review 审查标注数据&lt;/h3>
&lt;p>由 &lt;a class="link" href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data" target="_blank" rel="noopener"
>YOLOv5作者对创建标签的有关介绍 &lt;/a>可知，图像标注文件有明确的格式要求（&lt;code>YOLO format&lt;/code>）,图像 （&lt;code>ImageObject&lt;/code>）对应的标注文件（&lt;code>LabelObject&lt;/code>）必须是 &lt;code>.txt&lt;/code> 格式文件，其内容必须以空格按序切割成如下成分：&lt;/p>
&lt;ul>
&lt;li>目标类型：第1列成分，以数字序号区分的标签；&lt;/li>
&lt;li>目标标识区域（以&lt;code>2D Object &lt;/code>为例）：4列连续的成分，依次为目标实体的中点 x 坐标（class x_center），中点 y 坐标（class x_center），宽度（width）以及高度 （height）；&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/7862b814c7eb88586c58cc415aac0ee0.png"
width="1480"
height="920"
srcset="https://blog.echosec.top/p/yolov5-make-sense/7862b814c7eb88586c58cc415aac0ee0_huf929e521836f485071e453974af6cb89_248810_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/7862b814c7eb88586c58cc415aac0ee0_huf929e521836f485071e453974af6cb89_248810_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="386px"
>&lt;/p>
&lt;p>再来看看刚才标注的&lt;code>宵宫&lt;/code>目标数据。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">0&lt;/span> &lt;span class="mf">0.493783&lt;/span> &lt;span class="mf">0.509473&lt;/span> &lt;span class="mf">0.454707&lt;/span> &lt;span class="mf">0.969410&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如上所示，&lt;strong>第一列&lt;/strong>是标签&lt;code>宵宫&lt;/code>所在标签集合的序号，由于我们仅有一个标签，此处自然为0。值得一提的是，此处的序号是按照Make Sense中的标签&amp;quot;顺序&amp;quot;排列的，与 &lt;code>YOLOv5&lt;/code> train 数据集索引配置文件 (&lt;code>.yaml&lt;/code>) 中的 &lt;code>names&lt;/code> 变量的分类名 &lt;code>class names&lt;/code> 顺序无关，建议两者顺序保持一致。&lt;strong>后四列&lt;/strong>为作者框选的目标边界数据，我们可以大概这么理解，根据下图我们可知人物主体居中构图，2，3 列体现的趋于 0.5 的数据符合主观预估值；人物宽度约占画幅 X 区间的一半 (0.454707)，而高度却几乎占满整个画幅Y区间 (0.969410)。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/4ef6638.png"
width="1342"
height="790"
srcset="https://blog.echosec.top/p/yolov5-make-sense/4ef6638_hu9b50f8f8c9a09018e35f83b943878765_693622_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/4ef6638_hu9b50f8f8c9a09018e35f83b943878765_693622_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="169"
data-flex-basis="407px"
>&lt;/p>
&lt;h2 id="高级操作">高级操作&lt;/h2>
&lt;p>原本至此完整的标注集导出流程已完全结束，但是作者发现本项目竟然是开源的&amp;hellip;意味着感兴趣的同学可以通过 &lt;a class="link" href="https://github.com/SkalskiP/make-sense" target="_blank" rel="noopener"
>项目README&lt;/a> 中推荐的方案（Docker/npm）在自己熟悉的环境中部署此项目。&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;ul>
&lt;li>普通操作模式下，数据集缓存在内存里不会&amp;quot;上传&amp;quot;，这也解释了为何图像加载后我们能迅速投入工作。若使用 AI 标注功能，数据集可能被成批次地上传，而且此过程可能涉及与国外多服务器的通信，用时较长，且 AI 标注场景局限在日常生活的应用场景中，若场景不符则不推荐使用；&lt;/li>
&lt;li>因此，页面误操作关闭后，标注结果必然游离，所以标注工程量较大的任务时建议小批次缓存标注，或按时导出以保存本阶段的工作进度；&lt;/li>
&lt;/ul>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>[1] &lt;a class="link" href="https://www.dexerto.com/genshin-impact/genshin-impact-yoimiya-banner-leaks-5-star-pyro-character-release-date-1625360/" target="_blank" rel="noopener"
>Genshin Impact Yoimiya banner leaks: 5-star Pyro character release date - Dexerto&lt;/a>&lt;/p>
&lt;p>[2] &lt;a class="link" href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data" target="_blank" rel="noopener"
>Train Custom Data · ultralytics/yolov5 Wik&lt;/a>&lt;/p>
&lt;p>[3] &lt;a class="link" href="https://github.com/SkalskiP/make-sense" target="_blank" rel="noopener"
>SkalskiP/make-sense: Free to use online tool for labelling photos&lt;/a>&lt;/p></description></item><item><title>『 Tmux 』在脚本中运行 Tmux</title><link>https://blog.echosec.top/p/tmux-shell/</link><pubDate>Fri, 06 Aug 2021 01:44:51 +0800</pubDate><guid>https://blog.echosec.top/p/tmux-shell/</guid><description>&lt;img src="https://blog.echosec.top/p/tmux-shell/coffee-g2e.jpg" alt="Featured image of post 『 Tmux 』在脚本中运行 Tmux" />&lt;h2 id="问题描述">问题描述&lt;/h2>
&lt;p>在 shell 脚本中编写了含有 &lt;code>tmux&lt;/code> 的指令，希望规定的指令能在独立的某个会话中运行，防止特殊任务阻塞脚本的运行。然而在脚本执行!到“开启 tmux 窗口”时，后续指令并不会按照原意灌入指定的窗格，而是弥散到原面板或 tmux 窗口中。&lt;/p>
&lt;h2 id="解决思路">解决思路&lt;/h2>
&lt;h3 id="已验证的不可靠思路">已验证的不可靠思路&lt;/h3>
&lt;p>认为错误原因是窗口的创建“来不及加载”导致后续打算在该窗口中运行的指令乱飞，故使用 &lt;code>sleep&lt;/code> 穿插在代码中尝试解决问题。实际上，这种思路是不可靠的，因为运行在脚本中的tmux命令会在指令尾默认加上一条“分离指令 (detach)”，这会导致 tmux 无法理解紧接着执行的原生 sh 脚本指令 (&lt;code>no client found&lt;/code>)[3,4]。换言之，tmux 不知道后续的指令是否需要在当前的窗口中运行，包括上文说到的 &lt;code>sleep&lt;/code> 指令。&lt;/p>
&lt;h3 id="可靠的解决方案">可靠的解决方案&lt;/h3>
&lt;p>引用tmux中的&lt;code>send&lt;/code>参数按照规定的写法指定会话，指定窗口（窗格）执行指定的命令实现“指哪打哪”。参考代码如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Time : 2021/8/5 23:40&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Author : QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github : https://github.com/QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Description: Tmux 脚本编程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">systemctl_create_v2raycs&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 创建一个后台运行的名为v2raycs的session会话，其默认窗口名为system&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># [-s sessionName] [-n windowName] [-d daemon]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux new -s v2raycs -n system -d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 水平切割 v2raycs:system 使窗口分为上下屏（窗格），光标随splicer切换至下分屏&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 使用标识符指定后台运行的操作目标 [-t targetPane]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># os.system(f&amp;#34;tmux split-window -t &amp;#39;v2raycs:system&amp;#39;&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 向指定会话的指定窗格发出指令&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 使用标识符指定后台运行的操作目标 [-t targetPane]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux send -t &amp;#39;v2raycs:system&amp;#39; &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;cd /qinse/V2RaycSpider1325/;python main.py deploy&amp;#39; Enter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">systemctl_create_bot&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux new -s bot -n core -d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux new -s go-cqhttp -n core -d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux send -t &amp;#39;bot:core&amp;#39; &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;cd /qinse/cqbot/bbot;python bot.py&amp;#39; Enter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux send -t &amp;#39;go-cqhttp:core&amp;#39; &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;cd /qinse/cqbot/go-cqhttp;./go-cqhttp ./device.json&amp;#39; Enter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">systemctl_create_v2raycs&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">systemctl_create_bot&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>[1] &lt;a class="link" href="http://louiszhai.github.io/2017/09/30/tmux/" target="_blank" rel="noopener"
>Louis Tumux使用手册&lt;/a>&lt;/p>
&lt;p>[2] &lt;a class="link" href="https://www.kancloud.cn/kancloud/tmux" target="_blank" rel="noopener"
>Tmux: Productive Mouse-Free Development 中文版&lt;/a>&lt;/p>
&lt;p>[3] &lt;a class="link" href="https://github.com/tmux/tmux/wiki/FAQ#i-found-a-bug-in-tmux-what-do-i-do" target="_blank" rel="noopener"
>FAQ · tmux/tmux Wiki&lt;/a>&lt;/p>
&lt;p>[4] &lt;a class="link" href="https://stackoverflow.com/questions/31902929/how-to-write-a-shell-script-that-starts-tmux-session-and-then-runs-a-ruby-scrip" target="_blank" rel="noopener"
>bash - How to write a shell script that starts tmux session, and then runs a ruby script - Stack Overflow&lt;/a>&lt;/p></description></item><item><title>『 Python 』Passthrough is not supported, GL is swiftshader</title><link>https://blog.echosec.top/p/python-selenium-debug-20210725/</link><pubDate>Sun, 25 Jul 2021 22:14:38 +0800</pubDate><guid>https://blog.echosec.top/p/python-selenium-debug-20210725/</guid><description>&lt;img src="https://blog.echosec.top/p/python-selenium-debug-20210725/vojta.jpg" alt="Featured image of post 『 Python 』Passthrough is not supported, GL is swiftshader" />&lt;h2 id="错误信息">错误信息&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">Passthrough is not supported, GL is swiftshader.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>通过 &lt;code>ChromeOptions()&lt;/code> 配置 Selenium 启动参数进而实现 &lt;code>chromedriver&lt;/code> 在 Windows 环境中以“无头模式”运行时于控制台的输出信息的控制：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># True：chromedriver静默启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SILENCE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">set_spider_option&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 调整chromedriver的读取路径，若不指定则尝试从环境变量中查找&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chromedriver_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;chromedriver&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">chromedriver_path&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">chromedriver_path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 实例化Chrome可选参数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 静默启动 参数组策略&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">SILENCE&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;--headless&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;--disable-gpu&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;--disable-software-rasterizer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 其他推荐设置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;--log-level=3&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_experimental_option&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;excludeSwitches&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;enable-logging&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_experimental_option&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;excludeSwitches&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;enable-automation&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">executable_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">this_is_a_business&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">api&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">set_spider_option&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://www.baidu.com&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this_is_a_business&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>[1] &lt;a class="link" href="https://debugah.com/solved-python-selenium-chromedriver-error-passthrough-is-not-supported-gl-is-disabled-15549/" target="_blank" rel="noopener"
>[Solved] Python Selenium Chromedriver Error: (Passthrough is not supported, GL is disabled) | DebugAH&lt;/a>&lt;/p>
&lt;p>[2] &lt;a class="link" href="https://stackoverflow.com/questions/67501093/passthrough-is-not-supported-gl-is-disabled" target="_blank" rel="noopener"
>python - Passthrough is not supported, GL is disabled - Stack Overflow&lt;/a>&lt;/p></description></item><item><title>『 Python 』CampusDailyAutoSign 今日校园体温检测自动上报系统</title><link>https://blog.echosec.top/p/python-campusdailyautosign/</link><pubDate>Wed, 24 Feb 2021 19:27:24 +0800</pubDate><guid>https://blog.echosec.top/p/python-campusdailyautosign/</guid><description>&lt;img src="https://blog.echosec.top/p/python-campusdailyautosign/old-books.jpg" alt="Featured image of post 『 Python 』CampusDailyAutoSign 今日校园体温检测自动上报系统" />&lt;h2 id="项目简介-">项目简介 🐱‍🏍&lt;/h2>
&lt;blockquote>
&lt;ol>
&lt;li>本项目仅为 &lt;strong>海南大学&lt;/strong> 学子提供服务；&lt;/li>
&lt;li>本项目 &lt;strong>开源免费&lt;/strong> ，禁止任何人使用此项目及其分支提供任何形式的收费代理服务；&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-campusdailyautosign/MbkFBGQ3Ohj5X6p.png"
width="2186"
height="1162"
srcset="https://blog.echosec.top/p/python-campusdailyautosign/MbkFBGQ3Ohj5X6p_hub748e3b082325a324d341f92c38137fd_165290_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-campusdailyautosign/MbkFBGQ3Ohj5X6p_hub748e3b082325a324d341f92c38137fd_165290_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="188"
data-flex-basis="451px"
>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.yuque.com/docs/share/53c62de5-91bf-4f96-9330-fae53c6a4f0d?" title="程序流图1"
target="_blank" rel="noopener"
>程序流图 1&lt;/a> &lt;strong>||&lt;/strong> &lt;a class="link" href="https://www.yuque.com/docs/share/94dac928-a89c-47d3-9273-8bd049152b6e?" title="程序流图2"
target="_blank" rel="noopener"
>程序流图 2&lt;/a> &lt;strong>||&lt;/strong> &lt;a class="link" href="https://www.yuque.com/docs/share/b0634038-5ee5-4632-80c4-0564e7795489?" title="demo演示"
target="_blank" rel="noopener"
>demo 演示&lt;/a>&lt;/li>
&lt;li>本项目使用 &lt;a class="link" href="https://github.com/beiyuouo/hnu-temp-report-bot" target="_blank" rel="noopener"
>hnu-temp-report-bot&lt;/a> 跳板机实现人机交互，QQ 群内对 &lt;strong>bot(851722457)&lt;/strong> 使用&lt;code>关键字指令 &lt;/code>+ &lt;code>功能指令&lt;/code> 即可实现相关需求；&lt;/li>
&lt;/ul>
&lt;h2 id="快速上手-">快速上手 🛴&lt;/h2>
&lt;p>&lt;strong>【方案一】用户&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在群内拉入 QQ 机器人 &lt;strong>bot(851722457)&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据 &lt;a class="link" href="https://github.com/QIN2DIM/CampusDailyAutoSign/blob/main/docs/subdirectory/%e6%8a%80%e6%9c%af%e6%96%87%e6%a1%a3%28demo%29.md" title="技术文档"
target="_blank" rel="noopener"
>技术文档&lt;/a> 中的引导完成定时任务的增删改查或立即执行签到操作。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>【方案二】开发者&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Clone 项目:champagne:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据 &lt;a class="link" href="https://github.com/QIN2DIM/CampusDailyAutoSign/blob/main/docs/subdirectory/%e6%8a%80%e6%9c%af%e6%96%87%e6%a1%a3%28demo%29.md" title="技术文档"
target="_blank" rel="noopener"
>技术文档&lt;/a> 合理配置启动参数并通过脚手架调试或部署项目。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="食用指南-">食用指南 🤷‍♂️&lt;/h2>
&lt;blockquote>
&lt;p>详见本项目 &lt;a class="link" href="https://github.com/QIN2DIM/CampusDailyAutoSign" target="_blank" rel="noopener"
>GitHub Repository&lt;/a>，感谢支持。&lt;/p>
&lt;/blockquote></description></item><item><title>『 Python 』Resolve ModuleNotFoundError</title><link>https://blog.echosec.top/p/python-debug-20201217/</link><pubDate>Thu, 17 Dec 2020 10:12:15 +0800</pubDate><guid>https://blog.echosec.top/p/python-debug-20201217/</guid><description>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/book.jpg" alt="Featured image of post 『 Python 』Resolve ModuleNotFoundError " />&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>针对使用 &lt;code>PyCharm&lt;/code> 打开 &lt;code>Github&lt;/code> 上克隆的项目或自编的“千层饼”工程文件并导入自编或已存在的模块时遇上的 &lt;code>ModuleNotFoundError&lt;/code> 报错，本文简要列举了 &lt;code>Python&lt;/code> 编程环境中引发这项错误的可能原因，并在对比总结网上其他解决方案后给出本人的解决方案。&lt;/p>
&lt;h2 id="bug">Bug&lt;/h2>
&lt;h3 id="引用路径和模块名对不上">引用路径和模块名对不上&lt;/h3>
&lt;p>模块已更名重构或不存在。&lt;code>PyCharm&lt;/code> 中支持对整个工程文件中的索引重构，意味着一个文件改名，在当前项目中所有调用了这个模块的地方都会做相应的改动，所以这个不难解决。&lt;/p>
&lt;h3 id="模块存在且引用路径正确但就是报错">模块存在且引用路径正确但就是报错&lt;/h3>
&lt;p>&lt;code>Python&lt;/code>相对路径与绝对路径设置错误，表现出以下现象。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">Traceback &lt;span class="o">(&lt;/span>most recent call last&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;当前运行文件的绝对路径&amp;#34;&lt;/span>, line 3, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> from BusinessViewLayer.myapp.api import *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ModuleNotFoundError: No module named &lt;span class="s1">&amp;#39;BusinessViewLayer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注：其中所有的 .py 文件都是作者自己编写的模块，且都存放在相应的引用路径下。&lt;/p>
&lt;h2 id="debug">Debug&lt;/h2>
&lt;h3 id="网上常见的解决方案">网上常见的解决方案&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.cnblogs.com/wagyuze/p/12886893.html" target="_blank" rel="noopener"
>使用 sys.path.append() 添加临时环境变量&lt;/a>，这套方案可在 Linux 环境下部分有效，但在 Win 环境下可能失效且会让代码变得冗余；&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/qq_27158747/article/details/80936975" target="_blank" rel="noopener"
>使用 from .A import B 的相对路径索引方案&lt;/a>，这套方案在 Visual Studio Code 中可以正常编译但在 &lt;code>PyCharm&lt;/code> 中会进一步引发 &lt;code>ImportError&lt;/code> 错误；&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ImportError: attempted relative import with no known parent package.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="本文解决方案">本文解决方案&lt;/h3>
&lt;h4 id="solution1依托控制台运行">Solution1：依托控制台运行&lt;/h4>
&lt;ol>
&lt;li>直接编译，发现错误&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191137952.png"
width="1277"
height="243"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191137952_huec7cb181d3e0e62ea2865f6bca1f4aef_44390_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191137952_huec7cb181d3e0e62ea2865f6bca1f4aef_44390_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="525"
data-flex-basis="1261px"
>&lt;/p>
&lt;ol start="2">
&lt;li>在 &lt;code>PyCharm&lt;/code> 中打开 &amp;ndash; 运行 / 调试设置&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191145048.png"
width="489"
height="236"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191145048_hudb32de115951c3712e32ab26eb8bc79f_21919_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191145048_hudb32de115951c3712e32ab26eb8bc79f_21919_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="207"
data-flex-basis="497px"
>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191149886.png"
width="1076"
height="696"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191149886_hub12fb6f487cb2c9ce379d3b96f87c7ef_117088_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191149886_hub12fb6f487cb2c9ce379d3b96f87c7ef_117088_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
>&lt;/p>
&lt;ol start="3">
&lt;li>点击 &lt;kbd>确定&lt;/kbd> 后重新运行&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191158046.png"
width="1612"
height="868"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191158046_huf0f01cbcad34c8f79fd8557f117e0389_149200_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191158046_huf0f01cbcad34c8f79fd8557f117e0389_149200_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>
&lt;ol start="4">
&lt;li>
&lt;p>观察控制台&lt;/p>
&lt;p>我们发现，在 &lt;code>Python Console &lt;/code>中运行的模块，会自动链接环境变量，这就顺便达成了我们的需求。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191208022.png"
width="1101"
height="426"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191208022_hu218c03309fe8c88fef1c08cdd36912e0_63866_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191208022_hu218c03309fe8c88fef1c08cdd36912e0_63866_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="258"
data-flex-basis="620px"
>&lt;/p>
&lt;h4 id="solution2使用-pycharm-添加环境变量">Solution2：使用 PyCharm 添加环境变量&lt;/h4>
&lt;blockquote>
&lt;p>为什么要提出这套解决方案呢？显然&lt;strong>方案一并不是最优解。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>某些第三方日志库如 &lt;code>loguru&lt;/code> 在打印运行信息时，会因为各种编码原因导致显示在 Python Console 窗口中的（中文）信息乱码（但在 log 文件中显示正常）。虽然通过设置一些参数可以解决这些问题，但我们不希望在解决问题的过程中引入多余的操作，于是便有了解决方案二。&lt;/p>
&lt;p>方案二依然能够达成我们的需求，且不会引发上文所述的问题。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191403721.png"
width="1612"
height="868"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191403721_hu6c2165b50ec854375e335b7dc04d223c_160636_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191403721_hu6c2165b50ec854375e335b7dc04d223c_160636_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>
&lt;ol>
&lt;li>打开冰箱门&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191415111.png"
width="1076"
height="696"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191415111_hud187b3b06ce8de830be9b25d2374dbfd_111957_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191415111_hud187b3b06ce8de830be9b25d2374dbfd_111957_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
>&lt;/p>
&lt;ol start="2">
&lt;li>把李芬特装入冰箱&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191429958.png"
width="524"
height="721"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191429958_hu7af2271737ca7a7a7a8c3741daa048df_50850_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191429958_hu7af2271737ca7a7a7a8c3741daa048df_50850_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="72"
data-flex-basis="174px"
>&lt;/p>
&lt;ol start="3">
&lt;li>关闭冰箱门&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191440628.png"
width="1612"
height="868"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191440628_hu315b5ef2849e128dfd015a529f3b6843_169918_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191440628_hu315b5ef2849e128dfd015a529f3b6843_169918_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>
&lt;p>至此，报错问题已经完全解决啦~&lt;/p></description></item><item><title>『 Python 』中国大学生计算机设计大赛📜历史作品博物馆</title><link>https://blog.echosec.top/p/python-4c-excellentproject/</link><pubDate>Tue, 01 Sep 2020 16:24:49 +0800</pubDate><guid>https://blog.echosec.top/p/python-4c-excellentproject/</guid><description>&lt;img src="https://blog.echosec.top/p/python-4c-excellentproject/1052010.jpg" alt="Featured image of post 『 Python 』中国大学生计算机设计大赛📜历史作品博物馆" />&lt;blockquote>
&lt;p>更多信息请参见 &lt;a class="link" href="https://github.com/QIN2DIM/4C-ExcellentProject" target="_blank" rel="noopener"
>GitHub Repository&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="前言-">前言 🤦‍♂️&lt;/h2>
&lt;p>🎉 本人有幸作为项目负责人参加 &lt;strong>2020 中国大学生计算机设计大赛&lt;/strong>，并拿下了大数据实践赛全国一等奖。&lt;/p>
&lt;p>🧐 做这个程序的初衷垂直~无意中看到了某个设计方向的作品，感触很深 ；本科生能独立完成这样的作品，真是太震撼了！嗯我说的就是“红楼梦信息交互设计”的华科小姐姐团队，真正的&lt;strong>面向薪资编程&lt;/strong>！&lt;/p>
&lt;p>🛒 于是便有了一个&lt;strong>收藏并展示该类比赛优秀作品&lt;/strong>的想法，于是本人点开官网后发现最新的作品展示还要追溯到 2015 年-……行吧那就撸起袖子自己写了一个自动化采集程序，该程序会自动化采集作品数据，并生成永久访问链接，&lt;strong>展示的信息会经过数据脱敏，仅放出项目 idea 以及作品申报信息，供大家考古学习&lt;/strong>。&lt;/p>
&lt;p>🚀 总而言之该脚本主要功能就是&lt;strong>采集作品信息&lt;/strong>和&lt;strong>拷贝作品信息&lt;/strong>。我会在均衡程序的鲁棒性后，引入&lt;strong>垂搜引擎&lt;/strong>，帮助使用者检索 &lt;code>同质idea&lt;/code> 以及 &lt;code>同质优秀参赛作品&lt;/code>。&lt;/p>
&lt;p>🍵 最终的作品展示方式，本人会慎重考虑。如果官方工作人员觉得不太妥，可以私聊本人喝茶[嗯！道歉是认真的！]如果觉得本项目有望吸引更多的年轻人参赛施展才智，提高竞赛的知名度与含金量，可以私聊本人喝咖啡~&lt;/p>
&lt;h2 id="快速上手-">快速上手 🐱‍🏍&lt;/h2>
&lt;blockquote>
&lt;p>Clone 项目，进入 &lt;code>main.py&lt;/code>，按照说明书合理调用 &lt;code>API&lt;/code> ，运行程序即可调度爬虫采集数据。&lt;/p>
&lt;/blockquote>
&lt;h3 id="配置运行环境">配置运行环境&lt;/h3>
&lt;p>部分 API 使用 python3 + selenium 的采集方案，且该脚本仅支持 Chrome 驱动，请将您的谷歌浏览器更新到最新版本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python -m pip install --upgrade pip &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="采集作品信息">采集作品信息&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.run_crawl_to_capture_workData(work_id: str or list,power: int)&lt;/code>
&lt;ul>
&lt;li>work_id：作品编号，支持&lt;strong>单个字符串&lt;/strong>输入以及 &lt;strong>List&lt;/strong> 多个字符串输入
&lt;ul>
&lt;li>【1】传入单个作品编号；&lt;/li>
&lt;li>【2】传入包含多个作品编号的列表；&lt;/li>
&lt;li>【3】传入空字符串或不传入 &lt;code>work_id&lt;/code>，则默认采集 BASE 中所有的 ID 对应的作品数据(目前有 4076 个数据在库)，此时请适当调高协程功率&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>power：协程功率，&lt;code>power∈[1,∞)&lt;/code>，脚本内置弹性协程队列，此处可随意设置。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>运行后会在 &lt;code>/dataBase/&lt;/code> 目录下生成 &lt;code>合成.csv&lt;/code> 文件&lt;/li>
&lt;li>从 config 配置文件中打印变量 &lt;code>title&lt;/code> 即可查询信息键&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;75945&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;68589&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># app.run_crawl_to_capture_workData(work_id=&amp;#39;72862&amp;#39;,power=30)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run_crawl_to_capture_workData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id_list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id_list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">__len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="n">__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="xjLGXY32JEmWvIb.png" style="zoom:80%;" />
&lt;h3 id="拷贝作品信息">拷贝作品信息&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>演示视频&lt;/strong>&lt;a class="link" href="https://www.yuque.com/docs/share/148083ac-c703-4f7c-978b-321b4ae8e6d9?#" target="_blank" rel="noopener"
>《BackupSpider of CNJSJ》&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>app.run_crawl_to_capture_workData(work_id: str or list,power: int=4)&lt;/code>&lt;/p>
&lt;ul>
&lt;li>work_id： 作品编号，支持&lt;strong>单个字符串&lt;/strong>输入以及 &lt;strong>List&lt;/strong> 多个字符串输入，&lt;strong>参数传递方案同上&lt;/strong>。&lt;/li>
&lt;li>power： 协程功率，&lt;code>power∈[1,∞)&lt;/code>，脚本内置弹性协程队列，此处可&lt;code>随意&lt;/code>设置。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>运行后会在 &lt;code>/dataBase/BACKUP/&lt;/code> 目录下生成以作品编号命名的 &lt;code>.mhtml&lt;/code> 文件，该格式网页文件封装了源所有的文本及插图附件，部分作品内容精彩，文件体积占用较大。&lt;/p>
&lt;ul>
&lt;li>注：safari 可能会打不开这种格式文件。&lt;/li>
&lt;li>该功能使用 Selenium(base on Chromedriver) 采集，请确保电脑上安装了最新版本的谷歌浏览器。&lt;/li>
&lt;li>该功能需要联网使用，请确保网络通畅。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">middleware&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run_crawl_to_backup_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;72862&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">power&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div align="center">&lt;img src="3nIbWH5cEiuDVs9.png" style="zoom: 67%;" />&lt;/div>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-4c-excellentproject/MmYqsBRbPEZglv2.gif"
width="672"
height="378"
srcset="https://blog.echosec.top/p/python-4c-excellentproject/MmYqsBRbPEZglv2_hu59e7919f71bfe8e4776583e924d2a075_2001734_480x0_resize_box_1.gif 480w, https://blog.echosec.top/p/python-4c-excellentproject/MmYqsBRbPEZglv2_hu59e7919f71bfe8e4776583e924d2a075_2001734_1024x0_resize_box_1.gif 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="api">API&lt;/h2>
&lt;p>在从 &lt;code>MiddleWare&lt;/code> 中导入 &lt;code>app&lt;/code>，即可调用脚本功能，别忘了调用 &lt;code>config&lt;/code> 配置文件设置全局变量~&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">middleware&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="作品查询学校成果">作品查询~学校成果&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.get_school_psar(school_name: str,save: bool)&lt;/code>
&lt;ul>
&lt;li>school_name：学校名称。这里不支持模糊匹配，请输入&lt;strong>全称&lt;/strong>！&lt;/li>
&lt;li>save：保存输出。默认为 False；建议为 True，运行后会在 &lt;code>/dataBase/PSAR&lt;/code> 目录下生成对应学校的分析结果，文件格式为 &lt;code>.json&lt;/code>，信息键仅包括 &lt;code>获奖信息&lt;/code> 以及 &lt;code>作品链接&lt;/code>。文件会&lt;strong>自动打开&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_school_psar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">school_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;华中科技大学&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>/华中科技大学_分析报告.json&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;华中科技大学&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;成果概要&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;一等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;二等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;三等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;作品细节&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;一等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72849&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;皖江之阴，青山之阳；青阳有腔，放遇一欢。&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72862&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34; 红楼梦·可视化赏析信息交互系统&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;二等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72750&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Limfx科研博客&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72764&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;梦·山海&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72795&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;济世方舱&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72796&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;山哈彩带&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72800&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;敦煌·梵音&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72821&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;放大镜下的昆虫世界&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72822&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;九华折扇——数字化非遗文化信息可视化设计&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=74879&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;别让它灭绝&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;三等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72783&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;皮影传承，戏中人生&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72799&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;希冀&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="作品查询奖级and赛道">作品查询~奖级AND赛道&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.find_works_by_level(level: str,class_: str)&lt;/code>
&lt;ul>
&lt;li>level：作品等级。这里需要&lt;strong>规范输入&lt;/strong>，只能输入以下选项
&lt;ul>
&lt;li>&lt;code>一等奖&lt;/code>、&lt;code>二等奖&lt;/code>、&lt;code>三等奖&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>class_ ：作品赛道。这里支持模糊匹配。在 &lt;code>/dataBase/TPTDP/class_name.txt&lt;/code> 中有C4-2020所有赛道的全称&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>食用说明：&lt;code>level &lt;/code>和 &lt;code>class_&lt;/code> 都不是必选参数，比如只想知道一等奖的所有作品，只需传入 &lt;code>level&lt;/code> 即可，&lt;code>class_&lt;/code> 可不传或传入空字符串。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># app.find_works_by_level(level=&amp;#39;一等奖&amp;#39;, class_=&amp;#39;大数据&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># app.find_works_by_level(level=&amp;#39;&amp;#39;, class_=&amp;#39;人工智能&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_works_by_level&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;一等奖&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">class_&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203151766.png"
width="1562"
height="389"
srcset="https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203151766_hu6333a1f9b6ad0ce5cbbaf9ff77717174_157030_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203151766_hu6333a1f9b6ad0ce5cbbaf9ff77717174_157030_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="401"
data-flex-basis="963px"
>&lt;/p>
&lt;h3 id="作品查询比赛摘要">作品查询~比赛摘要&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.get_summary()&lt;/code> 打印决赛成绩概况&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203209320.png"
width="1232"
height="359"
srcset="https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203209320_hu142866d07b802d697d5d6e7cd105ce57_81589_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203209320_hu142866d07b802d697d5d6e7cd105ce57_81589_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20211002203209320"
class="gallery-image"
data-flex-grow="343"
data-flex-basis="823px"
>&lt;/p>
&lt;h3 id="作品查询链接直达">作品查询~链接直达&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.find_works_by_id(key: str, goto: bool)&lt;/code>
&lt;ul>
&lt;li>key： 作品编号，仅支持单个字符串输入&lt;/li>
&lt;li>goto：是否打开网页。若为 True，则使用默认浏览器打开作品首页&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>运行后会在 &lt;code>/dataBase/PSAR/ASH.json&lt;/code> 中留下临时文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_works_by_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;72862&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="works_id数据加载">works_id数据加载&lt;/h3>
&lt;ul>
&lt;li>由于表数据结构比较乱，我已经写好了一个全局 load id 的函数，使用方法也很粗暴，调用该函数并传入 &lt;code>spider_key&lt;/code>，即可获取含表头的在库id列表。获取列表后使用切片去除表头候即可获得干净的数据~&lt;/li>
&lt;li>因为合成BASE文件有点大，故使用 &lt;code>csv.field_size_limit()&lt;/code> 捕获数据流。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">load_data_from_id_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> data_set = title
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :param mode: 截取模式,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> spider_key : 联采
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> str:works_id : 该作品编号对应的数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> list:works_id :
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return:返回表头+数据，使用切片[1:]截出数据集
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 当爬虫程序使用此函数时，并传入‘spider_key’口令，函数执行特殊命令，返回含表头的作品编号 List[str,str...]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 返回的列表里包含了所有在库的works_id,既当爬虫爬虫程序传入该口令时，将采取所有作品信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id_fp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">field_size_limit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1024&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">reader&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">mode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;spider_key&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 清洗数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;N/A&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>食用方法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 返回无表头 id 列表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id_flow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_all_works_id&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 数据预览&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;id池大小：&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id_flow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__len__&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="注意事项-">注意事项 ❗&lt;/h2>
&lt;ul>
&lt;li>工程文件中的&lt;code>/dataBase&lt;/code>目录下存放了脚本核心BASE文件，请勿随意挪动或删除文件，否则会出大问题！&lt;/li>
&lt;li>&lt;code>config.py&lt;/code>中可以自己调整的参数并不多，请勿随意改动其中数值，否则也会出大问题~&lt;/li>
&lt;/ul>
&lt;h2 id="更新日志-">更新日志 📋&lt;/h2>
&lt;p>&lt;strong>2020.09.06&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>已将所有&lt;code>2020-MTH作品申报信息&lt;/code>离线封装&lt;/li>
&lt;li>将采集功能都封装进&lt;code>app.py&lt;/code>里，所有功能都可通过该模块调用&lt;/li>
&lt;li>添加语雀同步文档，解决部分地区图文显示异常的问题&lt;/li>
&lt;li>项目除虫，增加了垃圾回收机制&lt;/li>
&lt;/ol>
&lt;h2 id="todo-">TODO 📈&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 搭建类BLOG前端，开放接口映射优秀作品文件&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 服务器部署&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 引入鲁棒均衡模组&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 添加垂搜引擎，提供API接口&lt;/li>
&lt;/ul></description></item><item><title>『 Python 』jieba+wordcloud 词频可视化</title><link>https://blog.echosec.top/p/python-jieba-wrodcloud/</link><pubDate>Sat, 29 Feb 2020 01:20:33 +0800</pubDate><guid>https://blog.echosec.top/p/python-jieba-wrodcloud/</guid><description>&lt;img src="https://blog.echosec.top/p/python-jieba-wrodcloud/wordcloud.jpeg" alt="Featured image of post 『 Python 』jieba+wordcloud 词频可视化" />&lt;h2 id="案例实操">案例实操&lt;/h2>
&lt;h3 id="准备资源">准备资源&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>导入所需库&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">wordcloud&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">jieba&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>准备好源文件，屏蔽词文件，备用字体&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">font_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;C:\Windows\Fonts\时尚中黑简体.ttf&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">file_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;新建文本文档.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fake_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;stop_key.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>自定义变量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">alist&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span> &lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">btext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fake_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="c1">#第三方屏蔽列集合&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#根据文档特殊性而设计的自定义屏蔽词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stop_words&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;我们&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;这个&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;一个&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;可以&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;下来&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;这样&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;就是&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;用来&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;非常&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;然后&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;这里&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;非常&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;大家&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;时候&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;上面&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;里面&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;放在&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;首先&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;准备&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;出来&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;很多&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;其实&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;一些&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;拿出&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;还有&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;如果&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="读取数据集">读取数据集&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#读入源文档&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file_path&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;GBK&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">errors&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;ignore&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#type（text）:str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#ignore errors&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#读入屏蔽词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fake_path&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fake_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#屏蔽词文件中，每一个词汇独占一行，因此逐行读取&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#type（fake_data） is list. 这个列表里的每个元素都是str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">fake_data&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#遍历屏蔽词列表，每个i都是一个屏蔽词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fake_set&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#将屏蔽词加入集合，集合具有无序独立性，会自动排除重复词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#扩充屏蔽词库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fake_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fake_set&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">stop_words&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="分词">分词&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#alist装填分词句&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">jieba&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cut&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">cut_all&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#text是源文档&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#切分采用精确模式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#jieba.cut（）返回一个generate对象，使用for语句可以遍历此对象&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#每一个i都是一个str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">alist&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#循环结束后，alist列表里的若干个元素，都是通过jieba分好的词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 剔除屏蔽词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">alist&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#alist是一个装填分词的列表，里面的每一个元素都来自源文档&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">fake_set&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#如果遍历到的词汇不是屏蔽词，那么就把这词接入btext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">btext&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">word&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">btext&lt;/span> &lt;span class="o">+=&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#每个分词之间用/断开&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#btext变量是一个较长的且已过滤屏蔽词的字符串str，每个分词之间由&amp;#39;/&amp;#39;断开&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="生成词云">生成词云&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 实例化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wordcloud&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WordCloud&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">font_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">font_path&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1920&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1080&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">background_color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;white&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 传入 str 对象 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 此处给 generate 传入的参数 btext 已手动除杂，无需在 wordcloud 的实例化参数中指明 stopwords&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btext&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;11111.jpg&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_image&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">image&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="demo">Demo&lt;/h3>
&lt;p>手动爬取 15 个沙雕营销号生活妙用视频文案，利用 jieba + wordcloud 统计高频词。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-jieba-wrodcloud/wordcloud.jpeg"
width="1920"
height="1080"
srcset="https://blog.echosec.top/p/python-jieba-wrodcloud/wordcloud_hudfe8075ab25e2dc7353e929b52673e96_374013_480x0_resize_q75_box.jpeg 480w, https://blog.echosec.top/p/python-jieba-wrodcloud/wordcloud_hudfe8075ab25e2dc7353e929b52673e96_374013_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="问题总结">问题总结&lt;/h2>
&lt;h3 id="文件读写统一编码格式">文件读写统一编码格式&lt;/h3>
&lt;p>&lt;strong>错误案例&lt;/strong>：读取多个编码格式不同的文件时，使用了统一的解码格式，导致文本乱码或屏蔽失效。&lt;/p>
&lt;p>例如：屏蔽词文件 &lt;code>stop_key.txt&lt;/code> 编码为 GBK，源文件 &lt;code>raw_text.txt&lt;/code> 编码为 &lt;code>UTF-8&lt;/code>。一开始写函数并没有注意到这个细节，而后整个程序的读文件操作都通过一个 &lt;code>read_file() function&lt;/code> 进行，导致整个程序陷入了无限报错之中，拆东墙补西墙。&lt;/p>
&lt;p>&lt;strong>解决方案&lt;/strong>：给 &lt;code>read_file() function&lt;/code> 自定义参数 &lt;code>mode&lt;/code>，进而针对特殊编码的文件单独控制 encoding。&lt;/p>
&lt;ul>
&lt;li>ps：此处分别用两个 &lt;code>open&lt;/code> 强调文件编码不同&lt;/li>
&lt;li>ps：在我没意识到文件编码异常之前，一直在调整统一的 encoding 试错，从 UTF-8 到 GBK 再到 GB18030，显然都不能解决问题。如果通过设置 &lt;code>errors=ignore&lt;/code> 强行忽视非法编码，要么导致源文文本乱码，要么就会在词库过滤时发现 stop_words 集合并没有起作用（原因一致）。由此引发的 Error 信息如下。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">UnicodeDecodeError: &lt;span class="s1">&amp;#39;gbk&amp;#39;&lt;/span> codec can&lt;span class="s1">&amp;#39;t decode byte 0x80 in position 91: illegal multibyte sequence
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">UnicodeDecodeError: &amp;#39;&lt;/span>utf-8&lt;span class="s1">&amp;#39; codec can&amp;#39;&lt;/span>t decode byte 0xbd in position 0: invalid start byteshell
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>补充&lt;/strong>：如果数据集从创建到调用都是自己通过python函数操作，往往不会出现编码格式错乱的问题（无非就 GBK 或 UTF-8 ）。出现问题很可能是数据集被创建后自己 手动 打开 修改 保存 了源文档！这时候保存的文档编码格式可能会分裂成 UTF-8，GBK，GB18030，Unicode，ANSI，GB2312，BIG5 等等常见的中文格式编码，这要看编辑器的默认转录格式&lt;/p>
&lt;h3 id="wordcloud易错参数解释">wordcloud易错参数解释&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>参数&lt;strong>stopwords&lt;/strong>接受的文本格式是&lt;strong>set&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>函数 &lt;strong>generate&lt;/strong>接受的文本格式是&lt;strong>str&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 词云实例化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wordcloud&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WordCloud&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stopwords&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">stop_words&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stop_words&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;class &amp;#39;set&amp;#39;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 词云生成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btext&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btext&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="实验附件">实验附件&lt;/h2>
&lt;p>这里呈上沙雕营销号文案&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;接着利用剪刀剪下来一个正方形纸片。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">利用我们的美工刀在上面裁剪一个小孔。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">小孔裁剪好了。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">大家肯定非常好奇。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这个是用来做什么的？
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">其实这个就是我们用来阅读的一个小神器。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们在阅读的时候。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">可以将它放在我们的书上。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后这样逐字阅读。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这个方法就是采用了我们小孔成像的原理。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这样我们阅读的时候就可以方便很多。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">而且看得很清楚。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们可以先把油桶的提手取下来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">其实取下提手也是有小方法的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们只要把这一圈齿片一片一片的往外掰
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">掰完以后，我们就可以把它取下来了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接下来我们看看它的妙用吧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">家里衣服太多衣柜挂不下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们只需把油桶上的塑料把手清洗干净
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后套在衣架上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这时我们将下一件衣服也挂在上面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这样就能为我们节省很多空间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们拿出家里的吹风机
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">开启冷风档
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">大家看这个时候它散发出来的一股吸附力
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">能够将我们的一次性纸杯牢牢吸附在它的后盖上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">能够轻松地吸附我们桌子上面的一些纸屑
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">热熔胶热熔胶热熔胶热熔胶热熔胶
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后将刀片黏在梳子上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们准备一个卫生巾
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">把它贴在门把手侧面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">妙用2用来戒烟
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将风油精涂在香烟上 会有一股难闻的气味
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">吸烟者抽了就会头痛恶心 能达到减肥的效果
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">第三个妙用 我们可以在上面套一个垃圾袋
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">要当垃圾桶吗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这样把它放在我们卧室的床头上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">在扔垃圾的时候就会变得非常容易了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">如果觉得有异味的话
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">如果觉得有异味的话 我们扔完垃圾后可以盖上盖子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们先来准备食材：馒头、蜂蜜还有洗洁精
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们拿出馒头在上面 均匀地涂抹一些蜂蜜
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后再加入适量的洗洁精 切记涂抹均匀o
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后我们把它放在老鼠经常出没的地方
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">老鼠一碰到找个馒头就会轻松挂掉了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">原理解释
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">蜂蜜是甜性物质 涂抹它是为了吸引老鼠过来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">而洗洁精本身就是有毒的液体，老鼠一沾到就会自然挂掉
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">你说涂点老鼠药上去1那我银A可能还能稍微能接受一点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">可以我今天颠对洗清精的认识好吧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">绝对不会出现老鼠
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">今天呢城西教大家用现有的材料自制胶水那个效果呢用起来跟买的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">效果是擦不多的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先我们只需要准备一点淀粉
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">淀粉就是那个玉米定粉啊
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这个声音像我小学门口小卖店的老板
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接着我们挤入洗洁精
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">大家看同样是有粘的效果的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">希望对大家有所帮助
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">今天呢城西就跟大家讲一下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们一定要在我们的钱包里面放一张纸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">为什么呢？（为什么这个营销号不上字幕？）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">作用可是非常的大啊
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先呢我们要拿出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">一张这么大小的纸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">裁剪出跟这里差不多大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后呢我们要在这个上面写上我们的姓名
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">姓名然后电话号码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后呢还有家庭住址之类的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这个纸啊塞在最显眼的地方
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">把冰淇淋拿出来把肥皂弄成永淇淋装回袋子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">另外我们还可以在废旧的鞋子里面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">铺上一层锡箔纸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">因为锡箔纸不怕烫
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们把它放在床头
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">就可以成为一个小小的烟灰缸啦
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">你为什么非要用个高跟鞋去做烟灰缸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">实个烟灰缸就这么难吗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">还要铺上锡销E
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">哇失响1你好讲究晚你，意识好强哦
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">是不是非常方便呢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">而且也非常美观 像一件艺术品
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">火机放在水里以后还能开火吗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">打火机大家常见特别的男生
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">今天我们就来做这实验
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先准畜一个打火机和一个气球
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">把气球套在打火机上面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后端口打个死结
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接者我们把用气球装好的打火机放进水里
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">来回浸泡几分钟后拿出来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">会发生什么变化呢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们把气球剪破口 然后把火机拿出来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">开火试一下竟然还是能用的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">火花比原来的还要大
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">原来打火机在的密封下浸水
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">还是可以用的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们拿手机看电视时
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">可以将塑料提手向后掰几下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这时再把手机放上去
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这样我们手机支架就做好了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们拿来一个家里面都有的废旧盒子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接着利用剪刀剪下来一个正方形纸片
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">利用我们的美工刀在上面裁剪一个小孔
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这一次性纸杯相信大家都不陌生
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">很多朋友的家里都会买一些这种纸杯
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">用它来招待客人
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">但是你知道
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">在这些纸杯上面扎一些小洞
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">他有什么作用吗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">下面跟三毛一起来了解一下吧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先我们准备一个一次性纸杯
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">还有一个叉子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后我们用叉子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">在这个杯子的底部给他戳一个小洞
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将杯子底部扎完小洞之后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后我们再将这个纸杯
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">放到另一个杯子里面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接下来我们再到这杯子里面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">放入少许的茶叶
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">添加适量的茶叶之后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们再倒入适量的开水
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">添加开水之后我们让它浸泡2-3分钟时间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">浸泡2-3分钟时间后我们在将里面的杯子拿出来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们现在可以看到
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">杯子里面的茶叶已经全部给过滤出来了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">非常的方便
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">用这个方法来泡茶喝
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">它还可以节省茶叶
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这么一点点茶叶我们可以泡好几杯茶
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">小妙招
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">超实用的小妙招
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">学会了快告诉妈妈
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">准备一张吸油纸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将牙膏一粒一粒均匀地挤在纸上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后撒上小苏打
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">等待凝固后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">把它装进小瓶子里
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">刷牙的时候倒出一粒
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">就可以直接刷牙了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将香皂融化吸入针管
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后挤入药板模型里面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">用锡纸封柱模板
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">旅游的时候带在身上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">随时随地都可以用来洗手
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">废旧的牙刷还有怎样的妙用呢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">跟我来看看
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们先准备两个差不多的牙刷
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">用皮筋将它们绑起来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">那么这两支牙刷的第一个作用就是用来清洗水龙头
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">由于水龙头的形状比较特殊
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">所以它的内侧经常很难清理到
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将牙刷取开 然后均匀的擦拭
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">可以看到里外都清理的非常干净
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">而且可以随时调换位置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">喝茶剩下的茶叶根不要扔
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们还可以拿它来做很实用的东西
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先将茶叶取出来 挤干水分放入盘中
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后翻在太阳下晒干
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">晒好后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将我们穿的袜子脱下来一只
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将晒干的茶叶倒入袜子中
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">扎好口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">一个便携的香袋就完成了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">茶香四溢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">怎么样 是不是很实用呢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">如果实用别忘记点赞
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>