<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Engineering on Echosec @QIN2DIM</title><link>https://blog.echosec.top/categories/software-engineering/</link><description>Recent content in Software Engineering on Echosec @QIN2DIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 04 Dec 2022 16:56:02 +0800</lastBuildDate><atom:link href="https://blog.echosec.top/categories/software-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>『Blog』ChatGPT Helloworld</title><link>https://blog.echosec.top/p/chatgpt-register/</link><pubDate>Sun, 04 Dec 2022 16:56:02 +0800</pubDate><guid>https://blog.echosec.top/p/chatgpt-register/</guid><description>&lt;img src="https://blog.echosec.top/p/chatgpt-register/lixin-yin-e6tbaezuuaal46n.jpg" alt="Featured image of post 『Blog』ChatGPT Helloworld" />&lt;h2 id="preview">Preview&lt;/h2>
&lt;p>如何在中国大陆获取 ChatGPT 的试用权限？你需要一个代理 IP 以及一个可接码的其他地区的手机号。&lt;/p>
&lt;p>目前，OpenAI 未向中国大陆以及港澳台提供 ChatGPT 服务，你需要使用其他地区的代理 IP （优先使用日韩美新）进入注册页面并使用其他地区的手机号进行接码验证，注意：港澳台地区无法使用 OpenAI。&lt;/p>
&lt;p>ChatGPT 屏蔽了虚拟号码，类似 Google Voice 的服务无法正常使用，但接码平台的屏蔽策略仍是基于数据库匹配，所以有些平台成了漏网之鱼，如 &lt;a class="link" href="https://sms-activate.org/cn" target="_blank" rel="noopener"
>sms-activate&lt;/a>。&lt;/p>
&lt;h2 id="快速注册">快速注册&lt;/h2>
&lt;h3 id="准备阶段">准备阶段&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>准备接码&lt;/p>
&lt;p>打开 &lt;a class="link" href="https://sms-activate.org/cn" target="_blank" rel="noopener"
>sms-activate&lt;/a> 注册一个账号，请使用真实邮箱注册。接受验证邮件可能用时略久。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>注册 OpenAI 账号&lt;/p>
&lt;p>访问 &lt;a class="link" href="https://auth0.openai.com/u/signup/identifier?state=hKFo2SBvWTJjb0dadlhiY3lLT1FOSlMyWkMyY2E5aFZka2FOQqFur3VuaXZlcnNhbC1sb2dpbqN0aWTZIDRIQzlsUXJFV2hPUEZIUllxaHR1eW1vVUk0X0d5X3VOo2NpZNkgRFJpdnNubTJNdTQyVDNLT3BxZHR3QjNOWXZpSFl6d0Q" target="_blank" rel="noopener"
>OpenAI 认证界面&lt;/a>，如果你已有账号，选择 Continue with xxx 或者点击 LogIn 即可，否则填写邮箱走流程，跟着步骤操作走就行。&lt;/p>
&lt;img src="image-20221204192058339.png" alt="image-20221204192058339" style="zoom:50%;" />
&lt;p>跟着操作直到 Verify Your Phone Number 界面。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>购买接码账号&lt;/p>
&lt;p>使用 AliPay 对账号充值，每个接码手机号 10 卢布左右，20分钟有效，有效期内未接收到验证码，手机号将被回收，付款退回账号。&lt;/p>
&lt;img src="image-20221204191842258.png" alt="image-20221204191842258" style="zoom:50%;" />
&lt;p>购买 OpenAI 接码账号，选一个便宜的，这些手机号在本文首发时还剩下十几万个，用完就没了~由于账号有效期内没有活动会被回收，不用担心黄牛批量买入，这些账号用于真实注册 OpenAI。如果直接搜索服务没有看到下方的扩展栏，可以点击「显示更多国家」的拓展，SMS-ACTIVE 会时不时筛选补充接码账号，不得不说 ChatGPT 5 天时间的注册量已经超过了一百万，接码服务也算是间接受益方，他们自然不会错过这个绝佳的热点~&lt;/p>
&lt;img src="image-20221204191322173.png" alt="image-20221204191322173" style="zoom:50%;" />
&lt;/li>
&lt;li>
&lt;p>填写手机号，接受验证码&lt;/p>
&lt;p>账户余额足够时，点击购物车图表，自动跳转到接码界面，复制手机号填写到 ChatGPT 的验证界面中，地区选择印度，等待验证短信即可。&lt;/p>
&lt;img src="image-20221204191509831.png" alt="image-20221204191509831" style="zoom:50%;" />
&lt;p>​ 选择个人用途。如果操作流程丢失，访问 &lt;a class="link" href="https://chat.openai.com/chat" target="_blank" rel="noopener"
>ChatGPT&lt;/a> 回到操作流程中。&lt;/p>
&lt;img src="image-20221204192255336.png" alt="image-20221204192255336" style="zoom:50%;" />
&lt;/li>
&lt;/ol>
&lt;h3 id="首次使用">首次使用&lt;/h3>
&lt;p>注册完成后，访问 &lt;a class="link" href="https://chat.openai.com/chat" target="_blank" rel="noopener"
>ChatGPT (openai.com)&lt;/a>，点击 LogIN 即可。在下方的搜索框中开始你的奇思妙想。&lt;/p>
&lt;img src="image-20221204180633995.png" alt="image-20221204180633995" style="zoom:80%;" />
&lt;h2 id="问答案例">问答案例&lt;/h2>
&lt;p>注意，ChatGPT 不能联网，基础知识构建工作在 2021 年完成，擅长知识型问答，它有一定的接受边界：&lt;/p>
&lt;ol>
&lt;li>不能用于撰写实时性较强的时政性质的答案；&lt;/li>
&lt;li>不能用于回答权限受限的问题；&lt;/li>
&lt;li>不能用于回答政策、政治等专业领域的问题；&lt;/li>
&lt;li>不能有效应对 2021 年之后的新知识；&lt;/li>
&lt;li>禁黄赌毒；&lt;/li>
&lt;/ol>
&lt;h3 id="联合对话">联合对话&lt;/h3>
&lt;p>ChatGPT 可以结合上下文信息回复你的提问。&lt;/p>
&lt;div align="center">&lt;img src="image-20221204181912296.png" alt="image-20221204181912296" style="zoom:50%;" />&lt;/div>
&lt;h3 id="编程用例">编程用例&lt;/h3>
&lt;p>不必像使用搜素引擎那样为了精确结果而使用精简的语法和特殊字符，只需要礼貌且准确地描述你的问题，像这样：&lt;/p>
&lt;div align="center">&lt;img src="image-20221204182021698.png" alt="image-20221204182021698" style="zoom:55%;" />&lt;/div>
&lt;p>经测试，ChatGPT 还能妙解 LeetCode 困难算法题，能给出适合某个小需求的代码片段，代码中会有「对应语种」的行内注释，也会在用例下方解释代码的运行逻辑。&lt;/p>
&lt;h3 id="钓鱼提问">钓鱼提问&lt;/h3>
&lt;p>尝试提出一些钓鱼问题，即，一般权限玩家无法访问的机密信息。比如：诶隆马斯克的中间名，美国驻日军事基地的经纬度坐标等等。这些是边界问题，「答不出来」才是正确答案。&lt;/p>
&lt;div align="center">&lt;img src="image-20221204182234888.png" alt="image-20221204182234888" style="zoom:42%;" />&lt;/div>
&lt;h3 id="范文模版">范文模版&lt;/h3>
&lt;p>英文（标准格式）邮件，作文范文，辞职信，请假条等等。&lt;/p>
&lt;ol>
&lt;li>英文联系邮件模版&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20221204183004649.png" alt="image-20221204183004649" style="zoom: 50%;" />&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>演讲稿范文&lt;/p>
&lt;p>via &lt;a class="link" href="https://twitter.com/LeaskH/status/1599899001276354560/photo/1" target="_blank" rel="noopener"
>@LeaskH&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="FjP7bMJWIAc7f1T.jpeg" alt="图像" style="zoom: 42%;" />&lt;/div>
&lt;ol start="3">
&lt;li>作诗作曲&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="screenshot-20221206-185323.png" alt="image-20221206185113435" style="zoom:80%;" />&lt;/div>
&lt;h3 id="场景对话">场景对话&lt;/h3>
&lt;p>让通识性客服感受到行业危机的一个重要特性，ChatGPT 可以和用户愉快地交流，这远比一口一个“亲”来的爽快。&lt;/p>
&lt;div align="center">&lt;img src="image-20221204184003292.png" alt="image-20221204184003292" style="zoom: 50%;" />&lt;/div>
&lt;h3 id="梦幻联动">梦幻联动&lt;/h3>
&lt;p>我们可以把 ChatGPT 和 Stable Diffusion 结合使用，如果你暂时不知道如何向 imagine 提供准确的 prompt 或者没啥思路，ChatGPT 也许能为你提供灵感。&lt;/p>
&lt;div align="center">&lt;img src="Fi1PSqaXEBAivit.png" alt="图像" style="zoom:90%;" />&lt;/div>
&lt;p>我们通过 ChatGPT 询问了一些「房屋设计」方向的描述词，然后我们稍微操作一下，拼凑成扩散模型可以识别的句式，最后通过 ImaginAIry 生成图片，效果不多说……&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/chatgpt-register/Fi1PVUDXEAIm4nj.jpeg"
width="1536"
height="1024"
srcset="https://blog.echosec.top/p/chatgpt-register/Fi1PVUDXEAIm4nj_huc1e14119587419480c6fbbfa7f23f616_177061_480x0_resize_q75_box.jpeg 480w, https://blog.echosec.top/p/chatgpt-register/Fi1PVUDXEAIm4nj_huc1e14119587419480c6fbbfa7f23f616_177061_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="360px"
>&lt;img src="https://blog.echosec.top/p/chatgpt-register/Fi1PVU_XEAUSE-K.jpeg"
width="1536"
height="1024"
srcset="https://blog.echosec.top/p/chatgpt-register/Fi1PVU_XEAUSE-K_hu0cec9155fb90c588fba4ec1212c8ece8_255897_480x0_resize_q75_box.jpeg 480w, https://blog.echosec.top/p/chatgpt-register/Fi1PVU_XEAUSE-K_hu0cec9155fb90c588fba4ec1212c8ece8_255897_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="360px"
>&lt;img src="https://blog.echosec.top/p/chatgpt-register/Fi1PVVkXEBEvcwG.jpeg"
width="1536"
height="1024"
srcset="https://blog.echosec.top/p/chatgpt-register/Fi1PVVkXEBEvcwG_huee7aed9001ae205cf1ed716ab17e49e7_214711_480x0_resize_q75_box.jpeg 480w, https://blog.echosec.top/p/chatgpt-register/Fi1PVVkXEBEvcwG_huee7aed9001ae205cf1ed716ab17e49e7_214711_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="360px"
>&lt;/p>
&lt;h3 id="哲学问答">哲学问答&lt;/h3>
&lt;p>可以尝试问一些带有争议的哲学问题，如：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>缸中大脑&lt;/p>
&lt;/li>
&lt;li>
&lt;p>电车难题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>造物主存在吗（死后有余生吗）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基因或环境，我们的个性来自哪里&lt;/p>
&lt;/li>
&lt;li>
&lt;p>人工只能是否对人类构成威胁&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>哲学问答的过程是不断深究的过程，你需要多伦对话引导 AI 做出更精准的回复。&lt;/p>
&lt;img src="image-20221206182118649.png" alt="image-20221206182118649" style="zoom:80%;" />
&lt;h2 id="总结与展望">总结与展望&lt;/h2>
&lt;p>总之啊~我这几天看了不下五百个的 ChatGPT 调教案例了，主要心得就是：学会提问！近期，我也发现 GitHub 上涌现了一批优秀的 &lt;a class="link" href="https://github.com/acheong08/ChatGPT" target="_blank" rel="noopener"
>ChatGPT API wrapper&lt;/a>，我相信再过不久围绕 ChatGPT 发展的边缘应用将如潮水般涌来，我自己也会基于 ChatGPT 实现一个小玩具，尝试解决英语四六级作文写作的范文生成问题。&lt;/p>
&lt;h2 id="推荐阅读">推荐阅读&lt;/h2>
&lt;p>我们在问答案例中提出了一些有趣的用例，篇幅有限，这里列出一些精彩的 thread 纪录 ChatGPT 更多的精彩用法，建议阅读😁。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://openai.com/blog/chatgpt/" target="_blank" rel="noopener"
>ChatGPT: Optimizing Language Models for Dialogue&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/forrestchang/gptlang" target="_blank" rel="noopener"
>forrestchang/gptlang: A new programming language running in ChatGPT (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://twitter.com/Tisoga/status/1599347662888882177" target="_blank" rel="noopener"
>Jiayuan Thread&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://twitter.com/search?q=chatgpt&amp;amp;src=typed_query&amp;amp;f=live" target="_blank" rel="noopener"
>chatgpt - Twitter 搜索 / Twitter&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://mp.weixin.qq.com/s/ol__ugwMqDcXANYiBKCf-g" target="_blank" rel="noopener"
>ChatGPT是有点中文在身上的：鲁迅、脱口秀甚至世界杯…都被玩宕机了&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『Blog』Git Myself</title><link>https://blog.echosec.top/p/git-myself/</link><pubDate>Sat, 19 Nov 2022 17:56:01 +0800</pubDate><guid>https://blog.echosec.top/p/git-myself/</guid><description>&lt;img src="https://blog.echosec.top/p/git-myself/village.jpg" alt="Featured image of post 『Blog』Git Myself" />&lt;h2 id="概念界定">概念界定&lt;/h2>
&lt;h3 id="账号为什么会被标记flagged">账号为什么会被标记（flagged）&lt;/h3>
&lt;p>GitHub 内部实现了一个严格的反机器人/反滥用监测系统，这是一套标准化的风控系统，它会自动标记高威胁目标。被封禁的用户会看到 &lt;strong>Your account has been flagged&lt;/strong> 的标志。&lt;/p>
&lt;div align="center">&lt;img src="image-20221120183334009.png" alt="Your account has been flagged" style="zoom: 50%;" />&lt;/div>
&lt;p>这套监测系统的实现逻辑处于保密状态，但其监听的行为规则可以大致总结为：&lt;/p>
&lt;ol>
&lt;li>频繁创建 Git 仓库（速率极大，非人类操作）；&lt;/li>
&lt;li>在社区中发表骚扰、辱骂、威胁或煽动性言论，被举报；&lt;/li>
&lt;li>滥用。借助 Actions，Codespaes 等服务发送诈骗/广告/垃圾邮；基于这些基础设施运行的高频次的并行自动化任务，长时间占用公共资源等。&lt;/li>
&lt;li>&lt;strong>访问攻击&lt;/strong>。试图以可能损害 GitHub 网站或服务的方式扰乱或篡改 GitHub 的服务器，通过自动化的方式给 GitHub 服务器带来不必要的负担，进而达到超出授权边界的行为目的。&lt;/li>
&lt;li>冒充任何个人或实体，侵犯第三方隐私。&lt;/li>
&lt;/ol>
&lt;p>大多数误封来自第 3 条，显然「滥用」的边界难以界定。而本文阐述的 GitHub Flag Attack 出自第 4 条规则的反向利用。&lt;/p>
&lt;h3 id="什么是标记攻击">什么是标记攻击&lt;/h3>
&lt;p>GitHub Flag Attack 统称为一系列利用风控规则致使目标账号被针对性封禁的访问攻击，是一种名副其实的「借刀杀人」式网络攻击。&lt;/p>
&lt;p>从正向规则来看，一个机器人被创建后给数千个项目点赞，如果开发者把握不好请求速率和指纹数据的反射频率，这个机器人会被秒封。值得一提的是，这种请求通常是基于 Access Token 的 full-request 而非基于 Playwright 或 Selenium 的网页自动化，所以请求速率非常快，仅受权限上限控制。&lt;/p>
&lt;p>同样的规则可以反向利用，创建数百个机器人，向同一个靶向账号灌入恶意流量，如：follow，star，fork，watch，这些行为是多向的，如：follow 和 unfollow 高频次交替进行，机器人会互赞 fork 下来的仓库等。目标用户通常是 Create/Fork 仓库数几十上百的玩家，这对恶意流量是种利好，可交互对象更多，窗口期更小。短时间内，被攻击账号将收到数万的「点赞」（以及「取消点赞」）的请求，被攻击玩家甚至察觉不到这些异常。标记攻击通常仅需数分钟就可以将目标账号关入小黑屋。&lt;/p>
&lt;p>事发时，我的 GitHub Dashboard 正好停留在主屏上，无意间记录下了这个让我目瞪口呆的过程，这让我陷入了对人与社会的思考……&lt;/p>
&lt;img src="image-20221119200828753.png" alt="GitHub Flag Attack" style="zoom:50%;" />
&lt;h3 id="被标记-vs-被停用">被标记 vs 被停用&lt;/h3>
&lt;p>标记通常针对账号，而停用通常针对某个具体的项目仓库。&lt;/p>
&lt;p>账号被标记期间，&lt;strong>除了账号所有者外&lt;/strong>，其他访客/无法查看被标记账号的 profile 及其所有的附属域资源，看起来像是这个账号不曾存在一样。此时，账号所有者仍能（或通过 Git）操作账户数据，如 push commit，export account data 等，即，账号所有者仍保留对上游数据的读写权限。&lt;/p>
&lt;div align="center">&lt;img src="image-20221119200757708.png" alt="GitHub Page 404" style="zoom:80%;" />&lt;/div>
&lt;p>某个仓库被停用后，包括账号所有者在内的所有普通用户均无法正常访问仓库地址，仓库页会显示警告 &lt;strong>This repository has been disabled&lt;/strong>。账号所有者彻底失去该项目的控制权，所有下游 fork 分支被一并删除，母仓库的 Releases 被重置到不可访问域。&lt;/p>
&lt;div align="center">&lt;img src="image-20221119203017574.png" alt="This repository has been disabled" style="zoom: 80%;" />&lt;/div>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;h3 id="移除账号的标记">移除账号的标记&lt;/h3>
&lt;p>目前，仅能通过联系&lt;a class="link" href="https://support.github.com/contact/account" target="_blank" rel="noopener"
>技术支持&lt;/a>的方式解除账号的标记状态。可供参考的正文内容如下：&lt;/p>
&lt;blockquote>
&lt;p>Hello, Mr. or Ms.
I don’t understand what happened to my account.
Would you tell me what to do now?
Thank you very much for your support.
I don’t know why my account has been flagged.&lt;/p>
&lt;/blockquote>
&lt;p>如果工单积累过多，可能至多要 7 天才能得到首次回复（remote work 的效率是真的低）如果是闲时请求，至少也需要等个半天。这种恶意攻击引发的封禁案例并不少见，技术支持可能还要甄别是否是「有意为之」。&lt;/p>
&lt;h3 id="重定向-github-pages">重定向 GitHub Pages&lt;/h3>
&lt;p>如果你使用 GitHub Pages 搭建个人博客站点，当你的账号处于被标记状态时，&lt;code>username.github.io&lt;/code> 仓库地址处于不可访问状态，你的博客会被重置到 404 页面。&lt;/p>
&lt;div align="center">&lt;img src="image-20221120184458295.png" alt="There isn't a GitHub Pages site here" style="zoom:67%;" />&lt;/div>
&lt;p>你需要另一个未被标记的 GitHub 账号，按同样的方法创建一个 public repo，将站点静态输出 push 到新仓库中，GitHub Pages Custom Domain 仍填写博客站的自定义域名，然后将你的博客站的 CNAME recode 指向新的仓库地址，即，&lt;code>username2.github.io&lt;/code>。这么说有点抽象，但这对于使用 GitHub Pages 搭建博客的玩家来说并不难理解。这样操作可接燃眉之急，访问你的站点域名，实际上会被解析到新仓库地址。&lt;/p>
&lt;p>如果你依赖 GitHub Pages 搭建了其他静态内容，也可以照葫芦画瓢完成同样的操作。这也意味着博客站的源码非常关键，持有源码，可以在任何时间点通过渲染引擎生成静态站点。&lt;/p>
&lt;h2 id="因果链分析">因果链分析&lt;/h2>
&lt;h3 id="动机分析">动机分析&lt;/h3>
&lt;p>显然，攻击者组织起一批足以扰动 GitHub 风控系统的机器人集群需要不少的时间和金钱开销，若不是出于测试目的，很难想象攻击者会发起无差别攻击。可以认为，这种「恶作剧」是种「报复行为」。可以预见的动机有：恶意竞争，社会工程学攻击，某些群体的嫉妒行为等等。（有待展开&amp;hellip;）&lt;/p>
&lt;h3 id="影响分析">影响分析&lt;/h3>
&lt;p>GitHub Flag Attack 对被攻击对象的影响是不可估计的，必然会间接影响到玩家的现实生活，比如：&lt;/p>
&lt;ol>
&lt;li>部分求职者喜欢在简历或个人宣传页中附上自己的 GitHub Profile 链接；&lt;/li>
&lt;li>部分研究者会在自己的论文预印刊页面以及正刊附件中添加源码实现的索引，而项目仓库八成是放在 GitHub 上的。&lt;/li>
&lt;li>部分玩家依赖 GitHub Pages 部署自己的个人静态站点，如博客站，导航站，在线简历等等。&lt;/li>
&lt;li>部分玩家基于 GitHub Issues 编排日志或周报月刊系统，纪录打卡数据和突发事件等等。&lt;/li>
&lt;/ol>
&lt;p>账号被标记后，这些链接将被路由至 404 页面。一些可预见的概率事件有：候选人向 HR 描述了一个可靠的架构模型然后展示了一个无法访问的仓库链接；或是审稿人发现投稿中的附件链接不可达或是「查无此人」；尽管是个人使用的静态站点，也会造成诸多不便，站长可能需要花费数个小时的时间用于重建镜像仓库、解析 DNS 以及部署 CDN。&lt;/p>
&lt;h2 id="结语及预案">结语及预案&lt;/h2>
&lt;p>我们在工程上设计「预案」时通常会分为「监」「控」两个方面，既要准确捕捉到攻击发起的状态，也要尽可能减少攻击带来的损失。遗憾的是，在本文描述的案例中，似乎很难找到一种完美的权衡，我们不可能做出将所有仓库私有化这种极端的行为；也很难将毫不相干的个人仓库划分到多个组织账号中，这样维护和管理都十分麻烦；尽管是设置其他人不可查看自己的项目列表，攻击者仍可通过 GitHub API 绕过这层限制直接获取目标用户持有的仓库链接，进而发起攻击。&lt;/p>
&lt;p>此外，我们还需注意 GitHub 是一家美国公司，其运营活动受美国法律限制，其品牌形象受美国利益影响。早在俄乌冲突早期，GitHub 就站队乌方，将一大批俄罗斯组织账号及少量的俄罗斯个人开发者账号标记；同样的操作在中东地区开发者账号上也发生过（这也是我支持实名制的国产 Gitee 的主要原因之一，尽管现在仍有许多进步空间）。事出有因，我们不能脱离上下文去批判 GitHub 的这些「制裁措施」，但我想 GitHub 对于大多数中国程序员来说，其存在意义等同于 QQ空间与朋友圈，有太多的大牛在这片交界之地见证自己逐渐成长的过程。&lt;/p>
&lt;p>无论如何，我不希望这份仅属于开发者自己的珍贵回忆最终仅会流向互联网历史归档馆。你也许需要更可靠的 Git 系统， 也许你需要养成良好的备份习惯避免某些珍贵的东西悄然流失，也许你需要一个可靠的备案来保证某些流行项目的可用性。&lt;/p>
&lt;p>回到文章标题「&lt;strong>Git Myself&lt;/strong>」，如何理解它呢？你可以说「守住我的饭碗」也可以是「留住我的影响力」或是「自建 Git Service」。如果你之前没有做过与「舆情」相关的工作，你也许很难作为当事人去想像：朋友圈/QQ空间被永久封禁，百万微博粉丝账号被限流或是呕心沥血数年构建的社区被恶意攻击淹没。这对他们来说，意味着青春记忆的停顿，他们在这里分享自己的小学中学大学，分享生活槽点与职场高光时刻；这对他们来说，是一个打造人设的绝佳平台，是供粉丝亲近自己的机会，是一个见证自己从草根进军娱乐圈的重要盈利工具；这对他们来说，是N多个熬夜通宵敲代码，投入巨额时间成本的满意作品。作为一个遵守 WEB2.0 游戏规则的人，你可能很难想象自己视为珍宝的东西其实是可以被其他人轻易夺走的。&lt;/p>
&lt;p>当然，本文不会去深究这些话题，这些领域知识过于错综复杂（水太深），但无论如何，我希望本文读者都能重视起自己的网络数据，在符合游戏规则的前提下，将属于自己的东西牢牢抓住。&lt;/p></description></item><item><title>『Blog』爬虫之巅，畅想「矛」与「盾」的未来</title><link>https://blog.echosec.top/p/spider_performance/</link><pubDate>Thu, 07 Jul 2022 02:22:14 +0800</pubDate><guid>https://blog.echosec.top/p/spider_performance/</guid><description>&lt;img src="https://blog.echosec.top/p/spider_performance/pexels-geometric-photography-13271914.jpg" alt="Featured image of post 『Blog』爬虫之巅，畅想「矛」与「盾」的未来" />&lt;p>(填坑中&amp;hellip;)&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>矛与盾的界定，双向时间线，停一下，畅想未来。&lt;/p>
&lt;h2 id="captcha的前世今生">CAPTCHA的前世今生&lt;/h2>
&lt;h3 id="字符验证码">字符验证码&lt;/h3>
&lt;p>以 text-to-image 为例&lt;/p>
&lt;h3 id="行为验证码">行为验证码&lt;/h3>
&lt;p>以国内的极验、网易易盾、阿里安全、京东安全为例，涉及高强度的逆向防护，滑动拼图，文字点选，推理拼图，轨迹涂抹，语音验证等丰富的行为验证方案，相关技术步入「&lt;strong>感官挑战&lt;/strong>」阶段。&lt;/p>
&lt;p>曾被信息技术从业人员戏称为 HelloWorld 的 request-based Spider 早已成为村头树下的豚骨拉面。能否处理行为验证，成为爬虫开发者的分水岭。&lt;/p>
&lt;h3 id="问答式验证码">问答式验证码&lt;/h3>
&lt;p>以国外的 hCAPTCHA，reCAPTCHA v2，等前沿服务为例，涉及认知问答、AI对抗、行为检测多点防御。相关技术上升到全新的「&lt;strong>人机挑战&lt;/strong>」阶段。此阶段给出的挑战难题足以放倒人类。&lt;/p>
&lt;h3 id="我不是人类">我，不是人类&lt;/h3>
&lt;p>以国外的 hCAPTCHA，reCAPTCHA v3，Talon service of Epic 等前沿服务为例，涉及驱动特征检测，运动数据检测，威胁等级计算，访客信用水平统计等技术，此处涉及的多种检测策略在国内多以「无感验证」统称。&lt;/p>
&lt;h2 id="无畏的挑战者">无畏的挑战者&lt;/h2>
&lt;p>领域技术迭代过快，乃至自学爬虫的玩家，驾校网培生以及跨行业的零基础开发者，抱着刚学会即淘汰的《Python爬虫错题本》欲哭无泪。这类开发者在这场逐渐内卷的博弈中连「小镇做题家」都算不上，充其量只能是「乡村错题本」。&lt;/p>
&lt;p>各位读者可以脑补以下颇有戏剧性的演化场景：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>刚学会网络请求以及基础的伪装，发现获取不到数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>刚学会如何逆向前端代码，发现实战中的出题人是行业中最聪明的一批算法工程师&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发现无法绕过，需要额外学习使用 &lt;strong>Selenium&lt;/strong>/WebDriver 发起&lt;strong>模拟请求&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发现即使是模拟请求，也“不得不”处理行为验证。于是，开发者开始像机器一样思考，制作能够识别图像，识别语音，理解语义的AI，让网络驱动携带着这些模块上前线答题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一段时间后，开发者逐渐发现即使 AI 能够答对题目，验证仍无法通过，折腾一阵子后发现需要像人类一样思考，制作符合人类上网习惯的鼠标轨迹&lt;strong>行为&lt;/strong>链，然后呢，学都学了，顺带把键盘输入的模仿也专精了吧！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>过了不久，开发者发现一切都回到了原点，但凡是 Selenium 启动的网页，即使是自己手动答题也无法通过验证。折腾一阵子后发现需要让机器人认为「我」是人，开始研究 Chrome 开发者工具以及 BiDi 通信，隐藏浏览器的各项异常特征，尽可能地让 Selenium 启动的网页与手动打开的&lt;strong>网页特征&lt;/strong>一致，甚至不惜自行编译浏览器客户端。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>到此，开发者回顾往昔，发现路上已有绝大多数的同道之人倒下了。但秉持“不忘初心”的信念，开发者仍需在「自证为人」的道路上继续前行。再过不久，开发者已能熟练使用与网页驱动相关的工具技术，随时都能制作深度学习赋能的高性能机器人，秒解所有行为验证难题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>某一天，「问答式验证」出现了，在这场以「常识对决」为游戏规则的博弈中，开发者受到了来自「彼岸」的满满恶意，如果自己不知道这些生而为人就该知道的「常识」，自然也无法培养出优秀的小镇做题家。&lt;/p>
&lt;p>至此，作为防守方的「挨打人」开始主动出击，在世界各地崭露头角，&lt;strong>人机挑战&lt;/strong>时代拉开序幕。&lt;/p>
&lt;p>回望往昔，这是一场尚无硝烟的战争，本是机器人之间的对抗，上升为「挑战者」与「彼岸玩家」之间的对决；本是脑力劳动主导的工作，逐渐演化成了纯粹的体力劳动。无畏的挑战者与彼岸的玩家们凭借着自己对工作负责的态度以及对行业的热爱，在场无限轮回的游戏中，推动着人机验证领域高速发展。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>时至今日，「挑战者」与「彼岸玩家」共同开辟了计算机网络空间安全的一个全新分支。在这场对决中，它们分别饰演着「矛」与「盾」的角色，在对立统一中，它们互相吸取和利用有利于自己的因素而得到发展，在矛盾斗争中，它们相互排斥不断变化最终破坏自身统一，在这场形式多样性的对抗中，矛盾双方协同运动，融合成一个新事物。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>从上帝视角来看，这是一场颇具戏剧性的博弈。如果没有「搅局者」的加入，「反爬虫工程师」至今仍会是地球上的一小股极客团体，但我也无法想象没有人机验证的互联网该如何良性发展。&lt;/p>
&lt;p>当下，对抗恶意流量的安全团队仍是所有技术岗位中最神秘的一批人，有时他们化身白客，守护资本家和客户仅有的数字资产；但有时他们化身黑客，能够组织规模庞大的流量淹没仍处于萌芽阶段的潜在竞争对手。&lt;/p>
&lt;p>这群秉持着技术中立精神却向网络空间安全不断发起挑战的神秘人到底什么来头？风云激荡的二十年里，网络爬虫的形式经历了怎样的升级迭代？本章节以顺向时间线的形式，浅聊一下作为「矛」的网络机器人技术及其相关的行业领军人物。&lt;/p>
&lt;p>&lt;em>待序&amp;hellip;&lt;/em>&lt;/p>
&lt;h3 id="追赶时代的乡村错题本">追赶时代的乡村错题本&lt;/h3>
&lt;h3 id="来自网络驱动的虚假流量">来自网络驱动的虚假流量&lt;/h3>
&lt;h3 id="像人类一样思考">像人类一样思考&lt;/h3>
&lt;h3 id="我不是机器人">我，不是机器人&lt;/h3>
&lt;h2 id="既见未来为何不拜">既见未来，为何不拜？&lt;/h2>
&lt;h3 id="灰度空间的失衡与洗牌">灰度空间的失衡与洗牌&lt;/h3>
&lt;h3 id="防火长城与大航海时代">防火长城与大航海时代&lt;/h3>
&lt;h2 id="畅想矛与盾的未来">畅想「矛」与「盾」的未来&lt;/h2>
&lt;h3 id="年轻人的游戏但是适老化">年轻人的游戏，但是适老化&lt;/h3>
&lt;h3 id="熊掌与鱼兼收并蓄的农场主">熊掌与鱼，兼收并蓄的农场主&lt;/h3>
&lt;h3 id="搅局者web30的韭菜收割机">搅局者，Web3.0的韭菜收割机&lt;/h3>
&lt;h3 id="挣脱形态桎梏奔向虚拟现实社会">挣脱形态桎梏，奔向虚拟现实社会&lt;/h3>
&lt;h3 id="图灵测试20意识与人格的考验">图灵测试2.0，意识与人格的考验&lt;/h3></description></item><item><title>『Blog』VMware 虚拟机流量代理</title><link>https://blog.echosec.top/p/vmware-proxy/</link><pubDate>Sat, 07 May 2022 13:15:46 +0800</pubDate><guid>https://blog.echosec.top/p/vmware-proxy/</guid><description>&lt;img src="https://blog.echosec.top/p/vmware-proxy/unsplash.jpg" alt="Featured image of post 『Blog』VMware 虚拟机流量代理" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本系列博客以 VMware Workstation 16 pro 为例，分享在 Windows11 上启动 Ubuntu 20.04 LTS 虚拟机进行 Python3 项目开发的最佳实践。本章节内容涉及网络连接中较为关键的环节 —— 流量代理。&lt;/p>
&lt;p>推荐阅读：&lt;/p>
&lt;p>&lt;a class="link" href="http://localhost:11014/p/python-best-practices-ide/" target="_blank" rel="noopener"
>『Blog』Python 应用开发最佳实践@环境搭建篇&lt;/a>&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;ol>
&lt;li>本文首发于 &lt;code>2022-05&lt;/code>，如果你是若干年后到访的读者，请注意甄别文章中可能过时的内容，如有其他问题可在评论区提出；&lt;/li>
&lt;li>本文不面向零基础的小白读者，不会涉及软件下载安装等细枝末节的内容，不再赘述相关解决方案中涉及到的主流软件的使用细节。&lt;/li>
&lt;/ol>
&lt;h2 id="虚拟机设置">虚拟机设置&lt;/h2>
&lt;p>在 VMware 「虚拟机设置」中修改「网络适配器（网络连接）」，选择「桥接模式」但不复制物理网络连接状态。这是接管虚拟机代理流量最简单的方式，后文会详细介绍一些基于桥接模式的主流的流量代理解决方案。&lt;/p>
&lt;h2 id="局域网代理方案">局域网代理方案&lt;/h2>
&lt;h3 id="v2rayn">v2rayN&lt;/h3>
&lt;p>介绍使用 &lt;a class="link" href="https://github.com/2dust/v2rayN/releases" target="_blank" rel="noopener"
>v2rayN&lt;/a> 接管虚拟机全局流量的方法。操作前请确保虚拟机网络已被设为「桥接模式」。&lt;/p>
&lt;p>注意：使用的演示版本为 &lt;code>v5.16&lt;/code>；在这个版本中，v2rayN 区分了本地代理以及局域网代理所用的监听的端口。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>启动主机系统代理&lt;/p>
&lt;p>在 v2rayN 中主机上开启「自动配置系统代理」，用你喜欢的方式确认系统代理的运行状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动局域网代理&lt;/p>
&lt;p>在 v2rayN 中依次点击「设置」「参数设置」在「Core：基础设置」中开启 &lt;code>允许来自局域网的连接&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看无线局域网适配器 WLAN&lt;/p>
&lt;p>在主机命令行窗口输入 &lt;code>ipconfig&lt;/code>，找到其中的无线局域网适配器 WLAN 的 IPv4 地址。如果你是有线连接上网，寻找「以太网适配器」的 IPv4 地址即可（可能会打印很多选项，找有默认网关的那一条）。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align='center'>&lt;img src="image-20220507122059354.png" alt="image-20220507122059354" style="zoom:50%;" />&lt;/div>
&lt;ol start="4">
&lt;li>
&lt;p>查看 v2rayN 的局域网代理端口&lt;/p>
&lt;p>通常在软件视图的最下方的边框处可见，找到 HTTP 以及 SOCKS 的局域网代理端口。若你使用的是更早的版本，默认情况下的代理端口是 &lt;code>http:10809 socks:10808&lt;/code>，而在 &lt;code>v5.16&lt;/code> 或更高版本中，软件区分了系统代理和局域网代理，此时的局域网代理端口默认是 &lt;code>http:10811 socks:10810&lt;/code>，如下图所示。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align='center'>&lt;img src="image-20220507120921780.png" alt="image-20220507120921780" style="zoom: 33%;" />&lt;/div>
&lt;ol start="5">
&lt;li>
&lt;p>配置虚拟机网络代理&lt;/p>
&lt;p>打开 Ubuntu 的网络设置，将「网络代理」切换为手动模式，将我们刚才搜集到的（http 以及 socks）路由参数填入即可。下图为参考的填写格式，这与你的网络情况一定不一样，仅供参考。&lt;/p>
&lt;div align="center">&lt;img src="image-20220507122654416.png" alt="image-20220507122654416" style="zoom: 67%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>检查虚拟机网络连接&lt;/p>
&lt;p>查看能否正常访问&lt;a class="link" href="https://www.youtube.com" target="_blank" rel="noopener"
>Youtube&lt;/a>。此外，你还可以 &lt;a class="link" href="http://www.ip111.cn/" target="_blank" rel="noopener"
>显示查询自己的IP地址 (ip111.cn)&lt;/a> 。&lt;/p>
&lt;p>使用系统自带的 Firefox 浏览器访问 Youtube 的结果如下图所示：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507123156186.png" alt="image-20220507123156186" style="zoom:20%;" />&lt;/div>
&lt;h3 id="clash-for-windows">Clash for Windows&lt;/h3>
&lt;p>介绍使用 &lt;a class="link" href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener"
>Clash for Windows&lt;/a> 接管虚拟机全局流量的方法，其他「类 Clash」产品均可举一反三。操作前请确保虚拟机网络已被设为「桥接模式」。&lt;/p>
&lt;p>注意：以下使用的演示版本为 &lt;code>Clash for Windows v0.19.17&lt;/code> ，&lt;code>Clash Core 2022.04.17 Premium(10538)&lt;/code>，所有设置均保持“出厂状态” 。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>启动主机系统代理&lt;/p>
&lt;p>在 Clash for Windows 中启动「System Proxy」，用你喜欢的方式确认系统代理的运行状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动局域网代理&lt;/p>
&lt;p>在 Clash for Windows 中启动「Allow LAN」，并将鼠标移动到「Allow LAN」的位置上，悬停，可以看到窗口弹出了一则提示信息，如下图所示。你需要记下这个 &lt;code>WLAN IPv4&lt;/code> 以及 &lt;code>Port&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507231335305.png" alt="image-20220507231335305" style="zoom:37%;" />&lt;/div>
&lt;ol start="3">
&lt;li>
&lt;p>配置虚拟机网络代理&lt;/p>
&lt;p>打开 Ubuntu 的网络设置，将「网络代理」切换为手动模式，将我们刚才搜集到的路由参数填入即可。下图为参考的填写格式，仅供参考。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507233025258.png" alt="image-20220507233025258" style="zoom: 33%;" />&lt;/div>
&lt;ol start="4">
&lt;li>
&lt;p>检查虚拟机网络连接&lt;/p>
&lt;p>查看能否正常访问一些热门站点。此外，你还可以 &lt;a class="link" href="http://www.ip111.cn/" target="_blank" rel="noopener"
>显示查询自己的IP地址 (ip111.cn)&lt;/a> 。&lt;/p>
&lt;p>使用 Firefox 访问 Google Scholar 检索关键词 &lt;code>Neurocompositional computing&lt;/code> 的结果如下图所示：&lt;/p>
&lt;div align="center">&lt;img src="image-20220507233450859.png" alt="image-20220507233450859" style="zoom: 30%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h2 id="错误排查">错误排查&lt;/h2>
&lt;h3 id="浏览器使用系统代理">浏览器使用系统代理&lt;/h3>
&lt;p>如果上文所述的局域网代理方案无法达到预期，你可能需要进一步调整 Firefox 浏览器代理。&lt;/p>
&lt;p>打开浏览器的「Settings」并依次访问「General」「Network Settings」。在弹出的「Connection Settings」中将代理选项切换至「use system proxy settings」也即使用系统代理，点击「OK」保存配置。新建标签页检查网络连接。&lt;/p>
&lt;p>（当然，如果你是用的是其他浏览器产品，你不应该在 Firefox 里面配置浏览器代理&amp;hellip;&amp;hellip;&lt;/p>
&lt;div align="center">&lt;img src="image-20220507124058496.png" alt="image-20220507124058496" style="zoom:37%;" />&lt;/div>
&lt;h3 id="虚拟机网络代理设置">虚拟机网络代理设置&lt;/h3>
&lt;p>若你在调整 Firefox 浏览器代理为「系统代理」后仍无法正常访问外网，很有可能是你的 IPv4 地址或局域网代理端口填写错误，也有可能是你的软件没有开启「允许局域网连接」的选项，控制变量逐一排查即可。&lt;/p>
&lt;h3 id="局域网动态-ipv4">局域网动态 IPv4&lt;/h3>
&lt;p>如果你出现「昨天都可以上网今天怎么就不行了」的情况，请检查你的 &lt;code>WLAN IPv4&lt;/code> 是否有变化。&lt;/p>
&lt;p>通常情况下国内家用终端物联网设备的局域网 &lt;code>IPv4 地址&lt;/code> 是动态分发的，如果你的物联网设备（如笔记本）从之前的 WIFI 热点（如卧室）中断出重连到其他的 WIFI 热点下（如星巴克），局域网 &lt;code>IPv4 地址&lt;/code> 很可能发生变化。此时按照流程重新检查一下变更后的地址，手动修改虚拟机的网络代理既可。&lt;/p></description></item><item><title>『Blog』Epic Awesome Gamer</title><link>https://blog.echosec.top/p/epic-awesome-gamer/</link><pubDate>Fri, 28 Jan 2022 23:45:18 +0800</pubDate><guid>https://blog.echosec.top/p/epic-awesome-gamer/</guid><description>&lt;img src="https://blog.echosec.top/p/epic-awesome-gamer/pexels-pixabay-219552.jpg" alt="Featured image of post 『Blog』Epic Awesome Gamer" />&lt;h2 id="backstory">Backstory&lt;/h2>
&lt;p>&lt;strong>🔨 分享一个有关立项的故事。&lt;/strong>&lt;/p>
&lt;p>去年月底某友在群里分享了一个他自己 fork 的 &lt;code>epicgames-claimer&lt;/code> 的项目，添加了 &lt;code>Actions&lt;/code> 的特性，能够借助工作流实现定时领周免的需求（非滥用），高能现场如下：&lt;/p>
&lt;div align="center">&lt;img src="image-20220129002530922.png" alt="image-20220129002530922" style="zoom:50%;" />&lt;/div>
&lt;p>当时我正在搓其他项目的代码，甚至还没点开这个链接，只是感觉这个点子感觉挺“曼妙”的，仅仅是留下印象而已。但巧就巧在- -我当时正在搓的项目是与 &lt;code>anti-CAPTCHA&lt;/code> 密切相关的任务。&lt;/p>
&lt;p>直到今年年初，1月14日左右，项目告一段落，有了阶段性的积累，对整个领域的技术模块和特性有了充足的了解（其实非常浅嗯）。在一次无意间的检索中 ，以&lt;code>CAPTCHA&lt;/code> 为关键词又重新搜到了这个项目（原来 Epic 真的可以免费领取游戏！用了老半年的 Epic Games Launcher 都没发现同一个客户端还有个游戏库的选项）。&lt;/p>
&lt;div align="center">&lt;img src="122922274-bb263b00-d363-11eb-8b82-8a3ed6e7e29d.png" alt="122922274-bb263b00-d363-11eb-8b82-8a3ed6e7e29d" style="zoom:50%;" />&lt;/div>
&lt;p>我翻了翻“评论区”，情况不太乐观- -不少玩家反应 &lt;code>CAPTCHA&lt;/code> 阻挡验证的问题，但维护者疏于忙碌，暂时无暇升级项目，同样的报错议题已经累积的一个月之久。车祸现场如下：&lt;/p>
&lt;div align="center">&lt;img src="IMG_20220120_015744.jpg" alt="IMG_20220120_015744" style="zoom: 25%;" />&lt;/div>
&lt;p>当时想着自己对人机挑战略知一二，便翻起了项目源码，看看大佬是如何梳理整个业务流程的。&lt;/p>
&lt;p>但很遗憾&amp;hellip;&amp;hellip;这项工作持续不到 10 分钟我就放弃了。我用成分分析工具解剖了核心业务类&lt;code>EpicgamesClaimer()&lt;/code> 后发现，这个看似朴实无华的玩意，竟然塞进了 59 个类方法，还放入了意义不明的 &lt;code>async&lt;/code> 事件循环，大概情况如下图所示：&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843.png"
width="3840"
height="1998"
srcset="https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843_hu3ba0a31ffbc0b0e3870be7f2f8b557db_997869_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843_hu3ba0a31ffbc0b0e3870be7f2f8b557db_997869_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="461px"
>&lt;/p>
&lt;p>（os：没有讥讽的意思，这里表露的只是我当时的第一反应，确实没见过这样的场面-。-&lt;/p>
&lt;p>至此，一个重头构写「Epic免费人」的想法诞生了。但起初，我是奔着 &lt;code>hCaptcha challenge&lt;/code> 去的，刚积累了这么多料子，正好遇到一个可以练手的挑战，不趁热打铁怎么行，于是我在该楼层下烙下一句“问题不大”后，创建了一个空白仓库，开始设计新项目的技术模型。&lt;/p>
&lt;p>🤦‍♂️emmm&amp;hellip;现在是北京时间 2022-01-29 01:23 博客写到这的时候发现这个仓库被封掉了……真是一言难尽。&lt;/p>
&lt;h2 id="little-changes">Little changes&lt;/h2>
&lt;p>🍜 分享一些本项目中有关「人机挑战」的重点与难点。&lt;/p>
&lt;h3 id="undetected-flow">Undetected Flow&lt;/h3>
&lt;p>📋 &lt;strong>要处理 &lt;code>hCaptcha challenge&lt;/code> 首先要有可以隐藏控制特征的自动化技术。&lt;/strong>&lt;/p>
&lt;h4 id="preview">Preview&lt;/h4>
&lt;p>如果读者和 &lt;code>CAPTCHA&lt;/code> 打交道的时间不够长但又刚好会一点浏览器自动化技术，你可能会抢答“这个反爬用普通的伪装过不去，必须用浏览器自动化！”，大概率是这样，但不够精确，应该改成“无定向的浏览器自动化”技术。&lt;/p>
&lt;p>咱们做个小测试，分别以手动，编写 &lt;code>selenium&lt;/code> 脚本，以及 &lt;code>selenium headless&lt;/code> 脚本的形式访问这个链接 &lt;a class="link" href="https://bot.sannysoft.com/" target="_blank" rel="noopener"
>https://bot.sannysoft.com/&lt;/a> 。&lt;/p>
&lt;p>手工打开的浏览器是我们所谓的“正常特征”，如下图所示（页面中还有很多的参数项，篇幅有限就不多展示了）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129014108862.png" alt="image-20220129014108862" style="zoom:50%;" />&lt;/div>
&lt;p>使用默认参数启动的浏览器会有很多被标红的“异常特征”，如下图所示（页面中还有很多的参数项，篇幅有限就不多展示了）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129014842157.png" alt="image-20220129014842157" style="zoom:80%;" />&lt;/div>
&lt;p>接下来，您可以复制如下代码进行&lt;strong>无头访问&lt;/strong>，并以截图的形式检查回馈参数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">webdriver_manager.chrome&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ChromeDriverManager&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path_screenshot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;stander_headless.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headless&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChromeDriverManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">log_level&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">install&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Chrome&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://bot.sannysoft.com/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save_screenshot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startfile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试结果截图如下：&lt;/p>
&lt;div align="center">&lt;img src="image-20220129015441536.png" alt="image-20220129015441536" style="zoom: 67%;" />&lt;/div>
&lt;p>是不是感觉很惊讶？还在以为其实浏览器自动化可以胜任爬虫的工作吗？&lt;/p>
&lt;p>&lt;code>Selenium Documentation&lt;/code> 中也明确说道，浏览器自动化工具用于爬虫业务并不符合最佳实践的要求，因为 WebDriver 的特征检测技术老早就普及使用了，几乎是和 &lt;code>selenium&lt;/code> 同个时代的技术。&lt;/p>
&lt;p>这时候有的读者可能会说，我们可以添加 &lt;code>ChromeOptions()&lt;/code> 呀。好的，现在尽你所致，把你知道的所有参数都加上，再次访问。你也许会发现表格上的“正常特征”会越来越多（截图展示的仅是部分参数），这是一件好事吗？我们先按下不表，但你是否发现，无论你怎么努力，表格中 &lt;code>WebDriver&lt;/code> 一项始终是“异常的”。好的，现在我明确告诉你，截图中的 &lt;code>WebDriver&lt;/code> 是识别控制流量的关键指标。&lt;/p>
&lt;p>这也解释了为什么处理 &lt;code>CAPTCHA&lt;/code> 要先解决 &lt;code>undetected flow&lt;/code> 的问题。现代化的人机验证都会通过前置的 &lt;code>JavaScript&lt;/code> 脚本捕获用户的页面控制轨迹，一旦驱动的 &lt;code>WebDriver&lt;/code> 指标亮起，你的一切后续操作都是徒增功耗，即使人机挑战“通过”，你也无法获取正确的身份令牌。&lt;/p>
&lt;h4 id="solution">Solution&lt;/h4>
&lt;p>兜了这么大的圈子，这里要介绍一个在业界几乎没有竞品的项目 &lt;a class="link" href="https://github.com/ultrafunkamsterdam/undetected-chromedriver" target="_blank" rel="noopener"
>undetected-chromedriver&lt;/a>。通过它，我们可以安全地隐藏驱动控制特征，将我们所有的业务逻辑安全地送到人机挑战页面。关于这个项目的特性我会另开博客详细介绍，其中大有门道。&lt;/p>
&lt;p>此处，你可以通过如下引导快速复现一个“无踪环境”，并得到驱动测试参数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pip install undetected-chromedriver&lt;span class="o">==&lt;/span>3.1.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Time : 2022/1/27 6:02&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Author : QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github : https://github.com/QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Description:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">undetected_chromedriver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Chrome&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path_screenshot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;undetected_headless.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">headless&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://bot.sannysoft.com/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save_screenshot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startfile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;strong>undetected-chromedriver 无头启动&lt;/strong>&lt;/p>
&lt;p>可以看到，我们在不指定任何参数的情况下，&lt;code>WebDriver&lt;/code> 指标是正常的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;img src="image-20220129022219302.png" alt="Undetected 无头启动" style="zoom:50%;" />
&lt;ul>
&lt;li>
&lt;p>&lt;strong>undetected-chromedriver 正常启动&lt;/strong>&lt;/p>
&lt;p>在正常启动且不指定任何可选参数的情况下，&lt;code>WebDriver&lt;/code> 指标是正常的，不仅如此，其他所有的主要特征都通过了验证，和我们手动打开网站得到的结果几乎是一样的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20220129022411626.png" alt="Undetected 正常启动" style="zoom:50%;" />&lt;/div>
&lt;h4 id="trouble">Trouble&lt;/h4>
&lt;p>到此阶段，我们可以回顾一下 &lt;code>EpicgamesClaimer&lt;/code> 项目中遇到的第一个困难，那便是整个项目与 &lt;a class="link" href="https://github.com/puppeteer/puppeteer" target="_blank" rel="noopener"
>Puppeteer&lt;/a> 强绑定，维护者几乎为每一个原子操作都做了修饰封装，而 &lt;code>puppeteer&lt;/code>（也可称 &lt;a class="link" href="https://pypi.org/project/pyppeteer/" target="_blank" rel="noopener"
>pyppeteer&lt;/a>） 与 &lt;code>Selenium&lt;/code> 一样都是主流的自动化测试框架，并不具备隐秘特征的能力。所以，维护者几乎只能基于 &lt;code>pyppeteer&lt;/code> 的生态寻找类似的解决方案，或基于 &lt;code>pyppeteer&lt;/code> 底层特性寻找突破口，或选择 &lt;code>undetected-chromedriver&lt;/code> 嫁接开发。但无论选择哪一种，代价都是极其惨痛的。&lt;/p>
&lt;h3 id="threat-level">Threat Level&lt;/h3>
&lt;p>📋 正所谓「知己知彼百战不殆」，在硬刚人机挑战之前，我们得先知道 &lt;code>hCaptcha challenge&lt;/code> 的运作逻辑，以及「验证通过」「威胁等级」如何定义，我们才能优雅地通过测试，并将挑战模块无缝地衔入到主线业务中去。&lt;/p>
&lt;p>感兴趣的朋友可以参考一下 M. I. Hossen 等人的攻击方法 &lt;a class="link" href="https://ieeexplore.ieee.org/document/9474292" title="M. I. Hossen and X. Hei, &amp;amp;quot;A Low-Cost Attack against the hCaptcha System,&amp;amp;quot; 2021 IEEE Security and Privacy Workshops (SPW), 2021, pp. 422-431, doi: 10.1109/SPW53761.2021.00061."
target="_blank" rel="noopener"
>doi: 10.1109/SPW53761.2021.00061.&lt;/a>&lt;/p>
&lt;p>文章里详细介绍了人机挑战的前世今生以及当下主流的人机挑战形式；总结了 &lt;code>hCaptcha&lt;/code> 差异特性，并简要说明了一些 &lt;code>element&lt;/code> 的获取思路与模型训练的实验步骤。点击快速打开 &lt;a class="link" href="https://conferences.computer.org/sp/pdfs/spw/2021/893400a422.pdf" title="论文PDF"
target="_blank" rel="noopener"
>PDF&lt;/a> 预览文章。&lt;/p>
&lt;h4 id="preview-1">preview&lt;/h4>
&lt;p>其中有一些值得注意的现象，在论文摘要中作者写道：&lt;/p>
&lt;blockquote>
&lt;p>We evaluate our system against 270 hCaptcha challenges from live websites and demonstrate that it can solve them with &lt;strong>95.93% accuracy&lt;/strong> while taking only &lt;strong>18.76 seconds&lt;/strong> on average to crack a challenge. We run our attack from a docker instance with only 2GB memory (RAM), 3 CPUs, and no GPU devices, demonstrating that it requires minimal resources to launch a successful large-scale attack against the hCaptcha system.&lt;/p>
&lt;/blockquote>
&lt;p>在正文中作者详细解析了数据组成：&lt;/p>
&lt;blockquote>
&lt;p>&amp;hellip;Our deep learning classifier (the Solver) takes &lt;strong>3.79 seconds&lt;/strong> to classify the images (&lt;strong>usually 9&lt;/strong>) in a challenge, on average&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>然后奉上了图3，作者将业务耗时拆分成浏览器自动化的耗时以及图像分类任务的耗时，可以发现浏览器控制用的时间占了一次业务中的绝大部分（符合常识）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129033424831.png" alt="image-20220129033424831" style="zoom:67%;" />&lt;/div>
&lt;p>但其实我是蛮疑惑的，首先是这个 &lt;code>3.79s&lt;/code> 的数据是如何算出来的。我们处理 &lt;code>hCaptcha&lt;/code> 一般有两轮验证一共 18 张图而这里用了&lt;code> usually 9&lt;/code>；其次，当我们的威胁等级足够低时，我们甚至会在激活 &lt;code>checkbox&lt;/code> 后跳过人机挑战。&lt;/p>
&lt;p>然后是 &lt;code> 18.76s&lt;/code> 的平均总耗时其实也是实验条件下的结果，至少拿 Epic 更新身份令牌的行为来说，我们启动「挑战者驱动」可能就要用 15s 。文章中的浏览器操作耗时的具体行为包括「初始化挑战（进入页面加载页面）」「与 &lt;code>checkbox&lt;/code> 交互并激活挑战」「提交挑战」以及「验证挑战是否成功」，忽视了最耗时的图片下载过程，其次在验证挑战是否成功环节，真实业务场景需要进行非常复杂的元素断言，而在实验环境下几乎只用判断按钮是否能继续点就可以（排除判断）说明挑战是否成功。&lt;/p>
&lt;blockquote>
&lt;p>We found that hCaptcha often repeats images across different challenges. We computed the MD5 hashes of &lt;strong>48330 images collected from the hCaptcha challenges&lt;/strong> during our analysis and identifified 9854 redundant images belonging to 1985 sets of identical images.&lt;/p>
&lt;/blockquote>
&lt;p>作者后文说道，他们发现挑战中经常遇到重复的图片，于是用了感知哈希判断在多伦测试中攒下来的图片中有多少重复的。真够狠的爬了五千多次。。&lt;/p>
&lt;h4 id="solution-1">Solution&lt;/h4>
&lt;h3 id="synergy-framework">Synergy framework&lt;/h3>
&lt;p>&lt;strong>📋 协同框架立大功！&lt;/strong>&lt;/p>
&lt;h4 id="preview-2">preview&lt;/h4>
&lt;p>根据上文可知，&lt;code>CAPTCHA&lt;/code> 一般都设有时间限制，一段时间内未通过测试页面元素就会自主刷新过时。我们知道，下载图片恰巧是个经典的网络I/O耗时场景。因此，我不由地想到利用协程技术缩短人机挑战的耗时，提高容错。&lt;/p>
&lt;h4 id="solution-2">Solution&lt;/h4>
&lt;ol>
&lt;li>&lt;strong>轻量可移植的协同任务框架&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>在本项目 &lt;code>utils &lt;/code>中存放着一个轻量化的 &lt;code>Synergy framework &lt;/code>，其核心业务代码可见 &lt;a class="link" href="https://github.com/QIN2DIM/epic-awesome-gamer/blob/main/src/services/utils/accelerator/core.py" target="_blank" rel="noopener"
>CoroutineSpeedup()&lt;/a>。打上 &lt;code>monkey&lt;/code> 鸡血补丁后，协同任务开始运作。&lt;/p>
&lt;ol start="2">
&lt;li>&lt;strong>使用 &lt;code>gevent&lt;/code> 而不是 &lt;code>async&lt;/code>&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;code>gevent&lt;/code> 是作者编写 Python 协程的常用方法。相交于 &lt;code>async&lt;/code> ，使用 &lt;code>gevent&lt;/code> 能够更自如地控制模块的布局与业务的上下文联系，不必为了接口的兼容关系割裂本该完整的函数体；从整体上看，这也能让实现同一逻辑的代码更加规范整洁雅观；从 Python 新手来说，&lt;code>gevent&lt;/code> 不需要改动原始代码的逻辑就能实现协同，这给还未深刻理解 &lt;code>async&lt;/code> 的朋友来说降低了很多的理解门槛。借知乎网友的话就是“手动挡和自动挡的区别”，个人觉得是非常真实了。但此处也有个坑，也是本项目目前遇到的最大技术难题，后文细说。&lt;/p>
&lt;ol start="3">
&lt;li>&lt;strong>45路公交与自行车&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>原先的 &lt;code>for loop&lt;/code> 循环下载一轮挑战的 9 张图片的总耗时为每张图片下载耗时之和，而在协同任务中，总耗时为单图的最长耗时，由此极大缩短数据集拉取的时间。&lt;/p>
&lt;p>在 GitHub Actions 里这是一种体感差距，几乎瞬间拉取，如下图所示。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129044934503.png" alt="image-20220129044934503" style="zoom:67%;" />&lt;/div>
&lt;p>而在国内网络条件下，这就是判定挑战能否开启的守门员指标。从本人的网络条件来说，在不开启代理的情况下，300MB 带宽跑满拉取位于国外服务器上的图片，每张图花费将近 10 秒的时间，如果不引入协同下载的概念，光是下载图片我们都要干等一分半，而同样的时间，已能在工作流中结束一次人机挑战了。&lt;/p>
&lt;h2 id="happy-freebie-claiming">Happy Freebie Claiming&lt;/h2>
&lt;h2 id="reference">Reference&lt;/h2></description></item><item><title>『Blog』v2rayN 订阅更新最佳实践</title><link>https://blog.echosec.top/p/v2rayn-subscribe-update/</link><pubDate>Mon, 13 Dec 2021 22:17:48 +0800</pubDate><guid>https://blog.echosec.top/p/v2rayn-subscribe-update/</guid><description>&lt;img src="https://blog.echosec.top/p/v2rayn-subscribe-update/1805246.png" alt="Featured image of post 『Blog』v2rayN 订阅更新最佳实践" />&lt;h2 id="推荐工序">推荐工序&lt;/h2>
&lt;p>本段简述使用 Windows 桌面代理客户端 &lt;code>v2rayN - V5.9&lt;/code> 更新订阅并优选代理节点的推荐步骤，其他软件同理。&lt;/p>
&lt;h3 id="节点优选">节点优选&lt;/h3>
&lt;p>&lt;strong>Step1：更新订阅&lt;/strong>&lt;/p>
&lt;p>打开软件先更新订阅。&lt;/p>
&lt;blockquote>
&lt;p>注意：在 &lt;code>v5.9&lt;/code> 中可以选择通过代理更新订阅。在旧版本中默认使用直连通信更新订阅。&lt;/p>
&lt;/blockquote>
&lt;div align="center">&lt;img src="image-20220405191102477.png" />&lt;/div>
&lt;ul>
&lt;li>
&lt;p>若开启代理，更新订阅的流量由 v2rayN 转发；若正在使用的订阅已过期（或节点失效），会出现一些不可控的异常输出。&lt;/p>
&lt;div align="center">&lt;img src="image.png" alt="image" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>在一些极端情况下必须使用系统代理更新订阅，如：目标服务器设置了身份认证，或更新订阅需要访问的站点IP已被墙（这种情况下 使用A提供商的节点挂起代理并更新订阅A订阅组可能会出现问题，需要使用其他节点挂起代理）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Step2：等待UI刷新&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>若订阅过期或异常，控制台会显示「订阅更新失败」或不显示节点列表；&lt;/li>
&lt;li>若更新成功，则显示更新后的节点列表。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Step3：测试服务器延迟 ping&lt;/strong>&lt;/p>
&lt;p>测试目标节点是否开放连接，测试目标IP是否被墙。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>快捷键 &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>P&lt;/kbd>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>选中订阅组的 &lt;u>所有节点&lt;/u>，&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>P&lt;/kbd> 批量测试节点延迟。&lt;/p>
&lt;div align="center">&lt;img src="image-20211128181009104.png" style="zoom:50%;" />&lt;/div>
&lt;ul>
&lt;li>若返回正确的 ms 延迟信息，说明节点没有被墙；&lt;/li>
&lt;li>若返回 &lt;code>Timeout&lt;/code> 说明节点无法连接，不可用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Step4：测试节点真延迟&lt;/strong>&lt;/p>
&lt;p>测试目标节点代理功能是否正常运行。真延迟在数值上反应了网页打开的速度。&lt;/p>
&lt;p>实验条件下，真延迟越低，网页响应速度越快（页面元素加载越快），而真延迟与“物理距离”有较大关系。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>快捷键 &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>R&lt;/kbd>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;u>小批量&lt;/u> 选中上一步并未 Timeout 且值得关注的节点，测试节点的真延迟。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>真延迟测试前提是能通过 ping 测试，也即上一步中 ping 出 timeout 的节点已经没有必要进行真延迟测试了。&lt;/p>
&lt;p>这一步输出正常 ms 延迟信息的，说明节点的代理功能正常。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20211128181345144.png" alt="image-20211128181345144" style="zoom:80%;" />&lt;/div>
&lt;p>&lt;strong>Step5：测试服务器速度&lt;/strong>&lt;/p>
&lt;p>用代理下载 &amp;ldquo;&lt;a class="link" href="http://speedtest-sgp1.digitalocean.com/10mb.test%22" target="_blank" rel="noopener"
>http://speedtest-sgp1.digitalocean.com/10mb.test"&lt;/a> ，用时与大小相除。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>快捷键 &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>T&lt;/kbd>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;u>单选&lt;/u> 通过真延迟测试的服务器节点进行测速。选择下载速度最快的节点连接使用既可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若出现 &lt;code>在 WebClient 请求期间发生异常&lt;/code> 并不表示节点不可用（通过真延迟测试的节点的代理功能正常，出现速度测试异常的可能原因是本地网速太慢或目标服务器的负载紊乱）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20211128182356066.png" style="zoom: 80%;" />&lt;/div>
&lt;ul>
&lt;li>
&lt;p>节点服务器速度与本地带宽关系如下（实验期望）：&lt;/p>
&lt;p>此处的「服务器速度」指v2rayN测量值，「本地带宽」指跑测试的实时网速。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">本地带宽&lt;/th>
&lt;th style="text-align:center">服务器速度(limit)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">0~50 Mbps&lt;/td>
&lt;td style="text-align:center">0~2 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">50~100 Mbps&lt;/td>
&lt;td style="text-align:center">2~6 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">100~300 Mbps&lt;/td>
&lt;td style="text-align:center">6~15 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">300~500 Mbps&lt;/td>
&lt;td style="text-align:center">15~27 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">500~1k Mbps&lt;/td>
&lt;td style="text-align:center">27~ Mbps&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>这是个玄学变量关系图。这个映射关系与当前时段线路拥塞状况，本地实时带宽状况，节点服务器负载状况（或端口限速）等多种变量有关，并不是个能严格控制的映射关系。&lt;/p>
&lt;p>实际上，当服务器速度（观测值）有 4~5 Mbps （行话油管速度四万左右）已经能流畅观看 4K Playing bitrate Netflix，也能“秒开” 4K Youtube 视频。&lt;/p>
&lt;p>上表给出的建议方案较为保守。一般情况下，你的 Connection Speed 大于 2.2Mbps 就能几乎不卡顿地观看 4K Youtube 视频（行话油管速度两万五）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="总结与注意事项">总结与注意事项&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>除了 Ping 测试，其他测试都不可一下子选中所有节点服务器操作，否则会出现大规模的数据偏差。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>真延迟测试：建议根据个人喜好手动选择 remark 标注的地区节点，进行小批次的分段测试。&lt;/p>
&lt;p>推荐使用的地区节点降序排列如下：&lt;/p>
&lt;p>&lt;strong>香港 &amp;gt; 新加坡 &amp;gt; 日本 &amp;gt; 韩国 &amp;gt; 美国 &amp;gt; 其他&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>速度测试：建议单选测速。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>若订阅服务器IP / 域名被墙（无法更新订阅或无法通过 ping 测试），你需要使用代理更新订阅，也即使用其他家的节点挂起本地全局代理后更新被墙订阅。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>v2rayN 的节点测试功能并不严谨，当你认为测试结果明显不符预期，可重复测试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>显然，ping 延迟和代理网速没有必然联系。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个明显的实验结论是：当你能跑满本地带宽 100Mbps 且代理节点的端口限速 ≥ 100Mbps 时，必然能畅通无阻地浏览 4K Youtube Video。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="边缘测试">边缘测试&lt;/h2>
&lt;h3 id="多快网速可看-4k-youtube-video">多快网速可看 4K Youtube Video？&lt;/h3>
&lt;blockquote>
&lt;p>数据来源：&lt;a class="link" href="https://support.google.com/youtube/answer/78358?hl=zh-Hans" target="_blank" rel="noopener"
>系统要求 - YouTube帮助 (google.com)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">视频分辨率（Res）&lt;/th>
&lt;th style="text-align:center">建议的持续速度（Connection Speed）&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">4k&lt;/td>
&lt;td style="text-align:center">20 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">高清1080P&lt;/td>
&lt;td style="text-align:center">5 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">高清 720P&lt;/td>
&lt;td style="text-align:center">2.5 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">标清480P&lt;/td>
&lt;td style="text-align:center">1.1 Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">标清360P&lt;/td>
&lt;td style="text-align:center">0.7 Mbps&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>设备当前可看的分辨率组与本机硬件配置，网速以及浏览器有关。例如，截止至 2021-11-29，几乎所有手机/平板仅能观看最高 1080P 的视频；绝大多数 Windows 笔记本仅能观看最高 4K 的视频，而近几代 macOS 笔记本可解码并观看 8K HDR 视频。&lt;/p>
&lt;h3 id="如何突破代理速度瓶颈">如何突破代理速度瓶颈？&lt;/h3>
&lt;p>推荐顺序：升级本地带宽套餐 &amp;gt; 升级无线路由器配置 &amp;gt; 升级代理配置&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>升级本地带宽套餐（提高网速上限）&lt;/strong>&lt;/p>
&lt;p>特指从 ≤100 Mbps 的本地带宽套餐提升至更高级别，若已满足则无需调整。&lt;/p>
&lt;p>升级带宽套餐成本最低，带来的提升最明显。&lt;/p>
&lt;p>若你使用软路由有线桥接主路由，使用 Friendly ARM NanoPI R2S 可接管的忙时带宽为 800 Mbps（实验条件下的极限值），也即一般情况下，家用带宽 ≤ 500 Mbps 都可以跑满，无需升级。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>升级无线路由器配置（提高网速下限）&lt;/strong>&lt;/p>
&lt;p>当你的本地带宽套餐 ≤ 100 Mbps 时不考虑本方案。&lt;/p>
&lt;ul>
&lt;li>若为普通家庭无线上网环境（非无线桥接，非 Mesh 组网环境，非网线直连），建议摆在客厅的无线路由功率 3000M+（营销行话：双频千兆无线路由器，而且不是 1 千，是 3 千；官方售价一般￥250+）。&lt;/li>
&lt;li>若是 6 人左右的高校宿舍使用，建议无线路由器功率 1600~3000M。&lt;/li>
&lt;/ul>
&lt;p>路由厂商推荐顺序：小米 &amp;gt; TP-Link &amp;gt; 华为，主要考虑因素为性价比。&lt;/p>
&lt;p>升级无线路由器配置的根本目的是提高「带宽升级」带来的收益，也即提升代理速度的下限。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>升级代理配置（提升代理质量，也即提升网速稳定性）&lt;/strong>&lt;/p>
&lt;p>当你的本地带宽套餐 ≤ 100 Mbps 时不考虑本方案。&lt;/p>
&lt;p>本方案包括但不限于“升级机场套餐”“自建节点机房更换（线路优选）”&lt;/p>
&lt;p>当然，若你使用的是白嫖节点，发现当前节点明显跑不满带宽时更换其他白嫖节点是最便捷的“瓶颈突破”方案。一般情况下，公网上暴露的白嫖节点都难以跑满带宽，横向比较下优选既可。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>升级机场套餐&lt;/strong>&lt;/p>
&lt;p>仅当 &lt;strong>端口限速 &amp;lt; 带宽速度&lt;/strong> 且有更快代理网速 &lt;strong>需求&lt;/strong> 时更换。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自建节点机房更换（线路优选）&lt;/strong>&lt;/p>
&lt;p>不作介绍（本文面向的读者群体独自操作此种方案有反向优化风险）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>『Blog』V2RSS云彩姬最佳实践（阶段Ⅰ）</title><link>https://blog.echosec.top/p/v2rss-best-practice/</link><pubDate>Mon, 13 Dec 2021 22:15:59 +0800</pubDate><guid>https://blog.echosec.top/p/v2rss-best-practice/</guid><description>&lt;img src="https://blog.echosec.top/p/v2rss-best-practice/gcc06ab1cf.jpg" alt="Featured image of post 『Blog』V2RSS云彩姬最佳实践（阶段Ⅰ）" />&lt;h2 id="项目简介与使用指南">项目简介与使用指南&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider" target="_blank" rel="noopener"
>V2RSS&lt;/a> 是一个能对全球范围内基于 &lt;a class="link" href="https://github.com/Anankke/SSPanel-Uim" target="_blank" rel="noopener"
>SSPanel-Uim&lt;/a> 框架产出的服务提供商进行垂直挖掘的「生态矿机」；能够自下而上地生成针对主流协议头的「聚合采集」任务；能够自我消化并产出相较于 &lt;a class="link" href="https://github.com/zu1k/proxypool" target="_blank" rel="noopener"
>proxypool&lt;/a> 更加纯净可靠的代理节点；具备自主发现，服务自愈等强大的生产特性。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>有关云彩姬（panel）的介绍详见 &lt;a class="link" href="https://blog.echosec.top/v2rss-docs/zh/docs/user/v2rss-cli/overview/" target="_blank" rel="noopener"
>技术文档&lt;/a> ，了解软体获取方法以及功能介绍。&lt;/li>
&lt;li>有关云彩姬（public-service）的介绍详见 &lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider" target="_blank" rel="noopener"
>项目仓库&lt;/a>，了解服务部署方法。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="最佳实践">最佳实践&lt;/h2>
&lt;h3 id="synergy与延迟反射机制">Synergy与延迟反射机制&lt;/h3>
&lt;h4 id="简介">简介&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>synergy 在计算机领域中有“协作”“协同”的定义；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>synergy 在大多数情况下 与「延迟反射」一起使用，并称「协同反射」，是一个在 &lt;code>v2rss v4.5.5&lt;/code> 版本中开源的模式；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>synergy 基于集群运行，具备「任务超载」「服务自愈」等高级特性，即使在所谓高峰期也能高效完成协同任务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="特性">特性&lt;/h4>
&lt;p>客户端玩家无需关心「协同反射」的上游实现逻辑。「协同反射」在客户端的表现为：能通过协同注册的方式&lt;del>拉起不可用节点，续订过期链接，&lt;/del> 延拓订阅可用流量，而这种延拓具有一定的延迟回馈。&lt;/p>
&lt;p>也即当您使用客户端请求/获取一条订阅链接并在更新订阅后通过 remark-label 得知订阅可用流量仅有 1GiB/2GiB/几十MiB 时，不必着急质疑上游服务质量，您可以等待一段时间后更新订阅，体会「synergy」机制带来的体验升级——当前订阅的可用流量持续增长（更新订阅后通过 remark-label 观察 ），这个过程将在 30~120s 内完成，可用流量将增长 10GiB+。&lt;/p>
&lt;p>在 &lt;code>v2rss v4.5.6&lt;/code> 服务优化版本中，「延迟」的概念被逐渐淡化。“流量延拓”的行为被桥接至消息队列中，也即每当有新的链接入库，「synergy」机制就会生效 ，为 proxy-pool 中的订阅延拓可用流量。换句话说，大多数情况下，用户获取到的链接的可用流量已被完整“延拓”；仅当需求高峰时，synergy 来不及执行，用户才会获取到“正在被处理”（订阅当前的剩余流量明显不满足日常需求）的订阅链接。&lt;/p>
&lt;h3 id="警惕重用与覆盖">警惕重用与覆盖&lt;/h3>
&lt;h4 id="简介-1">简介&lt;/h4>
&lt;p>&lt;code>v2rss 客户端&lt;/code> 使用 &lt;code>easygui&lt;/code> 编写，是一个纯静态前端面板（这是云彩姬 panel 敏捷开发中的遗留 BUG），即便数据端使用 redis 高速缓存维护 proxy-pool，也无法应对「请求覆盖」等并发需求场景。&lt;/p>
&lt;p>换句话说，用户通过「查看订阅」观察到的订阅列表可能已经变更，可能的改动为：其他用户取链接，上游服务清除无效订阅，此时用户依据可视内容而选取的链接很可能是“已被获取的链接”以及“已被清除的无效链接”。后一种情况较为罕见，而一旦出现前一种情况，就非常麻烦了。绝大多数服务提供商都会限制 low-level 节点的设备并行连接数，这种限流机制通常是通过逻辑脚本进行监听的，当多个IP共享同一订阅并触发断流机制时，代理用户的订阅链接将被重置（轻则流量清零重则删号，这是服务提供商用以防止流量泄露的常用方案）。&lt;/p>
&lt;h4 id="推荐用法">推荐用法&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>使用「快速获取」替代「查询获取」&lt;/p>
&lt;p>快速获取操作依靠 redis 自带的机制运行，具有全局原子性，不会引发上文所述的恶劣情况（redis 常用于百万并发的应用场景，而由云彩姬 panel 的并发量一般情况下不会超过 2 位数，放心使用）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>减少「查询」与「获取」间的衔接用时（🤷‍♂️）&lt;/p>
&lt;p>如上文所述，节点列表反应的并不是 proxy-pool 的实时状态，减少操作衔接用时可以避免获取到“已被其他用户获取”的订阅，但实际上这无法避免这条链接被其他用户获取（也即B用户在你获取订阅前查询 proxy-pool，那么你已获取的链接依然会出现在他的 panel 中，他有 &lt;code>1/pool_siz&lt;/code> 的概率点中你已获取的链接👀）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="user_profiling-与-beat_dance">User_profiling 与 beat_dance&lt;/h3>
&lt;p>采集器会根据群体画像（基于&lt;code>Relative Daily Activity Figures&lt;/code>，&lt;code>Action Value&lt;/code> 以及 &lt;code>Corrected Accuracy&lt;/code>）调整任务的发起顺序（原子概率）。&lt;/p>
&lt;ul>
&lt;li>&lt;code>Relative Daily Activity Figures&lt;/code>：群体喜好与需求量。建立“节点速度”“可用时长”“一次性可用流量区间”等喜好程度标签。&lt;/li>
&lt;li>&lt;code>Action Value&lt;/code>：运行评分，与资源占用率和获取效率有关。&lt;/li>
&lt;li>&lt;code>Corrected Accuracy&lt;/code>：模型会根据实时的需求变动预测下一时间段的需求走向，并根据观测值不断修正并精确画像模型。&lt;/li>
&lt;/ul>
&lt;p>呼吸节拍（beat dance）是一个协调运行实例的上层抽象，它基于定时任务和群体画像（user profiling）生产工作周期稳定，带有“运行时停顿”等行为特征的运行实例。&lt;/p>
&lt;p>以上两个机制共同决定了采集器的启动权限，启动时间，工作时长，运行功率以及运行时各个生命周期间的休眠时间。&lt;/p>
&lt;p>开放使用的 &lt;code>proxy-pool&lt;/code> 容量较低，以减轻不可抗力因素与恶意行为对数据集造成污染。一般情况下 &lt;code>pool-length&lt;/code> ≤ 50 &amp;lt; &lt;code>pool-cap&lt;/code>。&lt;/p></description></item><item><title>『Blog』Python 应用开发最佳实践@环境搭建篇</title><link>https://blog.echosec.top/p/python-best-practices-ide/</link><pubDate>Sat, 13 Nov 2021 15:17:14 +0800</pubDate><guid>https://blog.echosec.top/p/python-best-practices-ide/</guid><description>&lt;img src="https://blog.echosec.top/p/python-best-practices-ide/23591f5.jpg" alt="Featured image of post 『Blog』Python 应用开发最佳实践@环境搭建篇" />&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>本文总结截止至 &lt;strong>2022年06月&lt;/strong>，Python 开发环境的最佳实践（以 Windows 为例）。从大型应用和小型脚本项目两个角度出发提供规范化的环境搭建思路，并尽可能地避免环境搭建中的偶发性 BUG。&lt;/p>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>总体思路如下：&lt;/p>
&lt;ul>
&lt;li>大型项目使用 &lt;a class="link" href="https://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="noopener"
>Pycharm&lt;/a> + &lt;a class="link" href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener"
>Miniconda&lt;/a>搭建开发环境；&lt;/li>
&lt;li>小型脚本项目使用 &lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>Visual Studio Code&lt;/a> 及其自带编译组件搭建开发环境。&lt;/li>
&lt;/ul>
&lt;p>总体上建议打算长期学习 Python 的开发者使用第一种方案，而后一种方案适用于将 Python 作为第二语言（辅助语言），并已完全掌握 VS Code 使用套路的玩家。&lt;/p>
&lt;p>本篇博客的受众可能并不包含完全零基础的小白玩家，任何疑问都可在评论区留言，本人会一一答复。&lt;/p>
&lt;h2 id="pycharm--miniconda">Pycharm + Miniconda&lt;/h2>
&lt;p>两款软件的下载安装是并行的，不必区分先后顺序，可以同时下载安装配置。可在一款软件安装读条时可以操作另一款软件，仅在明文提示需要停顿的地方切换操作。&lt;/p>
&lt;h3 id="install-pycharm-edition">Install Pycharm Edition&lt;/h3>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>总体安装流程可参照 &lt;a class="link" href="https://www.runoob.com/w3cnote/pycharm-windows-install.html" target="_blank" rel="noopener"
>菜鸟教程&lt;/a>（不过也没啥好参照的，Windows 安装就是点「下一步」就完事了）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>官方下载地址 &lt;a class="link" href="https://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="noopener"
>Jetbrains&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>此处以社区版（Community）安装流程说明「需要特殊处理」的步骤，没有说明的地方点击「下一步」既可。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Choose Install Location&lt;/strong>&lt;/p>
&lt;p>选择安装路径。当您的设备区分盘符时，一定选择非系统盘存储。创建一个或选择一个专门用于存储编程工具的文件夹安装 Pycharm，这尤其重要，而且路径中的任意一层不得出现中文，尽量不要出现空格。&lt;/p>
&lt;p>需要额外注意的是，Pycharm 会自动为软件本体包裹一层文件夹（如下图所示的&lt;code>Pycharm Community Edition 2021.2.3&lt;/code>），若你下载的（其他软件）的 Destination Folder 不显示包裹的文件夹名，务必手动创建一个「子文件夹」将其包裹，否则你安装的文件可能会散落到你选择的目录下。若不注意，你的工具文件夹就会被污染，各种配置文件或核心文件散落在文件夹中，后期打扫时动都不敢动。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113152838338.png" alt="image-20211113152838338" style="zoom:67%;" />&lt;/div>
&lt;p>如下图所示为作者常用设备中，「专门用于存储编程工具的文件夹」的内容及存储路径。可见此目录存放于路径 &lt;code>E:\\ProjectFire&lt;/code>（非系统盘+英文路径），此目录下除了 &lt;code>Pycharm&lt;/code> 还存放了其他常用的开发工具，比如下文将要介绍的 &lt;code>Miniconda&lt;/code> 以及 &lt;code>Microsoft VS Code&lt;/code>。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524023055864.png" alt="image-20211113152950647" style="zoom: 50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Installation Options&lt;/strong>&lt;/p>
&lt;p>配置安装选项。以「 2021.2.3 Pycharm Community Edition」 安装面板为例。解释相关配置项的含义及其在开发环境中的具体作用，并给出配置建议。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113153013684.png" alt="image-20211113153013684" style="zoom: 67%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Create Desktop Shortcut&lt;/p>
&lt;p>创建桌面快捷方式。不作建议，开心就好。此处为了操作的连贯性，可以勾选，免得安装完毕后软件本体不自动打开，还得花时间找软件比较麻烦，环境配置完成后可手动删除快捷方式。&lt;/p>
&lt;p>当然若你使用 &lt;a class="link" href="https://u.tools/" target="_blank" rel="noopener"
>uTools&lt;/a> 等优秀的桌面工具，可以无视此段介绍。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Update Context Menu&lt;/p>
&lt;p>更新上下文菜单。当你在文件夹中右键空白处，可在「右键菜单」中选择以当前文件夹为根启动 Pycharm。推荐勾选，这不会影响所谓系统性能，当你想在本地快速阅读某个 GitHub 项目源码时，可在本地空白文件（比如桌面新建文件夹）Clone 代码，然后以此种方式快速启动 Pycharm。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113154026804.png" alt="image-20211113154026804" style="zoom: 50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Update PATH Variable(restart needed)&lt;/p>
&lt;p>将 Pycharm 软体的 「bin 文件」添加至系统环境变量。推荐勾选，重启生效。建议在安装完毕后选择 「I want to manually reboot later」并在 Miniconda 安装配置后一并重启。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create Associations&lt;/p>
&lt;p>创建软链映射，打开 &lt;code>.py&lt;/code> 格式文件时以 Pycharm 作为编辑器启动。不推荐勾选。&lt;/p>
&lt;p>Pycharm 显然不是一个轻量的集成开发环境。当你仅想阅览某个 &lt;code>.py&lt;/code> 文件的代码时，使用 Pycharm 打开并不是个明智的选择，这是个启动速度相对较慢的解决方案。无论是否有其他替代方案，都不建议使用 Pycharm 启动，如果实在不妥，你用记事本打开都行。&lt;/p>
&lt;p>举个不恰当的例子，使用 Pycharm 单独启动某个 &lt;code>.py&lt;/code> 文件，相当于看个 15s 的短视频还要非常弱智地看 15s 广告。当然如果你的设备有 32GB+ 内存，从硬件层面就足以秒开一切 Jetbrains IDE，可以无视此段介绍。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>
&lt;p>&lt;strong>Garbage Collection&lt;/strong>&lt;/p>
&lt;p>安装步骤中不存在这步。此处用于说明我们从官网拉取下来的仅是下载器，当我们使用下载器安装软体后，可将下载器安全移除，回收其占用的空间。&lt;/p>
&lt;p>同样，需要一个良好的习惯，在非系统盘符专门创建一个文件夹管理各个软件进程的「运行缓存」或「下载缓存」。下图路径为作者用于管理浏览器下载缓存的目录，红色箭头的标记目标为下载器本体，可将其安全删除。&lt;/p>
&lt;img src="image-20211113161040326.png" alt="image-20211113161040326" style="zoom:67%;" />
&lt;/li>
&lt;/ol>
&lt;h3 id="pycharm-settings">Pycharm Settings&lt;/h3>
&lt;p>以你喜欢的方式打开刚安装好的 &lt;code>Pycharm Community Edition&lt;/code>。&lt;/p>
&lt;img src="image-20211113164718097.png" alt="image-20211113164718097" style="zoom:50%;" />
&lt;p>此处我们不需要迅速实现所谓「Hello World」打印项目，而应该先着手于调整下文所述的最佳实践配置。&lt;/p>
&lt;p>举个不恰当的例子，就像上了车，我们应当习惯于先调整后视镜，调整座椅，检查各项机能，寄上安全带，调整舒服的坐姿，在车况安全的情况下起步。入门任何技术栈都应当如此，所谓「工欲善其事必先利其器」指的不仅仅是挑选一款强大的工具，更要学会如何充分发挥它的优势，让它成为符合自己使用习惯的生产力伙伴。&lt;/p>
&lt;p>而退一步讲，我们暂时还没有配置 Python 解释器，是无法正常运行 Python 代码的。&lt;/p>
&lt;h4 id="marketplace">Marketplace&lt;/h4>
&lt;p>安装对你来说可以降低这款编辑器使用门槛的必要插件，此处推荐几款作者在日常编码中较为常用的第三方插件。&lt;/p>
&lt;p>请注意，插件的安装或更新在重启软件后生效。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Chinese(Simplified) Language Pack / 中文语言包&lt;/strong>&lt;/p>
&lt;p>此款插件可以汉化 Pycharm，汉化进度与软件最新特性保持一致。在插件市场中检索 「Chinese」既可获取插件。&lt;/p>
&lt;img src="image-20211113165038769.png" alt="image-20211113165038769" style="zoom: 50%;" />
&lt;p>重启软件后，界面汉化。&lt;/p>
&lt;img src="image-20211113165217984.png" alt="image-20211113165217984" style="zoom: 50%;" />
&lt;p>当然，此处需要提个醒，此步骤仅仅是降低「上手门槛」，接触编程必须熟悉常用的领域词汇，当你足够熟悉这些概念的时候，可适时停用此插件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Translation&lt;/strong>&lt;/p>
&lt;p>这是一款能够嵌入在 Pycharm 中的翻译软件，通过它，我们可以实现代码上下文的「划词翻译」「语义文档」等比较方便的功能。&lt;/p>
&lt;p>插件市场中检索「Translation」既可获取。&lt;/p>
&lt;img src="image-20211113165921127.png" alt="image-20211113165921127" style="zoom:50%;" />
&lt;p>如下图所示为该插件上下文「划词翻译」的大致效果：&lt;/p>
&lt;div align="center">&lt;img src="image-20211117214825627.png" style="zoom:50%;" />&lt;/div>
&lt;p>当然也可以反向操作，如下图所示。这是个「可替换缓存」菜单，点击候选项可快速替换选中内容。&lt;/p>
&lt;div align="center">&lt;img src="image-20211117215227331.png" style="zoom:50%;" />&lt;/div>
&lt;p>目前插件支持四种翻译引擎，如下图所示。Google 翻译可以使用免费的 API，当然其他的也是免费的，但需要自行配置 &lt;code>Token &lt;/code> 以及 &lt;code>Secret ID&lt;/code>。插件默认使用 Google 翻译引擎，相关设置可在「设置（Settings）」→「工具（Tools）」→「翻译（Translation）」里设置。&lt;/p>
&lt;div align="center">&lt;img src="image-20211117215423229.png" alt="image-20211117215423229" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h4 id="customize">Customize&lt;/h4>
&lt;p>调整对你来说比较舒服的默认主题样式以及键盘映射。编码是一个耗时费力需要长时间专注的工作，请对你的眼睛好点。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113170341583.png" alt="image-20211113170341583" style="zoom:50%;" />&lt;/div>
&lt;p>推荐使用的 Python 编程字体为 &lt;code>Source Code Pro&lt;/code>，&lt;code>JetBrains Mono&lt;/code>，字号和行距与你的工作条件以及编码风格有关。&lt;/p>
&lt;h4 id="keymap">Keymap&lt;/h4>
&lt;blockquote>
&lt;p>建议作为手册查阅，在开发环境配置成功后回看。（持续更新&amp;hellip;&amp;hellip;）&lt;/p>
&lt;/blockquote>
&lt;p>这里总结了一些 Pycharm 中可以提高生产力的快捷键。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>格式化代码&lt;/strong> &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>Alt&lt;/kbd> + &lt;kbd>L&lt;/kbd>&lt;/p>
&lt;div align="center">&lt;img src="gt323.gif" alt="gt323" style="zoom:50%;" />&lt;/div>
&lt;p>值得一提的是，这与 TIM/QQ/网易云音乐 的默认热键冲突，建议修改这些软件的配置。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>运行上下文程序&lt;/strong> &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd>&lt;/p>
&lt;p>详见下文 Python Interpreter 最佳实践中的 &lt;a class="link" href="#best_run" >「run」&lt;/a>部分介绍。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="other">Other&lt;/h4>
&lt;blockquote>
&lt;p>建议作为手册查阅，在开发环境配置成功后回看。（持续更新&amp;hellip;&amp;hellip;）&lt;/p>
&lt;/blockquote>
&lt;p>这里总结了一些 Pycharm 中可以提高生产力的设置。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>调整粘性内存，加快 Pycharm 响应速度。&lt;/strong>&lt;/p>
&lt;p>在菜单栏中选择 「Help」 → 「Change Memory Settings」&lt;/p>
&lt;div align="center">&lt;img src="image-20211127120842747.png" alt="image-20211127120842747" style="zoom:50%;" />&lt;/div>
&lt;p>如下图所示为作者设置的 &lt;code>Maximun Heap Size：12288MiB&lt;/code> ，参考设备的物理内存为 16GB，根据你自己的情况设置。&lt;strong>此处需要留意 MiB 和 MB 是不一样的计量单位&lt;/strong>，详见 &lt;a class="link" href="https://www.gbmb.org/mib-to-mb" target="_blank" rel="noopener"
>MiB to MB Conversion&lt;/a>。&lt;/p>
&lt;div align="center">&lt;img src="image-20211127121015826.png" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>调整 Code Completion，提高代码补全效率&lt;/strong>&lt;/p>
&lt;p>打开设置，选择 「Editor」→「General」→「Code Completion」，将 &lt;code>Match case&lt;/code> 反选。&lt;/p>
&lt;img src="image-20211127121948279.png" alt="image-20211127121948279" style="zoom:50%;" />
&lt;p>&lt;code>Match case&lt;/code> 根据特征字符进行编码补全。我们反选后，我们的代码中仅需出现目标对象/方法/函数的任意大小写字符仅可触发推荐补全，非常方便。&lt;/p>
&lt;p>Python 编程规范中，习惯上使用大驼峰命名类变量（Class），使用蛇形法命名方法（Method）和函数（function）。&lt;/p>
&lt;ul>
&lt;li>大驼峰：不同单词首字母大写如 &lt;code>CoroutineEngine()&lt;/code>&lt;/li>
&lt;li>蛇形：统一小写不同单词用下划线&lt;code>_&lt;/code>隔开如 &lt;code>handle_html()&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>显然，编码过程中频繁切换大小写很容易把中文输入法给按出来，打断我们的编码思路，是个非常搞心态的事情。&lt;/p>
&lt;p>下图所示即为全特征索引补全的效果。&lt;/p>
&lt;div align="center">&lt;img src="image-20211127122427063.png" alt="image-20211127122427063" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3 id="install-miniconda">Install Miniconda&lt;/h3>
&lt;blockquote>
&lt;p>官网下载 &lt;a class="link" href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener"
>Miniconda — Conda documentation&lt;/a>。在官网 &lt;code>Latest Miniconda Installer Links&lt;/code> 中选择你所使用的操作系统对应的二进制文件。如下未说明的配置项保持默认继续下一步即可。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Choose Install Location&lt;/strong>&lt;/p>
&lt;p>选择安装目录。与上文所述观点一致。我们选择安装目录后，Destination Folder 处并未显示 Miniconda 自带的包裹文件名，为了防止上文所述的「散落污染」问题，我们手动补全自定义文件名包裹安装包，不存在的文件夹会自动创建。&lt;/p>
&lt;p>如下图所示，选择 &lt;code>E:\ProjectFire\&lt;/code> 为安装目录，并手动补全 &lt;code>Miniconda&lt;/code> 包裹文件。建议将 Miniconda 和 Pycharm 放在&lt;u>同一目录&lt;/u>下。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524022858712.png" alt="image-20211113173835527" style="zoom: 67%;" />&lt;/div>
&lt;p>&lt;strong>Advanced Installation Options&lt;/strong>&lt;/p>
&lt;p>勾选 &lt;code>Add Miniconda3 to my PATH environment variable&lt;/code> 以及 &lt;code>Register Miniconda3 as my defaulty Python 3.9&lt;/code>&lt;/p>
&lt;div align="center">&lt;img src="image-20220524023626100.png" alt="image-20220524023626100" style="zoom:67%;" />&lt;/div>
&lt;h3 id="python-interpreter">Python Interpreter&lt;/h3>
&lt;h4 id="new-project">New Project&lt;/h4>
&lt;p>回到 Pycharm，以你喜欢的方式「新建项目」。如下图所示为新建项目所需配置的基本参数：&lt;/p>
&lt;div align="center">&lt;img src="image-20220524024602879.png" alt="image-20211113180327178" style="zoom:50%;" />&lt;/div>
&lt;p>默认情况下，虚拟环境名与我们的项目名保持一致。&lt;/p>
&lt;p>点击确定后，Pycharm 会帮助我们自动创建项目文件，虚拟环境文件，并以项目根目录为源码根启动编码窗口，我们等待环境索引完成后便可进行下一步操作。&lt;/p>
&lt;p>&lt;strong>注意！！&lt;/strong> 若你在执行创建指令的过程中遇到了 &lt;code>CondaHTTPError&lt;/code> ，你需要重启计算机后再回到本教程。&lt;/p>
&lt;p>下图所示为 Pycharm 启动后的界面，图中已标记需要重点关注的组件。&lt;/p>
&lt;img src="image-20220524025816319.png" alt="image-20220524025816319" style="zoom:67%;" />
&lt;h4 id="terminal">Terminal&lt;/h4>
&lt;p>&lt;strong>如何优雅地使用命令行工具？&lt;/strong>&lt;/p>
&lt;p>Pycharm 自带运行终端，通过 「终端（Terminal）」，我们可以自动激活当前 Conda 虚拟环境，并基于当前项目路径运行指令。请不要再根据某些教程的指引单独启动 &lt;code>cmd.exe&lt;/code> ，然后又遇上各种「环境变量配置」或是「命令不存在」的低级问题了。&lt;/p>
&lt;p>点击 Pycharm 界面中的「终端（Terminal）」启动组件（快捷键 &lt;kbd>Alt&lt;/kbd> + &lt;kbd>F12&lt;/kbd>），如下图所示。&lt;/p>
&lt;img src="image-20220524030401515.png" alt="image-20220524030401515" style="zoom:50%;" />
&lt;p>此处需要额外注意的是，我们必须确保「终端使用的虚拟环境」与「聚焦编码区所使用的虚拟环境」保持一致。如上图所示，终端激活的环境名为「base」而当前的聚焦环境是「pythonProject」不一致，需要切换终端使用的虚拟环境。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方案一：点击上图标注的🔽符号切换命令行工具，选择「Command Prompt」。该终端激活后自动附带当前聚焦编码区所使用的虚拟环境。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方案二：若上述方案不起作用，可在当前命令行中输入 &lt;code>conda activate [envName]&lt;/code>，也即当前的开发环境名为「pythonProject」，运行指令 &lt;code>conda activate pythonProject&lt;/code> 切换虚拟环境：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20220524030822330.png" style="zoom:50%;" />&lt;/div>
&lt;ul>
&lt;li>
&lt;p>其他情况：若你首次打开的终端中，仅出现了命令行终端的执行路径，未出现括号圈起来的虚拟环境名，按方案二处理即可。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524031140200.png" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么需要关注此步骤？&lt;/strong>&lt;/p>
&lt;p>我们在终端执行 &lt;code>pip&lt;/code> 脚手架指令，对 python 开发依赖的增删改查都是基于当前虚拟环境实现的，不同的虚拟环境的外部资源相互隔离，意味着你在 A 环境中 pip install 安装的依赖，放在 B 环境中不可用。&lt;/p>
&lt;p>绝大多数菜鸟都会遇上「虚拟环境适配问题」引发的偶发性 BUG。例如发现昨天 &lt;code>pip install&lt;/code> 的资源今天 &lt;code>import&lt;/code> 无法找到，这显然是上文提到的问题，既当前聚焦编码区所使用的（未安装指定依赖的）虚拟环境和你已安装指定依赖的虚拟环境不一致。&lt;/p>
&lt;h4 id="run">Run&lt;/h4>
&lt;p>&lt;strong>如何运行第一个 Python 程序？&lt;/strong>&lt;/p>
&lt;p>如下图所示为运行 Python 程序的常用手法。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>run[1]，栈缓存运行。解释器会记住你上一次成功运行的配置并执行配置所关联的 &lt;code>.py&lt;/code> 文件。说人话就是，运行刚跑过的代码。&lt;/p>
&lt;p>这个设定会让许多新手懊恼——「为什么运行结果跟我当前写的东西都不搭噶」。也即编程菜鸟此时已经新建或切换到了另一个 &lt;code>.py&lt;/code> 文件编写代码并点击 run[1] 执行，而此操作却是运行了刚才跑通的代码，这就造成了「输出」不符合预期的假象。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run[2]，基于上下文运行。在不使用快捷键的情况下，右击代码框，或是右击左侧项目结构下的文件，或是右击代码框顶部的文件元素，都可以弹出如下图所示的菜单栏，点选 run[2] 既可。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;img src="image-20211113190554142.png" alt="image-20211113190554142" style="zoom:50%;" />
&lt;p>&lt;span id="best_run">&lt;/span>&lt;/p>
&lt;p>&lt;strong>如何优雅地运行 Python 程序？&lt;/strong>&lt;/p>
&lt;p>此处建议将「基于上下文运行」的快捷键改成 &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd>，这么一来，在完成编码后我们可以以非常顺手地运行当前聚焦的代码。&lt;/p>
&lt;p>在「文件（File）」→「设置（Settings）」→「键盘映射（Keymap）」中搜索「run context configuration」，并将下图所示的 「运行（Run context configuration）」快捷键添加一个 &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd> 触发方式。此时会显示快捷键冲突，可以无视，因为这些功能几乎不会用到。&lt;/p>
&lt;img src="image-20211113200431442.png" style="zoom:50%;" />
&lt;h3 id="hello-world">Hello World&lt;/h3>
&lt;p>现在你已经知道如何在 Pycharm IDE 中编写代码，也知道如何基于本机环境运行 Python 程序。此外，你需要额外做一些在其他教程中不会提及的工作以减轻今后的 Python 学习阻力。&lt;/p>
&lt;h4 id="pip">pip&lt;/h4>
&lt;p>常见的主流编程语言都会有「第三方编程依赖（wheel）」的设计，用以减轻开发压力。我们仅需关注极具创造力的部分，而重复性的繁琐的底层代码，我们可以通过优秀的 wheel 轮子解决。&lt;/p>
&lt;p>wheel 是其他人写好的，开放使用的，致力于解决特定场景问题的模块集成。支持 wheel 的语言都有一套拉取 wheel 的方案，而 Python 中推荐使用 pip 脚手架工具管理 wheel。&lt;/p>
&lt;p>根据上文的介绍，启动 Terminal 并在当前虚拟环境的命令行窗口下执行如下代码，可查看 pip 工具的基础信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip --help
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>pip v21.0.1(python 3.8)&lt;/code> 的可用指令如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Usage:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pip &amp;lt;command&amp;gt; &lt;span class="o">[&lt;/span>options&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Commands:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> install Install packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> download Download packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uninstall Uninstall packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> freeze Output installed packages in requirements format.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> list List installed packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> show Show information about installed packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> check Verify installed packages have compatible dependencies.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config Manage &lt;span class="nb">local&lt;/span> and global configuration.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> search Search PyPI &lt;span class="k">for&lt;/span> packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache Inspect and manage pip&lt;span class="err">&amp;#39;&lt;/span>s wheel cache.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wheel Build wheels from your requirements.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">hash&lt;/span> Compute hashes of package archives.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> completion A helper &lt;span class="nb">command&lt;/span> used &lt;span class="k">for&lt;/span> &lt;span class="nb">command&lt;/span> completion.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> debug Show information useful &lt;span class="k">for&lt;/span> debugging.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">help&lt;/span> Show &lt;span class="nb">help&lt;/span> &lt;span class="k">for&lt;/span> commands.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上方列出的指令中，比较常用的有：&lt;/p>
&lt;ul>
&lt;li>install：我们下载 wheel 基本都是用这个指令&lt;/li>
&lt;li>uninstall：卸载 wheel&lt;/li>
&lt;li>list：显示当前虚拟环境中的第三方依赖&lt;/li>
&lt;li>show：显示某个依赖的详细信息，通常用来查看依赖版本和安装路径&lt;/li>
&lt;li>config：设置运行变量，最常用的变量是 &lt;code>global.index&lt;/code> 配置安装源&lt;/li>
&lt;li>help：帮助指令&lt;/li>
&lt;/ul>
&lt;h4 id="pip-config">pip config&lt;/h4>
&lt;p>根据上文的定义，这些依赖本质上是由代码组成的文件，而「第三方」的概念尤其重要，他们并不会无故出现在你的电脑上（当前虚拟环境），最常见的方式是通过网络输送到你的电脑上。而这个输送源默认是一个国外站点 pypi org，我们在不使用代理的情况下直接通过 &lt;code>install&lt;/code> 指令拉取第三方依赖的下载速度极其慢。&lt;/p>
&lt;p>而至今，已有很多先驱者和引领者帮我们解决了这些问题——缓存镜像站，这些站点将数量极其庞大的存储在 pypi 上的资源包缓存到了国内多个节点服务器上，我们通过这些节点服务器即可以“跑满带宽”的速度拉取依赖。&lt;/p>
&lt;p>此处修改这个指向的源也可通过一行指令搞定：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config &lt;span class="nb">set&lt;/span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这行指令通过 &lt;code>set&lt;/code> 关键字修改全局（global）变量（index）的值为 &lt;code>https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code>，这是清华源的镜像站接口地址。除此之外，国内仍有许多提供缓存资源的优秀镜像站点：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 豆瓣 https://pypi.tuna.tsinghua.edu.cn/simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 阿里 https://mirrors.aliyun.com/pypi/simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 中科大 https://pypi.mirrors.ustc.edu.cn/simple&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>替换源仅需执行相同的指令并替换链接既可。&lt;/p>
&lt;p>📌此处需要注意的是，这类开放式镜像源一般需要&lt;strong>直连访问&lt;/strong>。若使用代理访问，较大概率遇上 &lt;code>SSLError&lt;/code> 错误，具体描述及解决方案可见本博客的 &lt;a class="link" href="https://blog.echosec.top/p/python-debug/#:~:text=%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E2%80%A6-,%E2%80%A6,-%3E%3E%3E%20pip%20config%20list" target="_blank" rel="noopener"
>Python 开发日记&lt;/a>。&lt;/p>
&lt;p>使用如下指令查看已配置的全局镜像源接口地址：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config get global.index-url
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以使用如下指令查看自定义的变量，并在其中寻找 &lt;code>global.index-url&lt;/code> 的值：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="pip-install">pip install&lt;/h4>
&lt;blockquote>
&lt;p>📌 需要留意当前 Terminal 的激活环境是否和当前开发环境一致。&lt;/p>
&lt;/blockquote>
&lt;p>现在你已经配置好了镜像源，可以用正常的网速拉取依赖。请执行如下指令安装 demo 开发必要的依赖：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install easygui
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处使用了 &lt;code>install&lt;/code> 指令拉取开发依赖，&lt;code>easygui&lt;/code> 是依赖名称，后面可跟多个依赖名一并安装。&lt;/p>
&lt;h4 id="rerun">rerun&lt;/h4>
&lt;p>等待 &lt;code>easygui&lt;/code> 安装完成，等待 Pycharm 索引完毕后，复制，粘贴，运行如下代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">邦尼百度APP
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;gt; 不懂就问：百度怎么用？！（认真脸）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">webbrowser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">easygui&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">BAIDU_SEARCH_API&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://www.baidu.com/s?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">STACKOVERFLOW_SEARCH_API&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://stackoverflow.com/search?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_key&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 通过 GUI 窗口获取检索关键词
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">key_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">easygui&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enterbox&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">msg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;请输入检索关键词&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;邦尼百度&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#34;孤勇者&amp;#34; &amp;#34;女声&amp;#34; site:bilibili.com&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">key_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">handle_key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key_&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 过滤关键词，使用 default browser 查询关键词。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :param key_:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 添加过滤词缀&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_filter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">key_&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34; -csdn.net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 简单拼接访问网址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BAIDU_SEARCH_API&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;wd=&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">_filter&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 启动默认浏览器访问链接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">webbrowser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_key&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">handle_key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">webbrowser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">STACKOVERFLOW_SEARCH_API&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;q=&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若你能得到正确的运行结果，说明一切安好并完成了 Python 的历史性对话！&lt;/p>
&lt;h2 id="visual-studio-code">Visual Studio Code&lt;/h2>
&lt;h2 id="related-issues">Related Issues&lt;/h2>
&lt;h3 id="condahttperror">CondaHTTPError&lt;/h3>
&lt;blockquote>
&lt;p>CondaHTTPError: HTTP 000 CONNECTION FAILED for url&lt;/p>
&lt;/blockquote>
&lt;p>安装完 Miniconda 并启动 Pycharm 首次创建 Conda 虚拟环境后出现此错误，重启计算机即可解决。&lt;/p>
&lt;h3 id="proxyerror">ProxyError&lt;/h3>
&lt;blockquote>
&lt;p>ProxyError: Conda cannot proceed due to an error in your proxy configuration.&lt;/p>
&lt;/blockquote>
&lt;p>在 Pycharm 中通过引导创建 Conda 虚拟环境时抛出。按照下文&amp;lt;代理设置&amp;gt;指出的对比实验结果进行调整。例如关闭系统代理进行安装，或开启代理工具的 TUN 模式（全局隧道模式），或将 base 虚拟环境中的 &lt;code>urllib3&lt;/code> 第三方库的版本调整至 &lt;code>v1.25.11&lt;/code>，&lt;code>pip install urllibe==1.25.11&lt;/code>。&lt;/p>
&lt;h3 id="代理设置">代理设置&lt;/h3>
&lt;p>下图展示了在 Pycharm 中手动创建 Conda 虚拟环境的结果与系统代理的关系。使用 &lt;code>conda create&lt;/code> 命令行创建时，无论哪种代理设置情况都可以成功创建。&lt;/p>
&lt;p>注意：Pycharm 软件中的代理设置始终设为「无代理」，依靠其他代理工具接管设备流量。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148.png"
width="1220"
height="1218"
srcset="https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148_hu9e9a41948c0f2d000a0c1345505face2_203719_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148_hu9e9a41948c0f2d000a0c1345505face2_203719_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220524032007148"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;h3 id="github-copilot">GitHub Copilot&lt;/h3>
&lt;blockquote>
&lt;p>With &lt;a class="link" href="https://copilot.github.com/" target="_blank" rel="noopener"
>GitHub Copilot&lt;/a>, get suggestions for whole lines or entire functions right inside your editor.&lt;/p>
&lt;/blockquote></description></item><item><title>『Blog』Selenium 4.0</title><link>https://blog.echosec.top/p/selenium4-intro/</link><pubDate>Thu, 14 Oct 2021 23:45:57 +0800</pubDate><guid>https://blog.echosec.top/p/selenium4-intro/</guid><description>&lt;img src="https://blog.echosec.top/p/selenium4-intro/adb2.jpg" alt="Featured image of post 『Blog』Selenium 4.0" />&lt;h2 id="overview">Overview&lt;/h2>
&lt;blockquote>
&lt;p>I know it’s a cliche to say that it’s a “very great pleasure”, but, being honest with you, it genuinely is.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="noopener"
>Selenium 4&lt;/a> 不仅对前代版本做了稳定提升，还带来了大量令人兴奋的新功能，这能让我们的测试编写起来更有趣，也能在运行时更加稳定。&lt;/p>
&lt;h2 id="authenticationspan-idauthspan">Authentication&lt;span id="auth">&lt;/span>&lt;/h2>
&lt;p>Selenium 4.0 的一个重要更新是 &lt;strong>身份验证&lt;/strong> 能力。&lt;/p>
&lt;p>在过去，我们一直能使用 Selenium 处理一些「登录」请求，譬如通过定位特征元素（如 &lt;code>Input&lt;/code> ）来控制 Driver 进行定位（如 &lt;code>find_element_by_xpath() &lt;/code>）、输入（如 &lt;code>send_key()&lt;/code> ）、提交（如 &lt;code>click()&lt;/code> ）完成身份验。然而，我们使用这套工作流处理一些特殊框架的站点（如 &lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noopener"
>basic or digest authentication&lt;/a>）时效果差强人意。因此，我们在使用 Selenium 处理难以应付的登录要求时，总会在启动前携带 &lt;code>cookie&lt;/code>。&lt;/p>
&lt;p>上述情况将在 Selenium 4.0 时代有所改观。我们可以通过调用 &lt;code>register&lt;/code> 方法来添加 「username」以及 「password」或是其他 Token 执行身份认证任务，而无需再繁琐地定位元素发送消息或是与人机验证勾心斗角，「验证」行为由 Driver 底层实现。&lt;/p>
&lt;p>如下案例演示了新方法的功能实现：&lt;/p>
&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// This &amp;#34;HasAuthentication&amp;#34; interface is the key!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">HasAuthentication&lt;/span> &lt;span class="nf">authentication&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">HasAuthentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// You can either register something for all sites
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernameAndPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Or use something different for specific sites
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">uri&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHost&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;mysite.com&amp;#34;&lt;/span>&lt;span class="o">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernameAndPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;AzureDiamond&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;hunter2&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Ruby&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当我们完成 &lt;code>add&lt;/code> 添加操作后，每当站点要求或是 &lt;code>driver&lt;/code> 加载出身份认证页面时，Selenium 会帮我们自动提供验证信息（如 username 与 password），&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/bidi_apis/#register-basic-auth" target="_blank" rel="noopener"
>这样的操作是隐式完成的&lt;/a>。以往，我们可能需要单独开一条线程来应对随时可能出现的 「运行时身份认证」或是通过 「try&amp;hellip;exception」机制主动捕获异常并调用相应的处理模块。&lt;/p>
&lt;p>这个特性目前是基于 Selenium 4 的 &lt;a class="link" href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener"
>CDP&lt;/a> （Chrome DevTools Protocol）实现的，意味着此功能仅能运行在支持这个协议的浏览器上。值得一提的是，Selenium 旗下产品 &lt;a class="link" href="https://w3c.github.io/webdriver-bidi/" target="_blank" rel="noopener"
>WebDriver Bidi&lt;/a> 的允许开发者在不支持 CDP 的浏览器使用这项功能，好消息是这个项目还未完整孵化出来，我们可以期待一下。&lt;/p>
&lt;h2 id="relative-locators">Relative Locators&lt;/h2>
&lt;p>相对定位器（Relative Locators）是一种基于「自然语言术语」的元素定位解决方案，开发者可通过诸如「上方」「下方」「左侧」「右边」等描述捕获那些「看得见但摸不着」的标记元素，这种描述可以适应 DOM 的变化。&lt;/p>
&lt;p>这种方法背后的概念是允许开发者根据在页面上描述元素的方式来查找元素。更自然的说法是「find the element that is below the image」，而不是「find the INPUT inside the DIV with the &amp;ldquo;id &amp;quot; of &amp;ldquo;main&amp;rdquo;」 。通常，我们可以将此方案视为一种==基于视觉==的元素定位方法。&lt;/p>
&lt;p>这套方法论最初由 &lt;a class="link" href="https://www.sahipro.com/" target="_blank" rel="noopener"
>Sahi&lt;/a> 提出，这是一个极其强大的基于 &lt;a class="link" href="https://baike.baidu.com/item/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0/23661682" target="_blank" rel="noopener"
>低代码&lt;/a> 实现的自动化测试平台，感兴趣的朋友可以了解以下。&lt;/p>
&lt;p>我们以 &lt;code>Python&lt;/code> 和 &lt;code>Java&lt;/code> 举个例子，简要说明这个方案的强大之处。&lt;/p>
&lt;p>如下图所示是一个常见的登陆页面，我们现在尝试用新版本 API 定位页面元素。&lt;/p>
&lt;div align="center">&lt;img src="login-form-relative-locators.png"/>&lt;/div>
&lt;h3 id="above">Above&lt;/h3>
&lt;p>如上图是一个常见的登录页面，我们想找到位于密码字段上方的电子邮件地址字段。为此，我们通过其 id 找到密码字段，然后使用 relative locators 定位器捕获电子邮件字段。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">above&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">passwordField&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">above&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passwordField&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="below">Below&lt;/h3>
&lt;p>反过来，让我们定位密码字段，它位于电子邮件地址字段下方。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">below&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emailAddressField&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">below&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">emailAddressField&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="to-the-left-of">To the left Of&lt;/h3>
&lt;p>让我们考虑一下我们想要在「提交」按钮左侧找到元素的情况。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">to_left_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">submitButton&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">toLeftOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">submitButton&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="to-the-right-of">To the Right Of&lt;/h3>
&lt;p>现在我们将考虑相反的情况，我们希望找到「取消」按钮右侧的元素。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;cancel&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">to_right_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cancelButton&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;cancel&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">toRightOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cancelButton&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="near">Near&lt;/h3>
&lt;p>上文「适应 DOM 的变化」从何而来？我觉得 &lt;code>near&lt;/code> function 是个非常重要的体现，它允许我们通过一定的规则指定所选取的元素周围 &lt;code>50px&lt;/code> 以内的其他元素。小伙伴们首先想到什么？欸嘿我不说。官方文档中这一句不起眼的描述，可能在未来，成为万千依靠 Selenium 工作的工程师们实现财富自由的垫脚石。&lt;/p>
&lt;p>回到话题，在这个案例中，我们可以通过先定位邮件标签，再通过寻找 &lt;code>input&lt;/code> tag 的偏移量，最终定位邮件地址的输入框。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressLabel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lbl-email&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">near&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emailAddressLabel&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressLabel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;lbl-email&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">near&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">emailAddressLabel&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="enhancement">Enhancement&lt;/h2>
&lt;p>如果你使用 &lt;a class="link" href="https://www.mozilla.org/en-GB/firefox/new/" target="_blank" rel="noopener"
>Firefox&lt;/a> 或是其他基于 &lt;a class="link" href="https://www.chromium.org/Home" target="_blank" rel="noopener"
>Chromium&lt;/a> 的浏览器，Selenium 4 还提供了强大的增强特性。&lt;/p>
&lt;p>除了上文介绍的 &lt;a class="link" href="#auth" >Authentication&lt;/a> ，Selenium 4 还添加了 Network Interception（&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418" target="_blank" rel="noopener"
>Are you an HTTP 418?&lt;/a>）以及一些常见执行请求，如更加高效的「等待 DOM 变更」的方法，或是查看 Javascript 错误的方法等等。&lt;/p>
&lt;p>值得一提的是，这些提升大都是基于现有 API 打磨的，意味着我们原先引用的函数方法无需改动，而我们只需升级版本 如 &lt;code>pip install --upgrade selenium&lt;/code> ，这些库函数将被自动替换（如果是要使用原先没有的新功能我们当然得改代码）。&lt;/p>
&lt;h2 id="selenium-grid">Selenium Grid&lt;/h2>
&lt;p>Selenium 重构了 &lt;a class="link" href="https://www.selenium.dev/documentation/grid/" target="_blank" rel="noopener"
>Grid&lt;/a> ，使其完全支持分布式，能够运行于 Kubernetes 等现代基础设施之上。&lt;/p>
&lt;p>重构后的 Grid 可以管理本地机器上的 Docker 容器，提取诸如独立的 Firefox 服务器之类的镜像，这样我们的基础设施维护工作就会变得轻松一些。&lt;/p>
&lt;p>最后， Grid 更加安全，也更加易于管理。Selenium 改进了 Grid 的UI，将其置于 GraphQL 模型上运行，任何人都可以自由查询并使用该模型来创建自己的可视化或 Grid 监视器。开发者可以使用 VNC 与正在运行的会话（session）进行交互，从而更好地了解到正在发生地事情。&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/blog/2021/announcing-selenium-4/" target="_blank" rel="noopener"
>Announcing Selenium 4 | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/locating_elements/#relative-locators" target="_blank" rel="noopener"
>Locating elements | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/bidi_apis/#register-basic-auth" target="_blank" rel="noopener"
>BiDi APIs | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418" target="_blank" rel="noopener"
>418 I&amp;rsquo;m a teapot - HTTP | MDN (mozilla.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noopener"
>HTTP authentication - HTTP | MDN (mozilla.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="noopener"
>SeleniumHQ/selenium: A browser automation framework and ecosystem. (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『Notes』Python Programming diary</title><link>https://blog.echosec.top/p/python-debug/</link><pubDate>Thu, 14 Oct 2021 18:14:26 +0800</pubDate><guid>https://blog.echosec.top/p/python-debug/</guid><description>&lt;img src="https://blog.echosec.top/p/python-debug/6e1a7a.jpg" alt="Featured image of post 『Notes』Python Programming diary" />&lt;h2 id="packagesnotfounderror-the-following-packages-are-missing-from-the-target-environment">PackagesNotFoundError: The following packages are missing from the target environment&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 使用 Pycharm 手动添加新环境，或使用 &lt;code>conda create -n [env-name] [python=3.9]&lt;/code>指令遇到如下报错：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PackagesNotFoundError: The following packages are missing from the target environment - &lt;span class="nv">python&lt;/span>&lt;span class="o">=&lt;/span>3.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>事件回溯：&lt;/strong> Pycharm 手动添加源，本质上相当于执行了 &lt;code>conda&lt;/code> 脚手架指令，简单的可视化交互其本质上也只是使用了 &lt;code>-p&lt;/code> 参数指定 &lt;code>env&lt;/code> 存储路径以及 &lt;code>Python&lt;/code> 版本，所以根因出在脚手架身上。&lt;/p>
&lt;p>在报错时，我设置了 &lt;code>conda config:channels&lt;/code> 也就是所谓的 「源」为清华源。若我开启本机代理，则环境创建会时抛出另一个访问清华园的 &lt;code>404&lt;/code> 错误；若我不开启本机代理，则会抛出本 Tag 异常。我在开关本机代理的时候，也排列组合设置了 Pycharm 中的代理设置（无代理/手动代理）。最终依靠移除 &lt;code>conda&lt;/code> 关于源的环境变量解决问题。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 执行如下代码移除 &lt;code>conda&lt;/code> 源（使用默认源）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">conda config --remove-key channels
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="sslerrorssleoferror8-eof-occurred-in-violation-of-protocol-_sslc1129">SSLError(SSLEOFError(8, &amp;lsquo;EOF occurred in violation of protocol (_ssl.c:1129)&amp;rsquo;))&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 使用 &lt;code>pip&lt;/code> 脚手架下载任意包抛出。先经过 N 论超时警告，最后抛出 &lt;code>SSLError&lt;/code> 或 &lt;code>HTTPSConnectionPool&lt;/code> 异常。错误日志如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; pip install requests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>4, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>3, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>2, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>1, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Could not fetch URL https://pypi.tuna.tsinghua.edu.cn/simple/requests/: There was a problem confirming the ssl certificate: HTTPSConnectionPo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ol&lt;span class="o">(&lt;/span>&lt;span class="nv">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;pypi.tuna.tsinghua.edu.cn&amp;#39;&lt;/span>, &lt;span class="nv">port&lt;/span>&lt;span class="o">=&lt;/span>443&lt;span class="o">)&lt;/span>: Max retries exceeded with url: /simple/requests/ &lt;span class="o">(&lt;/span>Caused by SSLError&lt;span class="o">(&lt;/span>SSLEOFError&lt;span class="o">(&lt;/span>8, &lt;span class="s1">&amp;#39;EOF occu
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">rred in violation of protocol (_ssl.c:1129)&amp;#39;&lt;/span>&lt;span class="o">)))&lt;/span> - skipping
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR: Could not find a version that satisfies the requirement requests &lt;span class="o">(&lt;/span>from versions: none&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR: No matching distribution found &lt;span class="k">for&lt;/span> requests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>事件回溯：&lt;/strong>&lt;code>pip&lt;/code> 配置了全局 &lt;a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener"
>清华源&lt;/a>（如下所示），运行指令时使用由 &lt;code>v2rayN&lt;/code> 发起的系统代理，这是一个「墙内人」几乎不会遇到的问题……&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; pip config list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">global.index-url&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;https://pypi.tuna.tsinghua.edu.cn/simple&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考方案：&lt;/strong> 根因在于我们访问的镜像接口识别并屏蔽了代理流量（不可信的源），也即核心解决思路为「不使用代理」访问镜像源。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>「&lt;strong>推荐&lt;/strong>」修改 &lt;u>代理客户端&lt;/u> 路由规则（以 &lt;code>v2rayN&lt;/code> 为例其他代理软件同理）&lt;/p>
&lt;p>这是个一劳永逸的做法，代理软件将不再接管访问此域名的流量。&lt;/p>
&lt;p>启动代理客户端，依次打开 &lt;kbd>设置&lt;/kbd> → &lt;kbd>参数设置&lt;/kbd> → &lt;kbd>系统代理设置&lt;/kbd>，在「例外」中填入镜像域名，以清华源 pip 镜像域名为例，填入 &lt;code>pypi.tuna.tsinghua.edu.cn&lt;/code>，如下图所示：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220524045444990.png" style="zoom: 67%;" />&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>&lt;strong>「推荐」&lt;/strong> 开启 TUN 模式代理（以 Clash for Windows v0.19.19 为例）&lt;/p>
&lt;p>在面板中启动 TUN Mode，此时 Clash 可以通过端点间隧道（虚拟网卡）代理当前局域网的全局流量，此时无论是浏览器流量还是各种电脑软件的流量都会通过 Clash 虚拟网卡访问互联网。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在执行 &lt;code>pip&lt;/code> 指令时清除系统代理，也即关闭代理软件的系统代理功能&lt;/p>
&lt;p>比较繁琐，需要执行前关闭代理，（如果你当前的环境依赖代理）执行后再重新开启代理。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="文件编码">文件编码&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 此问题难以使用某一类异常描述，因为运行时不会报错，但运行结果和预想的不太一样。例如，网络上抓取语料，需要获取 &lt;code>user-nickname&lt;/code>，不免会遇上使用特殊符号命名的玩家。这些符号直接在网页上渲染，或是直接在控制台输出，都是「所见即所得」，但在「写入文件」这一步骤时，出现了不可控的「乱码」问题。&lt;/p>
&lt;p>&lt;strong>事件回溯：&lt;/strong> 以下方 Python 代码为例，我们定义一个包含「特殊符号」集合的变量，并以 UTF-8 编码形式将其写入到 CSV 文件当中。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">csv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;🌪&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;嬡芣释掱&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newline&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">writer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">writer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writerow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打开 &lt;code>test.csv&lt;/code>，查看写入的数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162216767.png" alt="image-20211025162216767" style="zoom:50%;" />&lt;/div>
&lt;p>当时的第一反应是 &lt;code>encoding&lt;/code> 参数的选择不恰当，而事实证明的确如此。但我却在编码类型的选择上陷入大坑。最后试出了一种能够正常显示写入数据的编码格式 &lt;code>utf-16&lt;/code>。&lt;/p>
&lt;p>修改参数 &lt;code>encoding=&amp;quot;utf-16&amp;quot;&lt;/code> 后再次打开文件，查看写入数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162348681.png" alt="image-20211025162348681" style="zoom:50%;" />&lt;/div>
&lt;p>可以看到「特殊符号」的**字形（glyph）**已被正常渲染，但似乎分隔符的识别出现了问题，同一行数据被识别为同一个单元的内容。&lt;/p>
&lt;p>于是我在查了有关资料后，找到了另一种编码格式 &lt;code>utf-8-sig&lt;/code>。&lt;/p>
&lt;p>修改参数 &lt;code>encoding=&amp;quot;utf-8-sig&amp;quot;&lt;/code> 后再次打开文件，查看写入数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162553256.png" alt="image-20211025162553256" style="zoom:50%;" />&lt;/div>
&lt;p>蚌埠住了，这次分隔符正常识别，火星文正常显示，但表情包符号却乱码了。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 使用 &lt;code>utf-8-sig&lt;/code> 或 &lt;code>utf-16&lt;/code> 编码尝试应对字形渲染问题。&lt;/p>
&lt;p>但值得一提的是，无论是 &lt;code>utf-8&lt;/code>、&lt;code>utf-8-sig&lt;/code> 还是 &lt;code>utf-16&lt;/code> ，只要不是默认的 &lt;code>gbk&lt;/code> 都不会引发读写错误。尽管在 GUI 软件上出现了字形渲染的问题，但将同样的数据读回 Python 程序后，其仍然是一个正常显示的可以操作的 str 对象。&lt;/p>
&lt;h2 id="字符编码">字符编码&lt;/h2>
&lt;blockquote>
&lt;p>最后更新时间：2022-01-28&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>错误现象：&lt;/strong>「看着一摸一样」的两句字符串，在 &lt;code>==&lt;/code> 条件判别下返回 &lt;code>Flase&lt;/code>。&lt;/p>
&lt;p>&lt;strong>事件回溯：&lt;/strong> 这里要记录一个有趣的背景故事。这是作者在玩 &lt;a class="link" href="https://www.hcaptcha.com/" target="_blank" rel="noopener"
>hCaptcha challenge&lt;/a> 时遇上的趣事。&lt;/p>
&lt;p>如果你接触过爬虫，你一定了解这玩意（如下图所示），给出一个需求标签，点选九宫格中符合要求的图片。当下有很多流行的人机挑战， &lt;code>hCaptcha challenge&lt;/code> 算是其中 T0 级别的模块，能够阻挡近乎九成的爬虫流量，新手遇上这种视觉验证类的 &lt;code>CAPTCHA&lt;/code> ，基本上不会有太多想法。&lt;/p>
&lt;div align="center">&lt;img src="image-20220128230029379.png" alt="image-20220128230029379" style="zoom:50%;" />&lt;/div>
&lt;p>但我们环顾这个技术行业，&lt;code>hCaptcha challenge&lt;/code> 显然算不上最“变态”的或者说最困难的人机挑战。最相关的好比 Google 的 &lt;code>reCaptcha v2&lt;/code> ，除了简单的图像分类外，还创新性的使用了图像切割的形式抽象地表述实体，让简单的「分类问题」变成了难度更高的「目标识别」问题（如下图所示），从编码者角度来看，无论是自动化模块的编写还是视觉模块的处理都是不小的挑战。&lt;/p>
&lt;div align="center">&lt;img src="Snipaste_2022-01-29_00-00-03.png" alt="Snipaste_2022-01-29_00-00-03.png" style="zoom:50%;" />&lt;/div>
&lt;p>当然，如果你同时熟悉 &lt;code>Undetected Automation&lt;/code> 以及 &lt;code>Darknet Image Classification&lt;/code> 或 &lt;code>Object Detection&lt;/code>，我相信这对你来说不是什么难事。但你要相信，当下的人机挑战的病态程度已经远超你的想象，篇幅有限此处不多展开，后买咱再开个坑详细说说「人机挑战的那些事」。&lt;/p>
&lt;p>&lt;strong>回到正题&lt;/strong>，此处的 &lt;code>字符编码&lt;/code> 问题出自于 &lt;code>hCaptcha challenge&lt;/code> 。我们通过网页元素截取 &lt;code>label&lt;/code> 也即我们需要 「点击」的图像标签名，送入模型比对后得出相应的结果。此处截取的 &lt;code>label&lt;/code> 是具有 &lt;code>locale&lt;/code> 特性的，如果你以 &lt;code>zh-CN&lt;/code> 请求形式打开，标签名会显示中文。坑就在这了，作者获取到的某些 &lt;code>label&lt;/code> 并&lt;u>不是标准的中文格式编码&lt;/u>，什么意思呢，你可以用你喜欢的编程语言去比对如下两个字符串，看它们是否“相等”。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Python &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ー条船&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;一条船&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>结果显然是不相等的，在该篇博客中，由于页面字体兼容此种字符编码的渲染，所以你很明显能看到两个“一”有所不同，但如果在你的 &lt;code>IDE&lt;/code> 中，设置了等宽编程字体，或者 &lt;code>Source code pro&lt;/code> 之类的流行字体，这对字符串从肉眼看是完全一样的。&lt;/p>
&lt;p>不知道这是不是 &lt;code>hCaptcha&lt;/code> 开发团队的有意为之，至少我觉得这是从“反爬虫”角度来说非常高明的一招。想撩到来犯爬虫，先潦倒它的开发者。同样地，其他语种也会有这样的问题，如英文 &lt;code>bіcycle&lt;/code>（自行车）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#Python&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;bіcycle&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;bicycle&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>好的，这下连本博客的默认字体引擎也无法渲染了，肉眼可见的“完全一致”，但如果你将它们复制进你的 &lt;code>IDE&lt;/code> ，执行结果显然是 &lt;code>False&lt;/code>。&lt;/p>
&lt;p>如果你也感叹这一招十分高明，大可在网上检索一下其中的“玄机”。&lt;/p>
&lt;p>如果你也在处理 &lt;code>hCaptcha challenge&lt;/code>，和我使用同样的思路获取 &lt;code>label&lt;/code>，并且没有发现这个字符编码问题，你会陷入窘况。显然，我们训练的模型的标注 &lt;code>label&lt;/code> 都是标准的国际统一的字符编码，在这种特殊的情况下，一个单词，因为某个字母的编码不同，经过解释器后，在模型看来，这是两个完全不一样的“实体目标”。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 手动编织 &lt;code>dict mapping&lt;/code> ，将异常编码做一层映射再导向模型。&lt;/p>
&lt;p>这是个有效的，但也是最笨的方法。当然，根据本人的实验结论来看，使用 &lt;code>locale=zh-CN&lt;/code> 时，这项阻碍是最小的（大部分异常都能看出差别）。如果你使用 &lt;code>en-US&lt;/code> 本地化，任何一个英文字母都有可能出现异常编码（且肉眼难以察觉），工程难度非常大。&lt;/p>
&lt;h2 id="此时不应有-">此时不应有 &amp;amp;&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 命令提示符抛出提示「此时不应有 &amp;amp;」后秒退。在 Pycharm 中启动的 CMD 终端秒退。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> &lt;kbd>Win&lt;/kbd> + &lt;kbd>R&lt;/kbd> ，键入 &lt;code>regedit&lt;/code> 打开注册表，在如下路径找到 &lt;code>Autorun&lt;/code>，将其数据数值删去。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cython" data-lang="cython">&lt;span class="line">&lt;span class="cl">&lt;span class="n">HKEY_CURRENT_USER&lt;/span>\&lt;span class="n">Software&lt;/span>\&lt;span class="n">Microsoft&lt;/span>\&lt;span class="n">Command&lt;/span> &lt;span class="n">Processor&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="image-20220524043332047.png" alt="image-20220524043332047" style="zoom: 50%;" /></description></item><item><title>『 Blog 』Resources Transfer</title><link>https://blog.echosec.top/p/resources-transfer/</link><pubDate>Thu, 07 Oct 2021 14:06:41 +0800</pubDate><guid>https://blog.echosec.top/p/resources-transfer/</guid><description>&lt;img src="https://blog.echosec.top/p/resources-transfer/d330174.jpg" alt="Featured image of post 『 Blog 』Resources Transfer" />&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>本文介绍 2 种能够实现的 GitHub 资源传递的解决方案，并简要介绍与此相关的技术模型。&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;blockquote>
&lt;p>「资源代下」是一种可能在中国才会出现的盛况。&lt;/p>
&lt;/blockquote>
&lt;p>不可否认，「&lt;a class="link" href="https://zh.wikipedia.org/zh-hans/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="noopener"
>防火长城&lt;/a>」的诞生确实推动了许多行业的发展，也为许多商业模式的出现奠定了基石，这堵「墙」在这杵着，隔离了“脏数据”，也让万千学子“查文献”的门槛上了一个台阶。&lt;/p>
&lt;p>时至今日，国内高校大都拥有内建或合租的 VPN 网络供本校学子进行学术科研工作，但这些 VPN 往往被当作是针对「学术文献」资源建立的「传输通道」，所能提供的「视野」相较于全局代理要小很多。&lt;/p>
&lt;p>于是，在这种又忙又卷的环境中，出现了这么一群在鼓捣“特种领域”但又没鼓捣清楚自己为啥访问不了某些站点的人。&lt;/p>
&lt;p>诚然，目前没有可靠的数据表明这类群体的规模，但从直觉上看，这是个非常庞大的“市场”。&lt;/p>
&lt;p>打开淘宝，你能发现各种各样需要跨越「防火长城」才能流畅进行的「资源拉取服务」。这里有我们常见的 GitHub 资源下载（或数据集下载）， Google Cloud 资源下载以及各种需要代理才能流畅访问的素材资源的下载。&lt;/p>
&lt;p>&lt;span id="taobao">&lt;/span>&lt;/p>
&lt;div align="center">&lt;img src="photo_2021-10-07_13-29-48.jpg" alt="photo_2021-10-07_13-29-48" style="zoom:67%;" />&lt;/div>
&lt;p>作者点进了显示在综合排列考前的 「GitHub 资源代下」的店铺，翻阅了店铺当前仅有的一条 Q&amp;amp;A。&lt;/p>
&lt;div align="center">&lt;img src="photo_2021-10-07_13-35-54.jpg" alt="photo_2021-10-07_13-35-54" style="zoom:36%;" />&lt;/div>
&lt;p>当我看到「&lt;strong>高速下载连接&lt;/strong>」这个关键词时，我已参透这背后的运营模式，惊呼“这 TM 也能赚钱？”，但当我看到图片中的回复时，我并不惊讶。&lt;/p>
&lt;p>当我们已经习惯于使用 GitHub 并基于 GitHub 的各种产品进行日常工作时，我们当然会对如上现象感到疑惑，但我们还是得解释以下这是个什么情况！&lt;/p>
&lt;p>对于一个拥有 200 M 家庭带宽的用户来说，使用代理后下载各种 GiHub 资源的速度都是非常快的，因为常见的 GiHub 挂载资源包体积都非常小（数据集除外）。但同样的事情对于“墙内”用户来说非常痛苦，眼看着个位数 MiB 体积的资源就是下不完，下载速度可能只有 10 kb/s。&lt;/p>
&lt;p>好了，正所谓「&lt;strong>有需求就有市场&lt;/strong>」，只要卖家的交易行为还在法律的条框之内，我们也不能说什么，毕竟有人着急着要下载，也不缺这一两块的小费，又刚好有人能提供这种服务，双方一拍即合，一个船新的市场就诞生了~&lt;/p>
&lt;p>说到这，可能还有的小伙伴会疑惑：我以为它是把资源自己下载下来后，通过某种方式分享给买家，这个「高速下载连接」是什么？这种薄利多销的“模式”，真的不会亏损吗？如果我也想给身边的“朋友”提供这种服务，有没有比较可靠的解决方案？不着急，下文慢慢说。&lt;/p>
&lt;h2 id="technology-stack">Technology Stack&lt;/h2>
&lt;h3 id="resource-transfer">Resource Transfer&lt;/h3>
&lt;p>本文所讨论的「资源传递」与我们通常理解的「&lt;a class="link" href="https://baike.baidu.com/item/%E6%96%87%E7%8C%AE%E4%BC%A0%E9%80%92/6646200" target="_blank" rel="noopener"
>文献传递&lt;/a>」有所不同。后者通常是指「将用户所需的文献复制品以有效的方式和合理的费用，直接或间接传递给用户的一种非返还式的文献提供服务」；而前者强调的是传递的代理以及资源的转发，传递的资源必须是在网络上共享且开放使用的。&lt;/p>
&lt;p>以下，我们将基于传统文献传递的观点，一步步说明这个被一眼看透的商业模式到底时怎样赚钱的。&lt;/p>
&lt;h3 id="cloudflare-workers-cfw">Cloudflare Workers (CFW)&lt;/h3>
&lt;p>&lt;span id="rt-1">&lt;/span>&lt;/p>
&lt;p>首先需要解答的问题是：「如何给不会翻墙的国内用户提供加速下载 GitHub 资源的服务？」&lt;/p>
&lt;p>目前的最优解是 &lt;a class="link" href="https://workers.cloudflare.com/" target="_blank" rel="noopener"
>&lt;code>Cloudflare Workers (CFW)&lt;/code>&lt;/a> + &lt;code>jsdelivr&lt;/code> + &lt;code>cnpmjs&lt;/code> 实现的无服务 (&lt;a class="link" href="https://www.cloudflare.com/zh-cn/learning/serverless/what-is-serverless/" target="_blank" rel="noopener"
>Severless&lt;/a>) 反向代理 + 内容分发策略。具体内容后面会单独发一篇博客说明，实现起来比较简单（但可能对新手不是很友好，具体可见 &lt;a class="link" href="https://github.com/hunshcn/gh-proxy" target="_blank" rel="noopener"
>gh-proxy&lt;/a> 项目的自述文档）。&lt;/p>
&lt;p>这一步完成后，我们将从 Wokers 获取一个 CDN 链接，这个链接是用来做什么的呢？当然是用来回答问题的~&lt;/p>
&lt;p>作者已部署了一个应用案例，分发链接如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://curly-shape-d178.qinse.workers.dev/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后找到你需要的资源的下载链接，以作者先前编写的 &lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider/releases/tag/v4.5.4" target="_blank" rel="noopener"
>V2Ray云彩姬 v4.5.4&lt;/a> 发行客户端为例，其链接如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://github.com/QIN2DIM/V2RayCloudSpider/releases/download/v4.5.4/v2rss_4.5.4_Windows-64bit.zip&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;figure>&lt;img src="image-20211007151926050.png"
alt="无代理直连下载"/>&lt;figcaption>
&lt;p>无代理直连下载&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>将两者按如下格式合并拼写，访问拼接后的链接，即可实现加速下载。我们清理下载缓存，使用加速下载，看看能有多少提升。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://curly-shape-d178.qinse.workers.dev/https://github.com/QIN2DIM/V2RayCloudSpider/releases/download/v4.5.4/v2rss_4.5.4_Windows-64bit.zip&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;figure>&lt;img src="image-20211007152042536.png"
alt="反向代理加速下载"/>&lt;figcaption>
&lt;p>反向代理加速下载&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>是的，只需将下载链接完整复制到 CDN 链接之后就能实现反向代理（加速下载）。&lt;/p>
&lt;p>值得一提的是，此步骤的精华输出就是这个可用的 CDN 链接，意味着如果你想搭建自己的服务，上文提供的链接你已经可以拿去用了~&lt;/p>
&lt;p>此外，我们需要知道，CFW 提供免费服务「每天 10 万次请求以及每分钟 1000 次请求」仅当需求无法满足时，你才需要升级到 $5 的付费版本，此时你的 API Limit 变为「每月 1000 万次请求」 。从 &lt;a class="link" href="#taobao" >上文截图所示的销量情况&lt;/a> 来看，如果你有幸用上了付费版本，那你早已垄断了这个行业的生意（笑死。&lt;/p>
&lt;p>好了回到话题，经此讨论我们不难得出如下图所示的资源传递技术模型：&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/resources-transfer/tech-stack-resources-transfer-1.svg"
loading="lazy"
>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先，假设 Customer 能够正常浏览 GitHub 站点，并在浏览中产生需求；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>客户带着需求以及下载链接找到 Chatbot，并于 Chatbot 发生首轮交互；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过预先设定的 Inline 引导框架，客户能够提供经过 Review 的资源链接；&lt;/p>
&lt;p>至少要确认客户发来的链接指向 GitHub。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Chatbot 调度已经封装好的 SDK，修饰资源链接并返回给客户；&lt;/p>
&lt;p>若此时用户满意，则订单结束；若订单异常，则需要技术支持（人工客服）介入回滚订单。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户获取「高速下载链接」凭借 CDN 技术平步上青云。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;a class="link" href="#rt-1" >上文所述的实现方案&lt;/a> 仅是作者的反射想法，生产环境要稍微麻烦些。此模型是实现 Background 所述模式的最简单方案。对于作者此类对 Cloudflare Workers 有所了解的玩家，部署一套用于加速 GitHub 资源拉取的反向代理接口，可能只需要几分钟（毕竟有成熟的轮子），编写一套完整的 Inline 引导框架可能需要一至两天的时间。如果你不知道怎么做 Chatbot，你可以“肉身交互”（模板回复）；如果你觉得部署麻烦，你可以在网络上直接获取 CFW 的加速链接，以及共享通用的 Inline 引导框架，甚至是手把手教你开淘宝店的奶妈教程，门槛非常低。&lt;/p>
&lt;h3 id="aliyundrive-hash-mapping">Aliyundrive Hash Mapping&lt;/h3>
&lt;p>如下分享的是一套可实现「内外双循环」的技术模型，此模型可插入到&lt;a class="link" href="#rt-1" >上文所述的实现方案&lt;/a> 的任一环节中。&lt;/p>
&lt;img src="tech-stack-resources-transfer-2.svg" style="zoom:92%;" />
&lt;p>技术支持与客户交流（或 Inline 引导），并询问客户是否拥有 Aliyundrive 账号；&lt;/p>
&lt;ul>
&lt;li>YES，我就问问；&lt;/li>
&lt;li>NO，提出免费下载，引导客户使用你的邀请码注册云盘账号，待获取 Response（网盘资源的分享链接） 后分发给客户。若用户否决提议（财大气粗），则返回 CFW 技术模型收费下载。&lt;/li>
&lt;/ul>
&lt;p>别光顾着问，先给人家下载东西，两三下就下好了。反正下好了就给客户发网盘分享链接，没有账号就得注册，用你的邀请码（明文超链接）跳转会很方便，也算是一种引导暗示。&lt;/p>
&lt;p style="background:#FAEBD7">（占坑不定时更新）&lt;/p>&lt;p>&lt;/p>
&lt;h2 id="business-model">Business model&lt;/h2>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/user">用户 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/customer-support">客户支持 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/bot">博特 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://workers.cloudflare.com/" target="_blank" rel="noopener"
>Cloudflare Workers®&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://baike.baidu.com/item/%e6%96%87%e7%8c%ae%e4%bc%a0%e9%80%92/6646200" target="_blank" rel="noopener"
>文献传递_百度百科 (baidu.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/zh-hans/%e9%98%b2%e7%81%ab%e9%95%bf%e5%9f%8e" target="_blank" rel="noopener"
>防火长城 - 维基百科，自由的百科全书 (wikipedia.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Notes 』Aliyundrive API</title><link>https://blog.echosec.top/p/notes-aliyundrive-api/</link><pubDate>Mon, 04 Oct 2021 15:12:52 +0800</pubDate><guid>https://blog.echosec.top/p/notes-aliyundrive-api/</guid><description>&lt;img src="https://blog.echosec.top/p/notes-aliyundrive-api/3862634.jpg" alt="Featured image of post 『 Notes 』Aliyundrive API" />&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;p>截止至 2021/09/15，Aliyundrive 仍采用 &lt;code>access-token&lt;/code> + &lt;code>auto refresh&lt;/code> 机制实现用户鉴权以及身份信息的超时更新。&lt;/p>
&lt;p>需要通过手动（或额外的自动化操作脚本）的方式「首次」获取 &lt;code>access_token&lt;/code>，&lt;code>refresh_token&lt;/code> 以及 &lt;code>default_drive_id&lt;/code> ，之后可携带「更新码」请求相应的接口实现身份信息的自动更新。&lt;/p>
&lt;h3 id="get-token">Get Token&lt;/h3>
&lt;p>以任何你喜欢的方式登录 &lt;a class="link" href="https://www.aliyundrive.com/sign/in?spm=aliyundrive.index.0.0.2d8360203L8x1O" target="_blank" rel="noopener"
>阿里云盘网页版&lt;/a>，登陆之后开启调试台 &lt;kbd>F12&lt;/kbd>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/notes-aliyundrive-api/image-20211004151603514.png"
width="2056"
height="1256"
srcset="https://blog.echosec.top/p/notes-aliyundrive-api/image-20211004151603514_hu8cdde9c935b14df51ae59762d5a04c2f_256137_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/notes-aliyundrive-api/image-20211004151603514_hu8cdde9c935b14df51ae59762d5a04c2f_256137_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="163"
data-flex-basis="392px"
>&lt;/p>
&lt;p>根据这三个参数，可以对普通用户的挂载资源进行增删改查。&lt;/p>
&lt;h3 id="hello-world">Hello World&lt;/h3>
&lt;p>使用 &lt;a class="link" href="#get_user_info" >&lt;strong>接口：获取用户信息&lt;/strong>&lt;/a> 测试 Token 是否有效。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Change your private information&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">STATIC_ACCESS_TOKEN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">STATIC_REFRESH_TOKEN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">DEFAULT_DRIVE_ID&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_user_info&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">api_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://api.aliyundrive.com/v2/user/get&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;authorization&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">STATIC_ACCESS_TOKEN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">api_url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">get_user_info&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若一切正常，你将成功获取到如下信息（返回信息仅供演示，此处隐去 private value ）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;domain_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;avatar&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;created_at&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;updated_at&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;nick_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;phone&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;role&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;enabled&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;user_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;default_drive_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;user_data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;back_up_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;手机备份&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;folder_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;photo_folder_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sub_folder&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;video_folder_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;share&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;deny_change_password_by_self&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;need_change_password_next_login&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;permission&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，你已成功配置 &lt;code>authorization-header&lt;/code> 并调用 &lt;code>/user/get&lt;/code> 接口实现&lt;strong>用户信息获取&lt;/strong>，而几乎所有的公开 API 都仅需此配置即可调用。&lt;/p>
&lt;h2 id="public-api">Public API&lt;/h2>
&lt;h3 id="user-group">User Group&lt;/h3>
&lt;h4 id="get-user-info">Get User Info&lt;/h4>
&lt;p>&lt;span id="get_user_info">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://api.aliyundrive.com/v2/user/get" target="_blank" rel="noopener"
>https://api.aliyundrive.com/v2/user/get&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>info&lt;/p>
&lt;p>获取账号基础信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>authorization&lt;/em>&lt;/td>
&lt;td>your access_token&lt;/td>
&lt;td>access_token（ 2 小时刷新一次）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>Body&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Response&lt;/p>
&lt;/li>
&lt;li>
&lt;p>example&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="source-group">Source Group&lt;/h3>
&lt;p>与挂载资源相关的接口组。&lt;/p>
&lt;h4 id="get-file-list">Get File List&lt;/h4>
&lt;p>&lt;span id="get_file_list">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://api.aliyundrive.com/v2/file/list" target="_blank" rel="noopener"
>https://api.aliyundrive.com/v2/file/list&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>info&lt;/p>
&lt;p>获取目标挂载区的文件列表标签。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Name&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;em>authorization&lt;/em>&lt;/td>
&lt;td>&lt;em>your access_token&lt;/em>&lt;/td>
&lt;td>access_token（ 2 小时刷新一次）详见刷新 token&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;em>drive_id&lt;/em>&lt;/td>
&lt;td>&lt;em>your drive_id&lt;/em>&lt;/td>
&lt;td>磁盘id值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">parent_file_id&lt;/td>
&lt;td>root&lt;/td>
&lt;td>上级文件夹路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">limit&lt;/td>
&lt;td>10&lt;/td>
&lt;td>每页显示文件数量&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">all&lt;/td>
&lt;td>false&lt;/td>
&lt;td>是否显示全部&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">image_thumbnail_process&lt;/td>
&lt;td>image/resize,w_160/format,jpeg&lt;/td>
&lt;td>图片缩略图类型&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">order_by&lt;/td>
&lt;td>updated_at&lt;/td>
&lt;td>排序字段&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">order_direction&lt;/td>
&lt;td>desc&lt;/td>
&lt;td>升序 asce / 降序 desc&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">fields&lt;/td>
&lt;td>*&lt;/td>
&lt;td>字段通配符&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>Body&lt;/li>
&lt;li>Response&lt;/li>
&lt;li>example&lt;/li>
&lt;/ul>
&lt;h4 id="get-file-details">Get File Details&lt;/h4>
&lt;p>&lt;span id="get_file_details">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://api.aliyundrive.com/v2/file/get" target="_blank" rel="noopener"
>https://api.aliyundrive.com/v2/file/get&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>info&lt;/p>
&lt;p>获取某个文件实体的详细信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>authorization&lt;/em>&lt;/td>
&lt;td>&lt;em>your access_token&lt;/em>&lt;/td>
&lt;td>access_token（ 2 小时刷新一次）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>Body&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;drive_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;your drive_id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;file_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;the file id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Response&lt;/p>
&lt;/li>
&lt;li>
&lt;p>example&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="get-download-url">Get Download Url&lt;/h4>
&lt;p>&lt;span id="get_download_url">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://api.aliyundrive.com/v2/file/get_download_url" target="_blank" rel="noopener"
>https://api.aliyundrive.com/v2/file/get_download_url&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>info&lt;/p>
&lt;p>拉取某个指定的文件实体&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Header&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>authorization&lt;/em>&lt;/td>
&lt;td>&lt;em>your access_token&lt;/em>&lt;/td>
&lt;td>access_token（2小时刷新一次）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>Body&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Response&lt;/p>
&lt;/li>
&lt;li>
&lt;p>example&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="advanced-work">Advanced Work&lt;/h2>
&lt;h3 id="内联搜索系统">内联搜索系统&lt;/h3>
&lt;p>在 &lt;code>Telegram bot | Inline Queries&lt;/code> 服务中将阿里云盘作为超大型文件的内联搜索中间件。&lt;/p>
&lt;h3 id="用户组资源映射">用户组资源映射&lt;/h3>
&lt;p>使用 &lt;code>AliyunDrive&lt;/code> 网页版的现有特性，构建文件秒传通道。&lt;/p>
&lt;h2 id="excellent-work">Excellent Work&lt;/h2>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/liupan1890/aliyunpan" target="_blank" rel="noopener"
>liupan1890/aliyunpan: 阿里云盘小白羊版 阿里云盘PC版 (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.lengmou.net/articles/2021/03/31/1617160877140.html" target="_blank" rel="noopener"
>基于阿里云盘的共享云盘搭建 | 冷眸小站 (lengmou.net)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 YOLOv5 』死神VS火影 | 2D目标检测</title><link>https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/</link><pubDate>Thu, 02 Sep 2021 23:11:00 +0800</pubDate><guid>https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/</guid><description>&lt;img src="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/Jlog7weRvmDTfhr.jpg" alt="Featured image of post 『 YOLOv5 』死神VS火影 | 2D目标检测" />&lt;blockquote>
&lt;p>2D-object-detection-Bleach-vs-Naruto&lt;/p>
&lt;/blockquote>
&lt;p>《死神VS火影》| 试用 YOLOv5 完整体验自建数据集，训练模型，参数调优，最后实现 2D 目标检测的全过程。&lt;/p>
&lt;h2 id="demo">Demo&lt;/h2>
&lt;p>&lt;img src="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/Jlog7weRvmDTfhr.jpg"
width="1280"
height="732"
srcset="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/Jlog7weRvmDTfhr_huccaad804e4b49c112e1e23c8189f5184_230476_480x0_resize_q75_box.jpg 480w, https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/Jlog7weRvmDTfhr_huccaad804e4b49c112e1e23c8189f5184_230476_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="419px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.wolai.com/pHSh6Uuc9x1wwC2GSiLtyf?theme=light" target="_blank" rel="noopener"
> &lt;strong>🚀See more demo&lt;/strong> &lt;/a>&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>NIIT 暑期实习课后作业。&lt;/p>
&lt;h2 id="install">Install&lt;/h2>
&lt;h3 id="download-project">Download Project&lt;/h3>
&lt;p>Clone 项目，使用 Pycharm 启动工程 &lt;a class="link" href="https://github.com/QIN2DIM/2D-object-detection-Bleach-vs-Naruto" target="_blank" rel="noopener"
>🚀 See Github Homepage&lt;/a>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/5b467eefa083c38d4d5f5785b4cfc250.png"
width="1728"
height="684"
srcset="https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/5b467eefa083c38d4d5f5785b4cfc250_hub25e5356a7b0a5d5e8e7e008f2d30798_198584_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/2d-object-detection-bleach-vs-naruto/5b467eefa083c38d4d5f5785b4cfc250_hub25e5356a7b0a5d5e8e7e008f2d30798_198584_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="252"
data-flex-basis="606px"
>&lt;/p>
&lt;h3 id="download-game-optional">Download Game [optional]&lt;/h3>
&lt;p>获取《死神vs火影 3.3》FLASH 游戏本体&lt;/p>
&lt;p>链接：https://pan.baidu.com/s/1gjYlIzwjsYKDt8-cq1AqhA&lt;/p>
&lt;p>提取码：5dyt&lt;/p>
&lt;h3 id="download-bvn-network-optional">Download BVN-Network [optional]&lt;/h3>
&lt;p>获取欠优化的序列模型，可直接用于预测任务&lt;/p>
&lt;p>链接：https://pan.baidu.com/s/12Re3w9V56z-J-0LGCPK_IQ&lt;/p>
&lt;p>提取码：digz&lt;/p>
&lt;h3 id="download-database-optional">Download Database [optional]&lt;/h3>
&lt;p>获取作者手动标注的数据集（未经数据增强）；包含录制的游戏视频及分割成帧的游戏图片，视频分割成帧的&lt;code>.py&lt;/code> 脚本，官方贴图（人物模型），images 图片数据集及其对应的 labels 标注集（使用 &lt;a class="link" href="https://blog.csdn.net/To_ChaRiver/article/details/119619515?spm=1001.2014.3001.5501" target="_blank" rel="noopener"
>make-sense&lt;/a> 导出）&lt;/p>
&lt;p>链接：https://pan.baidu.com/s/1o64LCXUk9LR85ipCR9-cSw&lt;/p>
&lt;p>提取码：7qqa&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>Clone 项目后，请标记 &lt;code>database&lt;/code>、&lt;code>game&lt;/code> 目录为“排除”，&lt;code>network&lt;/code> 为“运行根”。&lt;/p>
&lt;p>以 &lt;code>./network&lt;/code> 为运行根启动 &lt;code>Terminal&lt;/code>，执行 &lt;code>detect.py&lt;/code> 进行预测：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/2D-object-detection-Bleach-vs-Naruto/network
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>python detect.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行结果缓存到目录 &lt;code>./network/runs/detect/exp[number]&lt;/code> 。&lt;/p>
&lt;h2 id="project-tree">Project Tree&lt;/h2>
&lt;p>如下为本项目的工程结构。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">object&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">detection&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Bleach&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">vs&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Naruto&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">├──&lt;/span> &lt;span class="n">database&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">captures&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">images&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">labels&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">└──&lt;/span> &lt;span class="n">role_map&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">├──&lt;/span> &lt;span class="n">game&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">└──&lt;/span> &lt;span class="n">死神vs火影3&lt;/span>&lt;span class="mf">.3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">├──&lt;/span> &lt;span class="n">LICENSE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">├──&lt;/span> &lt;span class="n">network&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">detect&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">export&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">hubconf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">LICENSE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">models&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">requirements&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">runs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">train&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">├──&lt;/span> &lt;span class="n">utils&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">└──&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">└──&lt;/span> &lt;span class="n">README&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">md&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>./database&lt;/code> 存放训练数据&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>./database/captures&lt;/code>：游戏录屏文件的存放目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./database/images&lt;/code>：游戏录屏文件切割成帧后的图片存放目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./database/labels&lt;/code>：图片帧的标注集（与images一一对应）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./database/role_map&lt;/code>：预存放的游戏人物贴图，包含角色一户（卍解）以及漩涡鸣人&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./game&lt;/code> 存放《死神vs火影3.3》FLASH 游戏本体&lt;/p>
&lt;p>Windows 客户端直接运行&lt;code>./game/死神vs火影3.3/launch.exe&lt;/code> 进入游戏。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network&lt;/code> 目录仿制 &lt;code>YOLOv5&lt;/code> 编排&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>./network/data&lt;/code> 存放需要执行预测任务的素材（如：图片、视频）&lt;/p>
&lt;ul>
&lt;li>&lt;code>./network/data/images&lt;/code>：需要执行预测任务的图片存放目录&lt;/li>
&lt;li>&lt;code>./network/data/video&lt;/code>：需要执行预测任务的视频存放目录&lt;/li>
&lt;li>&lt;code>./network/data/BleachVsNaruto.yaml&lt;/code>：引导模型训练所用数据集路径的配置文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/models&lt;/code> 存放yolo基准模型参数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/utils&lt;/code> 存放构建网络的必要工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/runs&lt;/code> 存放网络运行缓存&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>./network/runs/detect&lt;/code>：由 &lt;code>detect.py&lt;/code> 预测任务产生的输出，与所选择的 &lt;code>./network/data/&lt;/code> 资源一一对应&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/runs/train&lt;/code>：由 &lt;code>train.py&lt;/code> 训练任务产生的输出，存放导出的模型、网络收敛图以及各种评价指标图&lt;/p>
&lt;p>&lt;code>./network/runs/train/bvn-base/weights/&lt;/code> 中存放了欠优化的序列模型，可直接用于预测任务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/detect.py&lt;/code> 预测任务的启动接口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>./network/train.py&lt;/code> 训练任务的启动接口&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>『 Python 』Python Selenium 破解极验(GeeTest)滑动验证</title><link>https://blog.echosec.top/p/python-geetest-breaker/</link><pubDate>Wed, 18 Aug 2021 21:53:50 +0800</pubDate><guid>https://blog.echosec.top/p/python-geetest-breaker/</guid><description>&lt;img src="https://blog.echosec.top/p/python-geetest-breaker/typewriter.jpg" alt="Featured image of post 『 Python 』Python Selenium 破解极验(GeeTest)滑动验证" />&lt;blockquote>
&lt;p>TOS&lt;/p>
&lt;ol>
&lt;li>本项目仅供交流学习，有疑问请在 &lt;a class="link" href="https://github.com/QIN2DIM/armour-geetest/issues" target="_blank" rel="noopener"
>Issues&lt;/a> 中提出；&lt;/li>
&lt;li>本项目不提供面向任何商业需求的版本迭代；&lt;/li>
&lt;li>关于本项目源码的使用请遵循 Apache-2.0 License；&lt;/li>
&lt;li>禁止任何人使用本项目及其分支提供任何形式的收费代理服务。&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h2 id="项目简介-">项目简介 🐱‍🏍&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/QIN2DIM/armour-geetest" target="_blank" rel="noopener"
>ArmourGeeTest&lt;/a> 是一种针对 &lt;a class="link" href="https://www.geetest.com/" target="_blank" rel="noopener"
>GeeTest 极验&lt;/a> 滑动验证的超高通过率解决方案。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>引入&lt;strong>姿态收敛&lt;/strong>以及&lt;strong>惯性&lt;/strong>等初中物理概念解决二维空间中的像素对齐问题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当这个难倒了大批爬虫玩家的问题被抽象成&lt;strong>缺口识别&lt;/strong>以及&lt;strong>像素对齐&lt;/strong>两个指标时使用本方案进行百次实验：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>当&lt;strong>缺口识别率&lt;/strong>为 100% 时，&lt;code>gt3&lt;/code>通过率为 92%。&lt;/p>
&lt;p>失败案例中超半数由收敛超时引发，剩下的被怪兽吃掉了；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当&lt;strong>缺口识别率&lt;/strong>为 100% 时，&lt;code>gt2&lt;/code>通过率 100%。&lt;/p>
&lt;p>仅在缺口被遮挡时失败，但此时更倾向认为&lt;strong>缺口识别率&lt;/strong> &amp;lt;100%；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>gt3&lt;/code> 算子收敛过程小概率出现“震荡”现象，此时（为保证通过率）任务耗时将大幅增长，开发者可通过优（手）化（调）本项目的模型超参数，达成&lt;strong>低耗时&lt;/strong> + &lt;strong>高通过率&lt;/strong>的性能指标。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="快速上手-">快速上手 🛴&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>【方案一】用户&lt;/strong>&lt;/p>
&lt;p>通过观看 &lt;a class="link" href="https://www.wolai.com/pbhA77godFuXjofA1QC7JG?theme=light" target="_blank" rel="noopener"
>ArmourGeeTest Demo &lt;/a>了解本项目的工作范围。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>【方案二】开发者&lt;/strong>&lt;/p>
&lt;p>Clone项目，根据 &lt;a class="link" href="https://github.com/QIN2DIM/sspanel-geetest/blob/main/docs/subs/%e6%8a%80%e6%9c%af%e6%96%87%e6%a1%a3.md" target="_blank" rel="noopener"
>技术文档 &lt;/a>合理配置 &lt;code>config.py&lt;/code> 后编译项目。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="用法说明-">用法说明 🤷‍♂️&lt;/h2>
&lt;blockquote>
&lt;p>更多详细信息请访问本项目 &lt;a class="link" href="https://github.com/QIN2DIM/armour-geetest" target="_blank" rel="noopener"
>Github仓库&lt;/a>。&lt;/p>
&lt;/blockquote></description></item><item><title>『 Python 』Subprocess.Popen 监控控制台输出</title><link>https://blog.echosec.top/p/python-subprocess-popen/</link><pubDate>Sun, 15 Aug 2021 23:10:59 +0800</pubDate><guid>https://blog.echosec.top/p/python-subprocess-popen/</guid><description>&lt;img src="https://blog.echosec.top/p/python-subprocess-popen/book1.jpg" alt="Featured image of post 『 Python 』Subprocess.Popen 监控控制台输出" />&lt;h2 id="问题描述">问题描述&lt;/h2>
&lt;ol>
&lt;li>在 Python 代码中编译可执行文件，需要监控执行过程及运行结果，当前场景等效为捕获控制台的特征信息的“打印情况”；&lt;/li>
&lt;li>编译程序独占进程，且存在 &lt;code>Terminal进度条&lt;/code> 等频繁刷新的需要监控的特征信息；&lt;/li>
&lt;li>需要捕获的特征信息存在简体中文，需要做编码转换；&lt;/li>
&lt;/ol>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>如下所示为本例参考代码。使用 Python3 内置模块 &lt;code>subprocess.Popen&lt;/code> 建立 channel 。设定参数 &lt;code>encoding='utf8'&lt;/code>，转码简体中文。设定 &lt;code>universal_newlines=True&lt;/code> 以及 &lt;code>bufsize=1&lt;/code> 建立缓冲区，以便捕获频繁刷新的进度条等特征信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">仅用作demo演示，请勿在真实IPC场景下直接cv代码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">sys: Windows
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">env: Python 3.7.9
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">_listener&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">global&lt;/span> &lt;span class="n">title&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 如果您还未安装you-get脚手架 请先执行 pip install you-get 或 pip3 install you-get&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 尝试直接在 Terminal 中运行 `you-get [url]` 查看区别&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># you-get 将嗅探目标链接下的影视资源对象，并保存至当前目录下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cmd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;you-get https://www.bilibili.com/video/BV1Yv41147QK&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Popen&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cmd&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stdin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PIPE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stdout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PIPE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stderr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">STDOUT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">universal_newlines&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bufsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Popen&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">poll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readline&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 仅做演示，首次下载时捕获视频文件名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">title&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startswith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Downloading&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_listener&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 仅作演示，自动打开下载好的视频&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startfile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="ne">FileNotFoundError&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ne">FileExistsError&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>[1] &lt;a class="link" href="https://docs.python.org/3.7/library/subprocess.html#popen-constructor" target="_blank" rel="noopener"
>subprocess — Subprocess management — Python 3.7.11 documentation&lt;/a>&lt;/p></description></item><item><title>『 YOLOv5 』Make Sense</title><link>https://blog.echosec.top/p/yolov5-make-sense/</link><pubDate>Wed, 11 Aug 2021 23:54:55 +0800</pubDate><guid>https://blog.echosec.top/p/yolov5-make-sense/</guid><description>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/4ef6638.png" alt="Featured image of post 『 YOLOv5 』Make Sense" />&lt;blockquote>
&lt;p>Make Sense | Free to use online tool for labelling photos.&lt;/p>
&lt;/blockquote>
&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>本文简要介绍使用 make-sense 建立 &lt;code>YOLOv5 Object Detection&lt;/code> 图像标签的完整步骤并提及使用过程中的注意事项。&lt;/p>
&lt;h2 id="平台简介">平台简介&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/SkalskiP/make-sense" target="_blank" rel="noopener"
>make-sense&lt;/a> 是一个被 &lt;a class="link" href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data" target="_blank" rel="noopener"
>YOLOv5官方&lt;/a> 推荐使用的图像标注工具。&lt;/p>
&lt;p>相比于其他工具，make-sense 的上手难度非常低，仅需数分钟，玩家便能熟练掌握工作台中的功能选项，快速地进入工作状态；此外，由于 make-sense 是一款 web 应用，各个操作系统的玩家可打破次元壁实现工作协同。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="sneak-peek-流程预览">Sneak Peek 流程预览&lt;/h3>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/08f77172e306461e92b0cb75bd1e929d.gif"
width="1754"
height="891"
srcset="https://blog.echosec.top/p/yolov5-make-sense/08f77172e306461e92b0cb75bd1e929d_hu5e8c533ededd7ddfd9def97f149d6b1c_4814462_480x0_resize_box_1.gif 480w, https://blog.echosec.top/p/yolov5-make-sense/08f77172e306461e92b0cb75bd1e929d_hu5e8c533ededd7ddfd9def97f149d6b1c_4814462_1024x0_resize_box_1.gif 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="196"
data-flex-basis="472px"
>&lt;/p>
&lt;h3 id="drop-images-缓存需要标注的图像数据集">Drop Images 缓存需要标注的图像数据集&lt;/h3>
&lt;p>进入 &lt;a class="link" href="https://www.makesense.ai/" target="_blank" rel="noopener"
>make sense&lt;/a> 站点主页，点击右下角 &lt;code>Get Started&lt;/code> 进入任务。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvX0NoYVJpdmVy,size_16,color_FFFFFF,t_70.png"
width="1342"
height="790"
srcset="https://blog.echosec.top/p/yolov5-make-sense/_hu9b50f8f8c9a09018e35f83b943878765_693622_7737bebfb8700f3918bfbf13e583e090.png 480w, https://blog.echosec.top/p/yolov5-make-sense/_hu9b50f8f8c9a09018e35f83b943878765_693622_d323be20d7b38dc389fcd4a5fd844295.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="169"
data-flex-basis="407px"
>&lt;/p>
&lt;p>拖入或上传需要标注的图像数据集。此处不支持文件夹套娃，请将所有需要标注的图像放在同一文件夹下，需要做避免重名的处理；或者您也可以多次上传位于不同文件夹下的图像。&lt;/p>
&lt;p>值得一提的是，标注任务开时候您也可以再补充缓存需要标注的图像，但没有可靠的方式“删除”已缓存的图像。若您在标注过程中发现上传了脏数据，只需不对此图片进行任何标注，导出时就不会生成对该图像的标注数据（文件）。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/a059d15d9eb8dee3bfdc1d96cf686aa6-16331692661806.png"
width="651"
height="470"
srcset="https://blog.echosec.top/p/yolov5-make-sense/a059d15d9eb8dee3bfdc1d96cf686aa6-16331692661806_hu8da9d8fde3a89ae6c0556d8da4f79a2e_111058_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/a059d15d9eb8dee3bfdc1d96cf686aa6-16331692661806_hu8da9d8fde3a89ae6c0556d8da4f79a2e_111058_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="138"
data-flex-basis="332px"
>&lt;/p>
&lt;h3 id="object-detection-进入目标检测标注模式">Object Detection 进入目标检测标注模式&lt;/h3>
&lt;p>上传图像后，选择进入目标检测的标注模式。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/617764cd22629333edd999abb6ecf1e5.png"
width="622"
height="464"
srcset="https://blog.echosec.top/p/yolov5-make-sense/617764cd22629333edd999abb6ecf1e5_hu8c6aeedf516d7601a72e8fe040048ab2_103691_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/617764cd22629333edd999abb6ecf1e5_hu8c6aeedf516d7601a72e8fe040048ab2_103691_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="134"
data-flex-basis="321px"
>&lt;/p>
&lt;h3 id="create-labels-创建标签">Create Labels 创建标签&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>导入文件自动生成标签（Load labels from file ）一行一个；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>手动创建标签，点击左边栏的“＋”符号；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>创建成功后点击 [Start project] 开始标注。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/R4QFCh7qcN2V3Et.png"
width="1877"
height="1287"
srcset="https://blog.echosec.top/p/yolov5-make-sense/R4QFCh7qcN2V3Et_hubbf57ae39ed7b77f5cba1bb001c3a824_133405_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/R4QFCh7qcN2V3Et_hubbf57ae39ed7b77f5cba1bb001c3a824_133405_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="350px"
>&lt;/p>
&lt;p>此处为了方便演示，我们选择手动创建标签。&lt;/p>
&lt;div align="center">&lt;img src="EAeOYndMx4o1Nvy.png" alt="image-20210811220853094" style="zoom: 50%;" />&lt;/div>
&lt;p>同样，我们仍可在工作过程中随时调整（&lt;kbd>Actions&lt;/kbd> | &lt;kbd>Edit Labels&lt;/kbd>）标签的&lt;code>规模&lt;/code>及&lt;code>顺序&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/9789a712bcb28ad3d50375d10ecb6afb.png"
width="387"
height="366"
srcset="https://blog.echosec.top/p/yolov5-make-sense/9789a712bcb28ad3d50375d10ecb6afb_hu4e8b75c35f39e24f2d9d3c8a44dfa048_23921_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/9789a712bcb28ad3d50375d10ecb6afb_hu4e8b75c35f39e24f2d9d3c8a44dfa048_23921_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="105"
data-flex-basis="253px"
>&lt;/p>
&lt;h3 id="work-开始标注">Work 开始标注&lt;/h3>
&lt;p>Make Sense 支持矩形 (Rect)、点 (Point)、线 (Line)、多边形 (Polyygon) 多种标注模式，点选相应的模式开始“抠图”既可。&lt;/p>
&lt;p>工作台上有放大、缩小、还原比例、拖动、删除标签等操作工具，不过多介绍，玩几下就懂了。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/9a33ab4b094ba09ca86a25ead78945ce.png"
width="1878"
height="1288"
srcset="https://blog.echosec.top/p/yolov5-make-sense/9a33ab4b094ba09ca86a25ead78945ce_hu08fc7987495858cf550b73d0b5ce94f4_462039_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/9a33ab4b094ba09ca86a25ead78945ce_hu08fc7987495858cf550b73d0b5ce94f4_462039_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="349px"
>&lt;/p>
&lt;h3 id="export-导出标注">Export 导出标注&lt;/h3>
&lt;p>点选 &lt;kbd>Actions&lt;/kbd> | &lt;kbd>Export Annotations&lt;/kbd> 导出标注。&lt;/p>
&lt;div align="center">&lt;img src="SIsn8miqA7zXbZW.png" alt="image-20210811222025070" style="zoom:50%;" />&lt;/div>
&lt;p>Export后会自动下载生成的压缩包文件。压缩包内是一一对应的标注集文件，与标注数据文件名与其对应的图像文件名一致。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/379019ee57844820a72bc2970b2736ed.png"
width="1456"
height="329"
srcset="https://blog.echosec.top/p/yolov5-make-sense/379019ee57844820a72bc2970b2736ed_hu1eb0ae680a9665f223504e18f0f00572_79024_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/379019ee57844820a72bc2970b2736ed_hu1eb0ae680a9665f223504e18f0f00572_79024_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="442"
data-flex-basis="1062px"
>&lt;/p>
&lt;h3 id="review-审查标注数据">Review 审查标注数据&lt;/h3>
&lt;p>由 &lt;a class="link" href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data" target="_blank" rel="noopener"
>YOLOv5作者对创建标签的有关介绍 &lt;/a>可知，图像标注文件有明确的格式要求（&lt;code>YOLO format&lt;/code>）,图像 （&lt;code>ImageObject&lt;/code>）对应的标注文件（&lt;code>LabelObject&lt;/code>）必须是 &lt;code>.txt&lt;/code> 格式文件，其内容必须以空格按序切割成如下成分：&lt;/p>
&lt;ul>
&lt;li>目标类型：第1列成分，以数字序号区分的标签；&lt;/li>
&lt;li>目标标识区域（以&lt;code>2D Object &lt;/code>为例）：4列连续的成分，依次为目标实体的中点 x 坐标（class x_center），中点 y 坐标（class x_center），宽度（width）以及高度 （height）；&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/7862b814c7eb88586c58cc415aac0ee0.png"
width="1480"
height="920"
srcset="https://blog.echosec.top/p/yolov5-make-sense/7862b814c7eb88586c58cc415aac0ee0_huf929e521836f485071e453974af6cb89_248810_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/7862b814c7eb88586c58cc415aac0ee0_huf929e521836f485071e453974af6cb89_248810_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="386px"
>&lt;/p>
&lt;p>再来看看刚才标注的&lt;code>宵宫&lt;/code>目标数据。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">0&lt;/span> &lt;span class="mf">0.493783&lt;/span> &lt;span class="mf">0.509473&lt;/span> &lt;span class="mf">0.454707&lt;/span> &lt;span class="mf">0.969410&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如上所示，&lt;strong>第一列&lt;/strong>是标签&lt;code>宵宫&lt;/code>所在标签集合的序号，由于我们仅有一个标签，此处自然为0。值得一提的是，此处的序号是按照Make Sense中的标签&amp;quot;顺序&amp;quot;排列的，与 &lt;code>YOLOv5&lt;/code> train 数据集索引配置文件 (&lt;code>.yaml&lt;/code>) 中的 &lt;code>names&lt;/code> 变量的分类名 &lt;code>class names&lt;/code> 顺序无关，建议两者顺序保持一致。&lt;strong>后四列&lt;/strong>为作者框选的目标边界数据，我们可以大概这么理解，根据下图我们可知人物主体居中构图，2，3 列体现的趋于 0.5 的数据符合主观预估值；人物宽度约占画幅 X 区间的一半 (0.454707)，而高度却几乎占满整个画幅Y区间 (0.969410)。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/yolov5-make-sense/4ef6638.png"
width="1342"
height="790"
srcset="https://blog.echosec.top/p/yolov5-make-sense/4ef6638_hu9b50f8f8c9a09018e35f83b943878765_693622_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/yolov5-make-sense/4ef6638_hu9b50f8f8c9a09018e35f83b943878765_693622_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="169"
data-flex-basis="407px"
>&lt;/p>
&lt;h2 id="高级操作">高级操作&lt;/h2>
&lt;p>原本至此完整的标注集导出流程已完全结束，但是作者发现本项目竟然是开源的&amp;hellip;意味着感兴趣的同学可以通过 &lt;a class="link" href="https://github.com/SkalskiP/make-sense" target="_blank" rel="noopener"
>项目README&lt;/a> 中推荐的方案（Docker/npm）在自己熟悉的环境中部署此项目。&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;ul>
&lt;li>普通操作模式下，数据集缓存在内存里不会&amp;quot;上传&amp;quot;，这也解释了为何图像加载后我们能迅速投入工作。若使用 AI 标注功能，数据集可能被成批次地上传，而且此过程可能涉及与国外多服务器的通信，用时较长，且 AI 标注场景局限在日常生活的应用场景中，若场景不符则不推荐使用；&lt;/li>
&lt;li>因此，页面误操作关闭后，标注结果必然游离，所以标注工程量较大的任务时建议小批次缓存标注，或按时导出以保存本阶段的工作进度；&lt;/li>
&lt;/ul>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>[1] &lt;a class="link" href="https://www.dexerto.com/genshin-impact/genshin-impact-yoimiya-banner-leaks-5-star-pyro-character-release-date-1625360/" target="_blank" rel="noopener"
>Genshin Impact Yoimiya banner leaks: 5-star Pyro character release date - Dexerto&lt;/a>&lt;/p>
&lt;p>[2] &lt;a class="link" href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data" target="_blank" rel="noopener"
>Train Custom Data · ultralytics/yolov5 Wik&lt;/a>&lt;/p>
&lt;p>[3] &lt;a class="link" href="https://github.com/SkalskiP/make-sense" target="_blank" rel="noopener"
>SkalskiP/make-sense: Free to use online tool for labelling photos&lt;/a>&lt;/p></description></item><item><title>『 Tmux 』在脚本中运行 Tmux</title><link>https://blog.echosec.top/p/tmux-shell/</link><pubDate>Fri, 06 Aug 2021 01:44:51 +0800</pubDate><guid>https://blog.echosec.top/p/tmux-shell/</guid><description>&lt;img src="https://blog.echosec.top/p/tmux-shell/coffee-g2e.jpg" alt="Featured image of post 『 Tmux 』在脚本中运行 Tmux" />&lt;h2 id="问题描述">问题描述&lt;/h2>
&lt;p>在 shell 脚本中编写了含有 &lt;code>tmux&lt;/code> 的指令，希望规定的指令能在独立的某个会话中运行，防止特殊任务阻塞脚本的运行。然而在脚本执行!到“开启 tmux 窗口”时，后续指令并不会按照原意灌入指定的窗格，而是弥散到原面板或 tmux 窗口中。&lt;/p>
&lt;h2 id="解决思路">解决思路&lt;/h2>
&lt;h3 id="已验证的不可靠思路">已验证的不可靠思路&lt;/h3>
&lt;p>认为错误原因是窗口的创建“来不及加载”导致后续打算在该窗口中运行的指令乱飞，故使用 &lt;code>sleep&lt;/code> 穿插在代码中尝试解决问题。实际上，这种思路是不可靠的，因为运行在脚本中的tmux命令会在指令尾默认加上一条“分离指令 (detach)”，这会导致 tmux 无法理解紧接着执行的原生 sh 脚本指令 (&lt;code>no client found&lt;/code>)[3,4]。换言之，tmux 不知道后续的指令是否需要在当前的窗口中运行，包括上文说到的 &lt;code>sleep&lt;/code> 指令。&lt;/p>
&lt;h3 id="可靠的解决方案">可靠的解决方案&lt;/h3>
&lt;p>引用tmux中的&lt;code>send&lt;/code>参数按照规定的写法指定会话，指定窗口（窗格）执行指定的命令实现“指哪打哪”。参考代码如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Time : 2021/8/5 23:40&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Author : QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github : https://github.com/QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Description: Tmux 脚本编程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">systemctl_create_v2raycs&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 创建一个后台运行的名为v2raycs的session会话，其默认窗口名为system&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># [-s sessionName] [-n windowName] [-d daemon]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux new -s v2raycs -n system -d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 水平切割 v2raycs:system 使窗口分为上下屏（窗格），光标随splicer切换至下分屏&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 使用标识符指定后台运行的操作目标 [-t targetPane]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># os.system(f&amp;#34;tmux split-window -t &amp;#39;v2raycs:system&amp;#39;&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 向指定会话的指定窗格发出指令&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 使用标识符指定后台运行的操作目标 [-t targetPane]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux send -t &amp;#39;v2raycs:system&amp;#39; &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;cd /qinse/V2RaycSpider1325/;python main.py deploy&amp;#39; Enter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">systemctl_create_bot&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux new -s bot -n core -d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux new -s go-cqhttp -n core -d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux send -t &amp;#39;bot:core&amp;#39; &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;cd /qinse/cqbot/bbot;python bot.py&amp;#39; Enter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;tmux send -t &amp;#39;go-cqhttp:core&amp;#39; &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;cd /qinse/cqbot/go-cqhttp;./go-cqhttp ./device.json&amp;#39; Enter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">systemctl_create_v2raycs&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">systemctl_create_bot&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>[1] &lt;a class="link" href="http://louiszhai.github.io/2017/09/30/tmux/" target="_blank" rel="noopener"
>Louis Tumux使用手册&lt;/a>&lt;/p>
&lt;p>[2] &lt;a class="link" href="https://www.kancloud.cn/kancloud/tmux" target="_blank" rel="noopener"
>Tmux: Productive Mouse-Free Development 中文版&lt;/a>&lt;/p>
&lt;p>[3] &lt;a class="link" href="https://github.com/tmux/tmux/wiki/FAQ#i-found-a-bug-in-tmux-what-do-i-do" target="_blank" rel="noopener"
>FAQ · tmux/tmux Wiki&lt;/a>&lt;/p>
&lt;p>[4] &lt;a class="link" href="https://stackoverflow.com/questions/31902929/how-to-write-a-shell-script-that-starts-tmux-session-and-then-runs-a-ruby-scrip" target="_blank" rel="noopener"
>bash - How to write a shell script that starts tmux session, and then runs a ruby script - Stack Overflow&lt;/a>&lt;/p></description></item><item><title>『 Python 』Passthrough is not supported, GL is swiftshader</title><link>https://blog.echosec.top/p/python-selenium-debug-20210725/</link><pubDate>Sun, 25 Jul 2021 22:14:38 +0800</pubDate><guid>https://blog.echosec.top/p/python-selenium-debug-20210725/</guid><description>&lt;img src="https://blog.echosec.top/p/python-selenium-debug-20210725/vojta.jpg" alt="Featured image of post 『 Python 』Passthrough is not supported, GL is swiftshader" />&lt;h2 id="错误信息">错误信息&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">Passthrough is not supported, GL is swiftshader.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>通过 &lt;code>ChromeOptions()&lt;/code> 配置 Selenium 启动参数进而实现 &lt;code>chromedriver&lt;/code> 在 Windows 环境中以“无头模式”运行时于控制台的输出信息的控制：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># True：chromedriver静默启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SILENCE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">set_spider_option&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 调整chromedriver的读取路径，若不指定则尝试从环境变量中查找&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chromedriver_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;chromedriver&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">chromedriver_path&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">chromedriver_path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 实例化Chrome可选参数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 静默启动 参数组策略&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">SILENCE&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;--headless&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;--disable-gpu&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;--disable-software-rasterizer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 其他推荐设置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;--log-level=3&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_experimental_option&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;excludeSwitches&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;enable-logging&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_experimental_option&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;excludeSwitches&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;enable-automation&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">executable_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">this_is_a_business&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">api&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">set_spider_option&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://www.baidu.com&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this_is_a_business&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chromedriver_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>[1] &lt;a class="link" href="https://debugah.com/solved-python-selenium-chromedriver-error-passthrough-is-not-supported-gl-is-disabled-15549/" target="_blank" rel="noopener"
>[Solved] Python Selenium Chromedriver Error: (Passthrough is not supported, GL is disabled) | DebugAH&lt;/a>&lt;/p>
&lt;p>[2] &lt;a class="link" href="https://stackoverflow.com/questions/67501093/passthrough-is-not-supported-gl-is-disabled" target="_blank" rel="noopener"
>python - Passthrough is not supported, GL is disabled - Stack Overflow&lt;/a>&lt;/p></description></item><item><title>『 Python 』CampusDailyAutoSign 今日校园体温检测自动上报系统</title><link>https://blog.echosec.top/p/python-campusdailyautosign/</link><pubDate>Wed, 24 Feb 2021 19:27:24 +0800</pubDate><guid>https://blog.echosec.top/p/python-campusdailyautosign/</guid><description>&lt;img src="https://blog.echosec.top/p/python-campusdailyautosign/old-books.jpg" alt="Featured image of post 『 Python 』CampusDailyAutoSign 今日校园体温检测自动上报系统" />&lt;h2 id="项目简介-">项目简介 🐱‍🏍&lt;/h2>
&lt;blockquote>
&lt;ol>
&lt;li>本项目仅为 &lt;strong>海南大学&lt;/strong> 学子提供服务；&lt;/li>
&lt;li>本项目 &lt;strong>开源免费&lt;/strong> ，禁止任何人使用此项目及其分支提供任何形式的收费代理服务；&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-campusdailyautosign/MbkFBGQ3Ohj5X6p.png"
width="2186"
height="1162"
srcset="https://blog.echosec.top/p/python-campusdailyautosign/MbkFBGQ3Ohj5X6p_hub748e3b082325a324d341f92c38137fd_165290_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-campusdailyautosign/MbkFBGQ3Ohj5X6p_hub748e3b082325a324d341f92c38137fd_165290_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="188"
data-flex-basis="451px"
>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.yuque.com/docs/share/53c62de5-91bf-4f96-9330-fae53c6a4f0d?" title="程序流图1"
target="_blank" rel="noopener"
>程序流图 1&lt;/a> &lt;strong>||&lt;/strong> &lt;a class="link" href="https://www.yuque.com/docs/share/94dac928-a89c-47d3-9273-8bd049152b6e?" title="程序流图2"
target="_blank" rel="noopener"
>程序流图 2&lt;/a> &lt;strong>||&lt;/strong> &lt;a class="link" href="https://www.yuque.com/docs/share/b0634038-5ee5-4632-80c4-0564e7795489?" title="demo演示"
target="_blank" rel="noopener"
>demo 演示&lt;/a>&lt;/li>
&lt;li>本项目使用 &lt;a class="link" href="https://github.com/beiyuouo/hnu-temp-report-bot" target="_blank" rel="noopener"
>hnu-temp-report-bot&lt;/a> 跳板机实现人机交互，QQ 群内对 &lt;strong>bot(851722457)&lt;/strong> 使用&lt;code>关键字指令 &lt;/code>+ &lt;code>功能指令&lt;/code> 即可实现相关需求；&lt;/li>
&lt;/ul>
&lt;h2 id="快速上手-">快速上手 🛴&lt;/h2>
&lt;p>&lt;strong>【方案一】用户&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在群内拉入 QQ 机器人 &lt;strong>bot(851722457)&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据 &lt;a class="link" href="https://github.com/QIN2DIM/CampusDailyAutoSign/blob/main/docs/subdirectory/%e6%8a%80%e6%9c%af%e6%96%87%e6%a1%a3%28demo%29.md" title="技术文档"
target="_blank" rel="noopener"
>技术文档&lt;/a> 中的引导完成定时任务的增删改查或立即执行签到操作。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>【方案二】开发者&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Clone 项目:champagne:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据 &lt;a class="link" href="https://github.com/QIN2DIM/CampusDailyAutoSign/blob/main/docs/subdirectory/%e6%8a%80%e6%9c%af%e6%96%87%e6%a1%a3%28demo%29.md" title="技术文档"
target="_blank" rel="noopener"
>技术文档&lt;/a> 合理配置启动参数并通过脚手架调试或部署项目。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="食用指南-">食用指南 🤷‍♂️&lt;/h2>
&lt;blockquote>
&lt;p>详见本项目 &lt;a class="link" href="https://github.com/QIN2DIM/CampusDailyAutoSign" target="_blank" rel="noopener"
>GitHub Repository&lt;/a>，感谢支持。&lt;/p>
&lt;/blockquote></description></item><item><title>『 Python 』Resolve ModuleNotFoundError</title><link>https://blog.echosec.top/p/python-debug-20201217/</link><pubDate>Thu, 17 Dec 2020 10:12:15 +0800</pubDate><guid>https://blog.echosec.top/p/python-debug-20201217/</guid><description>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/book.jpg" alt="Featured image of post 『 Python 』Resolve ModuleNotFoundError " />&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>针对使用 &lt;code>PyCharm&lt;/code> 打开 &lt;code>Github&lt;/code> 上克隆的项目或自编的“千层饼”工程文件并导入自编或已存在的模块时遇上的 &lt;code>ModuleNotFoundError&lt;/code> 报错，本文简要列举了 &lt;code>Python&lt;/code> 编程环境中引发这项错误的可能原因，并在对比总结网上其他解决方案后给出本人的解决方案。&lt;/p>
&lt;h2 id="bug">Bug&lt;/h2>
&lt;h3 id="引用路径和模块名对不上">引用路径和模块名对不上&lt;/h3>
&lt;p>模块已更名重构或不存在。&lt;code>PyCharm&lt;/code> 中支持对整个工程文件中的索引重构，意味着一个文件改名，在当前项目中所有调用了这个模块的地方都会做相应的改动，所以这个不难解决。&lt;/p>
&lt;h3 id="模块存在且引用路径正确但就是报错">模块存在且引用路径正确但就是报错&lt;/h3>
&lt;p>&lt;code>Python&lt;/code>相对路径与绝对路径设置错误，表现出以下现象。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">Traceback &lt;span class="o">(&lt;/span>most recent call last&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;当前运行文件的绝对路径&amp;#34;&lt;/span>, line 3, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> from BusinessViewLayer.myapp.api import *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ModuleNotFoundError: No module named &lt;span class="s1">&amp;#39;BusinessViewLayer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注：其中所有的 .py 文件都是作者自己编写的模块，且都存放在相应的引用路径下。&lt;/p>
&lt;h2 id="debug">Debug&lt;/h2>
&lt;h3 id="网上常见的解决方案">网上常见的解决方案&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.cnblogs.com/wagyuze/p/12886893.html" target="_blank" rel="noopener"
>使用 sys.path.append() 添加临时环境变量&lt;/a>，这套方案可在 Linux 环境下部分有效，但在 Win 环境下可能失效且会让代码变得冗余；&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/qq_27158747/article/details/80936975" target="_blank" rel="noopener"
>使用 from .A import B 的相对路径索引方案&lt;/a>，这套方案在 Visual Studio Code 中可以正常编译但在 &lt;code>PyCharm&lt;/code> 中会进一步引发 &lt;code>ImportError&lt;/code> 错误；&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ImportError: attempted relative import with no known parent package.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="本文解决方案">本文解决方案&lt;/h3>
&lt;h4 id="solution1依托控制台运行">Solution1：依托控制台运行&lt;/h4>
&lt;ol>
&lt;li>直接编译，发现错误&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191137952.png"
width="1277"
height="243"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191137952_huec7cb181d3e0e62ea2865f6bca1f4aef_44390_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191137952_huec7cb181d3e0e62ea2865f6bca1f4aef_44390_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="525"
data-flex-basis="1261px"
>&lt;/p>
&lt;ol start="2">
&lt;li>在 &lt;code>PyCharm&lt;/code> 中打开 &amp;ndash; 运行 / 调试设置&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191145048.png"
width="489"
height="236"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191145048_hudb32de115951c3712e32ab26eb8bc79f_21919_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191145048_hudb32de115951c3712e32ab26eb8bc79f_21919_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="207"
data-flex-basis="497px"
>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191149886.png"
width="1076"
height="696"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191149886_hub12fb6f487cb2c9ce379d3b96f87c7ef_117088_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191149886_hub12fb6f487cb2c9ce379d3b96f87c7ef_117088_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
>&lt;/p>
&lt;ol start="3">
&lt;li>点击 &lt;kbd>确定&lt;/kbd> 后重新运行&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191158046.png"
width="1612"
height="868"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191158046_huf0f01cbcad34c8f79fd8557f117e0389_149200_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191158046_huf0f01cbcad34c8f79fd8557f117e0389_149200_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>
&lt;ol start="4">
&lt;li>
&lt;p>观察控制台&lt;/p>
&lt;p>我们发现，在 &lt;code>Python Console &lt;/code>中运行的模块，会自动链接环境变量，这就顺便达成了我们的需求。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191208022.png"
width="1101"
height="426"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191208022_hu218c03309fe8c88fef1c08cdd36912e0_63866_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191208022_hu218c03309fe8c88fef1c08cdd36912e0_63866_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="258"
data-flex-basis="620px"
>&lt;/p>
&lt;h4 id="solution2使用-pycharm-添加环境变量">Solution2：使用 PyCharm 添加环境变量&lt;/h4>
&lt;blockquote>
&lt;p>为什么要提出这套解决方案呢？显然&lt;strong>方案一并不是最优解。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>某些第三方日志库如 &lt;code>loguru&lt;/code> 在打印运行信息时，会因为各种编码原因导致显示在 Python Console 窗口中的（中文）信息乱码（但在 log 文件中显示正常）。虽然通过设置一些参数可以解决这些问题，但我们不希望在解决问题的过程中引入多余的操作，于是便有了解决方案二。&lt;/p>
&lt;p>方案二依然能够达成我们的需求，且不会引发上文所述的问题。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191403721.png"
width="1612"
height="868"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191403721_hu6c2165b50ec854375e335b7dc04d223c_160636_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191403721_hu6c2165b50ec854375e335b7dc04d223c_160636_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>
&lt;ol>
&lt;li>打开冰箱门&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191415111.png"
width="1076"
height="696"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191415111_hud187b3b06ce8de830be9b25d2374dbfd_111957_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191415111_hud187b3b06ce8de830be9b25d2374dbfd_111957_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
>&lt;/p>
&lt;ol start="2">
&lt;li>把李芬特装入冰箱&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191429958.png"
width="524"
height="721"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191429958_hu7af2271737ca7a7a7a8c3741daa048df_50850_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191429958_hu7af2271737ca7a7a7a8c3741daa048df_50850_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="72"
data-flex-basis="174px"
>&lt;/p>
&lt;ol start="3">
&lt;li>关闭冰箱门&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-debug-20201217/image-20211002191440628.png"
width="1612"
height="868"
srcset="https://blog.echosec.top/p/python-debug-20201217/image-20211002191440628_hu315b5ef2849e128dfd015a529f3b6843_169918_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-debug-20201217/image-20211002191440628_hu315b5ef2849e128dfd015a529f3b6843_169918_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>
&lt;p>至此，报错问题已经完全解决啦~&lt;/p></description></item><item><title>『 Python 』中国大学生计算机设计大赛📜历史作品博物馆</title><link>https://blog.echosec.top/p/python-4c-excellentproject/</link><pubDate>Tue, 01 Sep 2020 16:24:49 +0800</pubDate><guid>https://blog.echosec.top/p/python-4c-excellentproject/</guid><description>&lt;img src="https://blog.echosec.top/p/python-4c-excellentproject/1052010.jpg" alt="Featured image of post 『 Python 』中国大学生计算机设计大赛📜历史作品博物馆" />&lt;blockquote>
&lt;p>更多信息请参见 &lt;a class="link" href="https://github.com/QIN2DIM/4C-ExcellentProject" target="_blank" rel="noopener"
>GitHub Repository&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="前言-">前言 🤦‍♂️&lt;/h2>
&lt;p>🎉 本人有幸作为项目负责人参加 &lt;strong>2020 中国大学生计算机设计大赛&lt;/strong>，并拿下了大数据实践赛全国一等奖。&lt;/p>
&lt;p>🧐 做这个程序的初衷垂直~无意中看到了某个设计方向的作品，感触很深 ；本科生能独立完成这样的作品，真是太震撼了！嗯我说的就是“红楼梦信息交互设计”的华科小姐姐团队，真正的&lt;strong>面向薪资编程&lt;/strong>！&lt;/p>
&lt;p>🛒 于是便有了一个&lt;strong>收藏并展示该类比赛优秀作品&lt;/strong>的想法，于是本人点开官网后发现最新的作品展示还要追溯到 2015 年-……行吧那就撸起袖子自己写了一个自动化采集程序，该程序会自动化采集作品数据，并生成永久访问链接，&lt;strong>展示的信息会经过数据脱敏，仅放出项目 idea 以及作品申报信息，供大家考古学习&lt;/strong>。&lt;/p>
&lt;p>🚀 总而言之该脚本主要功能就是&lt;strong>采集作品信息&lt;/strong>和&lt;strong>拷贝作品信息&lt;/strong>。我会在均衡程序的鲁棒性后，引入&lt;strong>垂搜引擎&lt;/strong>，帮助使用者检索 &lt;code>同质idea&lt;/code> 以及 &lt;code>同质优秀参赛作品&lt;/code>。&lt;/p>
&lt;p>🍵 最终的作品展示方式，本人会慎重考虑。如果官方工作人员觉得不太妥，可以私聊本人喝茶[嗯！道歉是认真的！]如果觉得本项目有望吸引更多的年轻人参赛施展才智，提高竞赛的知名度与含金量，可以私聊本人喝咖啡~&lt;/p>
&lt;h2 id="快速上手-">快速上手 🐱‍🏍&lt;/h2>
&lt;blockquote>
&lt;p>Clone 项目，进入 &lt;code>main.py&lt;/code>，按照说明书合理调用 &lt;code>API&lt;/code> ，运行程序即可调度爬虫采集数据。&lt;/p>
&lt;/blockquote>
&lt;h3 id="配置运行环境">配置运行环境&lt;/h3>
&lt;p>部分 API 使用 python3 + selenium 的采集方案，且该脚本仅支持 Chrome 驱动，请将您的谷歌浏览器更新到最新版本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python -m pip install --upgrade pip &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="采集作品信息">采集作品信息&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.run_crawl_to_capture_workData(work_id: str or list,power: int)&lt;/code>
&lt;ul>
&lt;li>work_id：作品编号，支持&lt;strong>单个字符串&lt;/strong>输入以及 &lt;strong>List&lt;/strong> 多个字符串输入
&lt;ul>
&lt;li>【1】传入单个作品编号；&lt;/li>
&lt;li>【2】传入包含多个作品编号的列表；&lt;/li>
&lt;li>【3】传入空字符串或不传入 &lt;code>work_id&lt;/code>，则默认采集 BASE 中所有的 ID 对应的作品数据(目前有 4076 个数据在库)，此时请适当调高协程功率&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>power：协程功率，&lt;code>power∈[1,∞)&lt;/code>，脚本内置弹性协程队列，此处可随意设置。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>运行后会在 &lt;code>/dataBase/&lt;/code> 目录下生成 &lt;code>合成.csv&lt;/code> 文件&lt;/li>
&lt;li>从 config 配置文件中打印变量 &lt;code>title&lt;/code> 即可查询信息键&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;75945&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;68589&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># app.run_crawl_to_capture_workData(work_id=&amp;#39;72862&amp;#39;,power=30)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run_crawl_to_capture_workData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id_list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id_list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">__len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="n">__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="xjLGXY32JEmWvIb.png" style="zoom:80%;" />
&lt;h3 id="拷贝作品信息">拷贝作品信息&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>演示视频&lt;/strong>&lt;a class="link" href="https://www.yuque.com/docs/share/148083ac-c703-4f7c-978b-321b4ae8e6d9?#" target="_blank" rel="noopener"
>《BackupSpider of CNJSJ》&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>app.run_crawl_to_capture_workData(work_id: str or list,power: int=4)&lt;/code>&lt;/p>
&lt;ul>
&lt;li>work_id： 作品编号，支持&lt;strong>单个字符串&lt;/strong>输入以及 &lt;strong>List&lt;/strong> 多个字符串输入，&lt;strong>参数传递方案同上&lt;/strong>。&lt;/li>
&lt;li>power： 协程功率，&lt;code>power∈[1,∞)&lt;/code>，脚本内置弹性协程队列，此处可&lt;code>随意&lt;/code>设置。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>运行后会在 &lt;code>/dataBase/BACKUP/&lt;/code> 目录下生成以作品编号命名的 &lt;code>.mhtml&lt;/code> 文件，该格式网页文件封装了源所有的文本及插图附件，部分作品内容精彩，文件体积占用较大。&lt;/p>
&lt;ul>
&lt;li>注：safari 可能会打不开这种格式文件。&lt;/li>
&lt;li>该功能使用 Selenium(base on Chromedriver) 采集，请确保电脑上安装了最新版本的谷歌浏览器。&lt;/li>
&lt;li>该功能需要联网使用，请确保网络通畅。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">middleware&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run_crawl_to_backup_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;72862&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">power&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div align="center">&lt;img src="3nIbWH5cEiuDVs9.png" style="zoom: 67%;" />&lt;/div>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-4c-excellentproject/MmYqsBRbPEZglv2.gif"
width="672"
height="378"
srcset="https://blog.echosec.top/p/python-4c-excellentproject/MmYqsBRbPEZglv2_hu59e7919f71bfe8e4776583e924d2a075_2001734_480x0_resize_box_1.gif 480w, https://blog.echosec.top/p/python-4c-excellentproject/MmYqsBRbPEZglv2_hu59e7919f71bfe8e4776583e924d2a075_2001734_1024x0_resize_box_1.gif 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="api">API&lt;/h2>
&lt;p>在从 &lt;code>MiddleWare&lt;/code> 中导入 &lt;code>app&lt;/code>，即可调用脚本功能，别忘了调用 &lt;code>config&lt;/code> 配置文件设置全局变量~&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">middleware&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="作品查询学校成果">作品查询~学校成果&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.get_school_psar(school_name: str,save: bool)&lt;/code>
&lt;ul>
&lt;li>school_name：学校名称。这里不支持模糊匹配，请输入&lt;strong>全称&lt;/strong>！&lt;/li>
&lt;li>save：保存输出。默认为 False；建议为 True，运行后会在 &lt;code>/dataBase/PSAR&lt;/code> 目录下生成对应学校的分析结果，文件格式为 &lt;code>.json&lt;/code>，信息键仅包括 &lt;code>获奖信息&lt;/code> 以及 &lt;code>作品链接&lt;/code>。文件会&lt;strong>自动打开&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_school_psar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">school_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;华中科技大学&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>/华中科技大学_分析报告.json&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;华中科技大学&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;成果概要&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;一等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;二等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;三等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;作品细节&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;一等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72849&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;皖江之阴，青山之阳；青阳有腔，放遇一欢。&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72862&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34; 红楼梦·可视化赏析信息交互系统&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;二等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72750&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Limfx科研博客&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72764&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;梦·山海&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72795&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;济世方舱&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72796&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;山哈彩带&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72800&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;敦煌·梵音&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72821&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;放大镜下的昆虫世界&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72822&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;九华折扇——数字化非遗文化信息可视化设计&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=74879&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;别让它灭绝&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;三等奖&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72783&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;皮影传承，戏中人生&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http://2020.jsjds.com.cn/chaxun/?keys=72799&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;希冀&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="作品查询奖级and赛道">作品查询~奖级AND赛道&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.find_works_by_level(level: str,class_: str)&lt;/code>
&lt;ul>
&lt;li>level：作品等级。这里需要&lt;strong>规范输入&lt;/strong>，只能输入以下选项
&lt;ul>
&lt;li>&lt;code>一等奖&lt;/code>、&lt;code>二等奖&lt;/code>、&lt;code>三等奖&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>class_ ：作品赛道。这里支持模糊匹配。在 &lt;code>/dataBase/TPTDP/class_name.txt&lt;/code> 中有C4-2020所有赛道的全称&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>食用说明：&lt;code>level &lt;/code>和 &lt;code>class_&lt;/code> 都不是必选参数，比如只想知道一等奖的所有作品，只需传入 &lt;code>level&lt;/code> 即可，&lt;code>class_&lt;/code> 可不传或传入空字符串。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># app.find_works_by_level(level=&amp;#39;一等奖&amp;#39;, class_=&amp;#39;大数据&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># app.find_works_by_level(level=&amp;#39;&amp;#39;, class_=&amp;#39;人工智能&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_works_by_level&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;一等奖&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">class_&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203151766.png"
width="1562"
height="389"
srcset="https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203151766_hu6333a1f9b6ad0ce5cbbaf9ff77717174_157030_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203151766_hu6333a1f9b6ad0ce5cbbaf9ff77717174_157030_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="401"
data-flex-basis="963px"
>&lt;/p>
&lt;h3 id="作品查询比赛摘要">作品查询~比赛摘要&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.get_summary()&lt;/code> 打印决赛成绩概况&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203209320.png"
width="1232"
height="359"
srcset="https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203209320_hu142866d07b802d697d5d6e7cd105ce57_81589_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-4c-excellentproject/image-20211002203209320_hu142866d07b802d697d5d6e7cd105ce57_81589_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20211002203209320"
class="gallery-image"
data-flex-grow="343"
data-flex-basis="823px"
>&lt;/p>
&lt;h3 id="作品查询链接直达">作品查询~链接直达&lt;/h3>
&lt;ul>
&lt;li>&lt;code>app.find_works_by_id(key: str, goto: bool)&lt;/code>
&lt;ul>
&lt;li>key： 作品编号，仅支持单个字符串输入&lt;/li>
&lt;li>goto：是否打开网页。若为 True，则使用默认浏览器打开作品首页&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>运行后会在 &lt;code>/dataBase/PSAR/ASH.json&lt;/code> 中留下临时文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">config&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_works_by_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;72862&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="works_id数据加载">works_id数据加载&lt;/h3>
&lt;ul>
&lt;li>由于表数据结构比较乱，我已经写好了一个全局 load id 的函数，使用方法也很粗暴，调用该函数并传入 &lt;code>spider_key&lt;/code>，即可获取含表头的在库id列表。获取列表后使用切片去除表头候即可获得干净的数据~&lt;/li>
&lt;li>因为合成BASE文件有点大，故使用 &lt;code>csv.field_size_limit()&lt;/code> 捕获数据流。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">load_data_from_id_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> data_set = title
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :param mode: 截取模式,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> spider_key : 联采
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> str:works_id : 该作品编号对应的数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> list:works_id :
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return:返回表头+数据，使用切片[1:]截出数据集
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 当爬虫程序使用此函数时，并传入‘spider_key’口令，函数执行特殊命令，返回含表头的作品编号 List[str,str...]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 返回的列表里包含了所有在库的works_id,既当爬虫爬虫程序传入该口令时，将采取所有作品信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id_fp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">field_size_limit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1024&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">reader&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">mode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;spider_key&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 清洗数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;N/A&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>食用方法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">MiddleWare&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 返回无表头 id 列表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id_flow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_all_works_id&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 数据预览&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;id池大小：&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id_flow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__len__&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="注意事项-">注意事项 ❗&lt;/h2>
&lt;ul>
&lt;li>工程文件中的&lt;code>/dataBase&lt;/code>目录下存放了脚本核心BASE文件，请勿随意挪动或删除文件，否则会出大问题！&lt;/li>
&lt;li>&lt;code>config.py&lt;/code>中可以自己调整的参数并不多，请勿随意改动其中数值，否则也会出大问题~&lt;/li>
&lt;/ul>
&lt;h2 id="更新日志-">更新日志 📋&lt;/h2>
&lt;p>&lt;strong>2020.09.06&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>已将所有&lt;code>2020-MTH作品申报信息&lt;/code>离线封装&lt;/li>
&lt;li>将采集功能都封装进&lt;code>app.py&lt;/code>里，所有功能都可通过该模块调用&lt;/li>
&lt;li>添加语雀同步文档，解决部分地区图文显示异常的问题&lt;/li>
&lt;li>项目除虫，增加了垃圾回收机制&lt;/li>
&lt;/ol>
&lt;h2 id="todo-">TODO 📈&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 搭建类BLOG前端，开放接口映射优秀作品文件&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 服务器部署&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 引入鲁棒均衡模组&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 添加垂搜引擎，提供API接口&lt;/li>
&lt;/ul></description></item><item><title>『 Python 』jieba+wordcloud 词频可视化</title><link>https://blog.echosec.top/p/python-jieba-wrodcloud/</link><pubDate>Sat, 29 Feb 2020 01:20:33 +0800</pubDate><guid>https://blog.echosec.top/p/python-jieba-wrodcloud/</guid><description>&lt;img src="https://blog.echosec.top/p/python-jieba-wrodcloud/wordcloud.jpeg" alt="Featured image of post 『 Python 』jieba+wordcloud 词频可视化" />&lt;h2 id="案例实操">案例实操&lt;/h2>
&lt;h3 id="准备资源">准备资源&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>导入所需库&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">wordcloud&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">jieba&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>准备好源文件，屏蔽词文件，备用字体&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">font_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;C:\Windows\Fonts\时尚中黑简体.ttf&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">file_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;新建文本文档.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fake_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;stop_key.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>自定义变量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">alist&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span> &lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">btext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fake_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="c1">#第三方屏蔽列集合&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#根据文档特殊性而设计的自定义屏蔽词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stop_words&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;我们&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;这个&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;一个&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;可以&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;下来&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;这样&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;就是&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;用来&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;非常&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;然后&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;这里&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;非常&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;大家&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;时候&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;上面&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;里面&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;放在&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;首先&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;准备&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;出来&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;很多&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;其实&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;一些&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;拿出&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;还有&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;如果&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="读取数据集">读取数据集&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#读入源文档&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file_path&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;GBK&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">errors&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;ignore&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#type（text）:str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#ignore errors&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#读入屏蔽词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fake_path&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fake_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#屏蔽词文件中，每一个词汇独占一行，因此逐行读取&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#type（fake_data） is list. 这个列表里的每个元素都是str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">fake_data&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#遍历屏蔽词列表，每个i都是一个屏蔽词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fake_set&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#将屏蔽词加入集合，集合具有无序独立性，会自动排除重复词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#扩充屏蔽词库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fake_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fake_set&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">stop_words&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="分词">分词&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#alist装填分词句&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">jieba&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cut&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">cut_all&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#text是源文档&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#切分采用精确模式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#jieba.cut（）返回一个generate对象，使用for语句可以遍历此对象&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#每一个i都是一个str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">alist&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#循环结束后，alist列表里的若干个元素，都是通过jieba分好的词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 剔除屏蔽词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">alist&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#alist是一个装填分词的列表，里面的每一个元素都来自源文档&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">fake_set&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#如果遍历到的词汇不是屏蔽词，那么就把这词接入btext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">btext&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">word&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">btext&lt;/span> &lt;span class="o">+=&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#每个分词之间用/断开&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#btext变量是一个较长的且已过滤屏蔽词的字符串str，每个分词之间由&amp;#39;/&amp;#39;断开&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="生成词云">生成词云&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 实例化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wordcloud&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WordCloud&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">font_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">font_path&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1920&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1080&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">background_color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;white&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 传入 str 对象 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 此处给 generate 传入的参数 btext 已手动除杂，无需在 wordcloud 的实例化参数中指明 stopwords&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btext&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;11111.jpg&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_image&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">image&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="demo">Demo&lt;/h3>
&lt;p>手动爬取 15 个沙雕营销号生活妙用视频文案，利用 jieba + wordcloud 统计高频词。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-jieba-wrodcloud/wordcloud.jpeg"
width="1920"
height="1080"
srcset="https://blog.echosec.top/p/python-jieba-wrodcloud/wordcloud_hudfe8075ab25e2dc7353e929b52673e96_374013_480x0_resize_q75_box.jpeg 480w, https://blog.echosec.top/p/python-jieba-wrodcloud/wordcloud_hudfe8075ab25e2dc7353e929b52673e96_374013_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="问题总结">问题总结&lt;/h2>
&lt;h3 id="文件读写统一编码格式">文件读写统一编码格式&lt;/h3>
&lt;p>&lt;strong>错误案例&lt;/strong>：读取多个编码格式不同的文件时，使用了统一的解码格式，导致文本乱码或屏蔽失效。&lt;/p>
&lt;p>例如：屏蔽词文件 &lt;code>stop_key.txt&lt;/code> 编码为 GBK，源文件 &lt;code>raw_text.txt&lt;/code> 编码为 &lt;code>UTF-8&lt;/code>。一开始写函数并没有注意到这个细节，而后整个程序的读文件操作都通过一个 &lt;code>read_file() function&lt;/code> 进行，导致整个程序陷入了无限报错之中，拆东墙补西墙。&lt;/p>
&lt;p>&lt;strong>解决方案&lt;/strong>：给 &lt;code>read_file() function&lt;/code> 自定义参数 &lt;code>mode&lt;/code>，进而针对特殊编码的文件单独控制 encoding。&lt;/p>
&lt;ul>
&lt;li>ps：此处分别用两个 &lt;code>open&lt;/code> 强调文件编码不同&lt;/li>
&lt;li>ps：在我没意识到文件编码异常之前，一直在调整统一的 encoding 试错，从 UTF-8 到 GBK 再到 GB18030，显然都不能解决问题。如果通过设置 &lt;code>errors=ignore&lt;/code> 强行忽视非法编码，要么导致源文文本乱码，要么就会在词库过滤时发现 stop_words 集合并没有起作用（原因一致）。由此引发的 Error 信息如下。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">UnicodeDecodeError: &lt;span class="s1">&amp;#39;gbk&amp;#39;&lt;/span> codec can&lt;span class="s1">&amp;#39;t decode byte 0x80 in position 91: illegal multibyte sequence
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">UnicodeDecodeError: &amp;#39;&lt;/span>utf-8&lt;span class="s1">&amp;#39; codec can&amp;#39;&lt;/span>t decode byte 0xbd in position 0: invalid start byteshell
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>补充&lt;/strong>：如果数据集从创建到调用都是自己通过python函数操作，往往不会出现编码格式错乱的问题（无非就 GBK 或 UTF-8 ）。出现问题很可能是数据集被创建后自己 手动 打开 修改 保存 了源文档！这时候保存的文档编码格式可能会分裂成 UTF-8，GBK，GB18030，Unicode，ANSI，GB2312，BIG5 等等常见的中文格式编码，这要看编辑器的默认转录格式&lt;/p>
&lt;h3 id="wordcloud易错参数解释">wordcloud易错参数解释&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>参数&lt;strong>stopwords&lt;/strong>接受的文本格式是&lt;strong>set&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>函数 &lt;strong>generate&lt;/strong>接受的文本格式是&lt;strong>str&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 词云实例化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wordcloud&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WordCloud&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stopwords&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">stop_words&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stop_words&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;class &amp;#39;set&amp;#39;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 词云生成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btext&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btext&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="实验附件">实验附件&lt;/h2>
&lt;p>这里呈上沙雕营销号文案&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;接着利用剪刀剪下来一个正方形纸片。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">利用我们的美工刀在上面裁剪一个小孔。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">小孔裁剪好了。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">大家肯定非常好奇。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这个是用来做什么的？
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">其实这个就是我们用来阅读的一个小神器。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们在阅读的时候。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">可以将它放在我们的书上。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后这样逐字阅读。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这个方法就是采用了我们小孔成像的原理。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这样我们阅读的时候就可以方便很多。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">而且看得很清楚。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们可以先把油桶的提手取下来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">其实取下提手也是有小方法的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们只要把这一圈齿片一片一片的往外掰
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">掰完以后，我们就可以把它取下来了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接下来我们看看它的妙用吧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">家里衣服太多衣柜挂不下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们只需把油桶上的塑料把手清洗干净
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后套在衣架上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这时我们将下一件衣服也挂在上面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这样就能为我们节省很多空间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们拿出家里的吹风机
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">开启冷风档
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">大家看这个时候它散发出来的一股吸附力
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">能够将我们的一次性纸杯牢牢吸附在它的后盖上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">能够轻松地吸附我们桌子上面的一些纸屑
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">热熔胶热熔胶热熔胶热熔胶热熔胶
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后将刀片黏在梳子上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们准备一个卫生巾
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">把它贴在门把手侧面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">妙用2用来戒烟
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将风油精涂在香烟上 会有一股难闻的气味
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">吸烟者抽了就会头痛恶心 能达到减肥的效果
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">第三个妙用 我们可以在上面套一个垃圾袋
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">要当垃圾桶吗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这样把它放在我们卧室的床头上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">在扔垃圾的时候就会变得非常容易了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">如果觉得有异味的话
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">如果觉得有异味的话 我们扔完垃圾后可以盖上盖子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们先来准备食材：馒头、蜂蜜还有洗洁精
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们拿出馒头在上面 均匀地涂抹一些蜂蜜
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后再加入适量的洗洁精 切记涂抹均匀o
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后我们把它放在老鼠经常出没的地方
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">老鼠一碰到找个馒头就会轻松挂掉了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">原理解释
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">蜂蜜是甜性物质 涂抹它是为了吸引老鼠过来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">而洗洁精本身就是有毒的液体，老鼠一沾到就会自然挂掉
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">你说涂点老鼠药上去1那我银A可能还能稍微能接受一点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">可以我今天颠对洗清精的认识好吧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">绝对不会出现老鼠
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">今天呢城西教大家用现有的材料自制胶水那个效果呢用起来跟买的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">效果是擦不多的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先我们只需要准备一点淀粉
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">淀粉就是那个玉米定粉啊
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这个声音像我小学门口小卖店的老板
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接着我们挤入洗洁精
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">大家看同样是有粘的效果的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">希望对大家有所帮助
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">今天呢城西就跟大家讲一下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们一定要在我们的钱包里面放一张纸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">为什么呢？（为什么这个营销号不上字幕？）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">作用可是非常的大啊
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先呢我们要拿出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">一张这么大小的纸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">裁剪出跟这里差不多大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后呢我们要在这个上面写上我们的姓名
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">姓名然后电话号码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后呢还有家庭住址之类的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这个纸啊塞在最显眼的地方
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">把冰淇淋拿出来把肥皂弄成永淇淋装回袋子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">另外我们还可以在废旧的鞋子里面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">铺上一层锡箔纸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">因为锡箔纸不怕烫
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们把它放在床头
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">就可以成为一个小小的烟灰缸啦
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">你为什么非要用个高跟鞋去做烟灰缸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">实个烟灰缸就这么难吗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">还要铺上锡销E
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">哇失响1你好讲究晚你，意识好强哦
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">是不是非常方便呢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">而且也非常美观 像一件艺术品
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">火机放在水里以后还能开火吗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">打火机大家常见特别的男生
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">今天我们就来做这实验
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先准畜一个打火机和一个气球
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">把气球套在打火机上面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后端口打个死结
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接者我们把用气球装好的打火机放进水里
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">来回浸泡几分钟后拿出来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">会发生什么变化呢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们把气球剪破口 然后把火机拿出来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">开火试一下竟然还是能用的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">火花比原来的还要大
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">原来打火机在的密封下浸水
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">还是可以用的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们拿手机看电视时
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">可以将塑料提手向后掰几下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这时再把手机放上去
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这样我们手机支架就做好了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们拿来一个家里面都有的废旧盒子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接着利用剪刀剪下来一个正方形纸片
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">利用我们的美工刀在上面裁剪一个小孔
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这一次性纸杯相信大家都不陌生
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">很多朋友的家里都会买一些这种纸杯
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">用它来招待客人
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">但是你知道
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">在这些纸杯上面扎一些小洞
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">他有什么作用吗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">下面跟三毛一起来了解一下吧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先我们准备一个一次性纸杯
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">还有一个叉子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后我们用叉子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">在这个杯子的底部给他戳一个小洞
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将杯子底部扎完小洞之后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后我们再将这个纸杯
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">放到另一个杯子里面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">接下来我们再到这杯子里面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">放入少许的茶叶
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">添加适量的茶叶之后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们再倒入适量的开水
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">添加开水之后我们让它浸泡2-3分钟时间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">浸泡2-3分钟时间后我们在将里面的杯子拿出来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们现在可以看到
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">杯子里面的茶叶已经全部给过滤出来了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">非常的方便
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">用这个方法来泡茶喝
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">它还可以节省茶叶
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">这么一点点茶叶我们可以泡好几杯茶
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">小妙招
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">超实用的小妙招
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">学会了快告诉妈妈
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">准备一张吸油纸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将牙膏一粒一粒均匀地挤在纸上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后撒上小苏打
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">等待凝固后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">把它装进小瓶子里
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">刷牙的时候倒出一粒
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">就可以直接刷牙了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将香皂融化吸入针管
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后挤入药板模型里面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">用锡纸封柱模板
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">旅游的时候带在身上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">随时随地都可以用来洗手
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">废旧的牙刷还有怎样的妙用呢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">跟我来看看
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们先准备两个差不多的牙刷
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">用皮筋将它们绑起来
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">那么这两支牙刷的第一个作用就是用来清洗水龙头
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">由于水龙头的形状比较特殊
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">所以它的内侧经常很难清理到
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将牙刷取开 然后均匀的擦拭
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">可以看到里外都清理的非常干净
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">而且可以随时调换位置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">喝茶剩下的茶叶根不要扔
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">我们还可以拿它来做很实用的东西
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">首先将茶叶取出来 挤干水分放入盘中
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">然后翻在太阳下晒干
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">晒好后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将我们穿的袜子脱下来一只
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">将晒干的茶叶倒入袜子中
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">扎好口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">一个便携的香袋就完成了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">茶香四溢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">怎么样 是不是很实用呢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">如果实用别忘记点赞
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>