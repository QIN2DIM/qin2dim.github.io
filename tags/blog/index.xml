<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Echosec @QIN2DIM</title><link>https://blog.echosec.top/tags/blog/</link><description>Recent content in Blog on Echosec @QIN2DIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 30 Oct 2022 00:54:18 +0800</lastBuildDate><atom:link href="https://blog.echosec.top/tags/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>『Blog』VMware 虚拟机流量代理最佳实践</title><link>https://blog.echosec.top/p/vmware-proxy-2023/</link><pubDate>Sun, 30 Oct 2022 00:54:18 +0800</pubDate><guid>https://blog.echosec.top/p/vmware-proxy-2023/</guid><description>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/anato1.jpg" alt="Featured image of post 『Blog』VMware 虚拟机流量代理最佳实践" />&lt;h2 id="前言">前言&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>本文内容较为硬核，读者不应是 Linux 小白且应对 NekoRay ，VMware 以及操作系统代理有基本的了解。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本文探讨的场景是 Linux 图形化操作系统，在命令行系统无法运行 NekoRay（也没有必要）直接运行代理核心即可。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>我们曾在 &lt;a class="link" href="https://blog.echosec.top/p/vmware-proxy/" >『Blog』VMware 虚拟机流量代理&lt;/a> 介绍过一种虚拟机借助宿主机局域网代理实现「间接代理」的方案，it works fine 但不够优雅，代理端口的配置让人摸不着头脑，宿主机内网 IP:PORT 变动后，虚拟机代理设置也需要跟着变动，非常繁琐。&lt;/p>
&lt;p>如今，我们可以借助一些优秀的开源项目直接在 Linux 操作系统上管理代理服务器，即，直接在虚拟机上启动客户端代理内核实现流量代理。此时，虚拟机代理和宿主机代理相互独立，虚拟机系统代理无需跟随宿主机网络环境变动。本文以 VMware Ubuntu20.04LTS 为例介绍虚拟机流量代理的最佳实践，这是目前个人使用场景代理效率最高且配置最简单的方案（暴论）。&lt;/p>
&lt;p>本文涉及的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">项目名&lt;/th>
&lt;th style="text-align:center">版本号&lt;/th>
&lt;th style="text-align:center">用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray" target="_blank" rel="noopener"
>MatsuriDayo/nekoray&lt;/a>&lt;/td>
&lt;td style="text-align:center">v2.2&lt;/td>
&lt;td style="text-align:center">图形化代理客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>HyNetwork/hysteria&lt;/a>&lt;/td>
&lt;td style="text-align:center">v1.2.2&lt;/td>
&lt;td style="text-align:center">代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/klzgrad/naiveproxy" target="_blank" rel="noopener"
>klzgrad/naiveproxy&lt;/a>&lt;/td>
&lt;td style="text-align:center">v106.0.5249.91-1&lt;/td>
&lt;td style="text-align:center">代理核心&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="虚拟机设置">虚拟机设置&lt;/h2>
&lt;p>将虚拟机镜像的网络适配器的网络连接模式改成 &lt;strong>NAT 模式&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030011821220.png"
width="1028"
height="555"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030011821220_hu69c7d3be5e90b1ec2f31090859e22746_58949_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/image-20221030011821220_hu69c7d3be5e90b1ec2f31090859e22746_58949_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt=" 图 1 NAT 模式"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="444px"
>&lt;/p>
&lt;h2 id="代理设置">代理设置&lt;/h2>
&lt;p>从这一步开始均为玄学的操作，因为后文中涉及到的开源项目均部署在 GitHub 上，需要优先使用代理才能下载。&lt;/p>
&lt;p>这里有两种解决方法，要么先在宿主机上下载好必要的软件，再把它们「拖入」虚拟机窗口传输文件；要么通过反代服务解决 wget 等命令的路由问题。下文以「命令行」方案为例梳理配置思路。若随时间推移反代接口失效或脚本执行错误，读者可手动分步执行命令或基于第一种方案照葫芦画瓢。&lt;/p>
&lt;p>&lt;strong>Script&lt;/strong>: 如果你使用 Ubuntu 20.04 以及 python3 开发环境，可以运行一键安装脚本，直接跳过 NekoRay 下载以及代理核心下载步骤。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget -qO- https://gitee.com/yaoqinse/hello-world/raw/develop/npstart.py &lt;span class="p">|&lt;/span> python3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="download-nekoray">Download NekoRay&lt;/h3>
&lt;p>行为链：从 GitHub 下载 NekoRay 预编译压缩包，解压到桌面，修改控制权限，启动 NekoRay。&lt;/p>
&lt;p>其中 &lt;code>https://dl.capoo.xyz/&lt;/code> 为作者开放使用的反代接口，去掉这段内容后剩下的部分为正常的 GitHub 的资源链接。如果你的虚拟机此时不存在路由问题，应该去掉这段内容。&lt;/p>
&lt;p>此外，为保证操作的连贯性，这里写死了 NekoRay v2.2 的下载地址，你可以在部署完毕后通过 NekoRay 内置的在线更新功能追平最新特性。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/Desktop/ &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget https://dl.capoo.xyz/https://github.com/MatsuriDayo/nekoray/releases/download/2.2/nekoray-2.2-2022-10-30-linux64.zip &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> unzip nekoray-2.2-2022-10-30-linux64.zip &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm nekoray-2.2-2022-10-30-linux64.zip &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> ~/Desktop/nekoray &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ./launcher
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果你是第一次使用 NekoRay ，可以在 &lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria/" >之前的文章&lt;/a> 中了解更多的使用细节，此处不再赘述。&lt;/p>
&lt;h3 id="download-proxy-core">Download Proxy Core&lt;/h3>
&lt;p>下文以 Hysteria 及 Naiveproxy 作演示，同样，相关文章可在本站历史查找。&lt;/p>
&lt;p>行为链：从 GitHub 上游仓库下载预编译代理核心并存放至 NekoRay 的配置路径下，最后赋予 hysteria-core 额外的执行权限。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/Desktop/nekoray/config &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget https://dl.capoo.xyz/https://github.com/HyNetwork/hysteria/releases/download/v1.2.2/hysteria-linux-amd64 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod +x ./hysteria-linux-amd64 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget -O naiveproxy.tar.xz https://dl.capoo.xyz/https://github.com/klzgrad/naiveproxy/releases/download/v106.0.5249.91-1/naiveproxy-v106.0.5249.91-1-linux-x64.tar.xz &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> tar -xvf naiveproxy.tar.xz &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> mv naiveproxy-v106.0.5249.91-1-linux-x64/naive . &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm naiveproxy.tar.xz &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm -r naiveproxy-v106.0.5249.91-1-linux-x64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下载完后，参照 &lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria/" >之前的文章&lt;/a> &lt;strong>启用 HTTP 监听端口&lt;/strong> 并 &lt;strong>指定 hysteria-core 以及 naive-core 的绝对路径&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030181001877.png"
width="992"
height="670"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030181001877_hu0881c7e6d4401659acf4e07325570ca8_87479_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/image-20221030181001877_hu0881c7e6d4401659acf4e07325570ca8_87479_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="图 2 添加代理核心"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="355px"
>&lt;/p>
&lt;h3 id="enable-system-proxy">Enable System Proxy&lt;/h3>
&lt;p>至此， NekoRay 已配置完毕可以直接投入使用。接下来，以你喜欢的方式添加 Hysteria 或 Naiveproxy 的代理服务器，例如从宿主机已配置好的 NekoRay 中导出分享链接并粘贴过来。&lt;/p>
&lt;p>选中需要激活的服务器，启动系统代理。你可以访问 Google 或 YouTube 等站点检测系统代理连通性，也可以通过 fast.com 或 speedtest.net 甚至是 YouTube 码流速度估算代理最大下行速度，如图 3,4,5 所示。&lt;/p>
&lt;p>之后，你可以通过双击 &lt;code>~/Desktop/nekoray/launcher&lt;/code> 启动软件本体，也可以设置开机自启。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030032844192.png"
width="1802"
height="1464"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030032844192_hud4f69e9f2686dca641de36ce27ec0924_868107_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/image-20221030032844192_hud4f69e9f2686dca641de36ce27ec0924_868107_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="图 3 檢測系統代理連通性"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="295px"
>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030033059858.png"
width="1802"
height="1465"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/image-20221030033059858_hudcd8f62db5fb6c42e30cb0329ff4b977_424091_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/image-20221030033059858_hudcd8f62db5fb6c42e30cb0329ff4b977_424091_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="图 4 簡單跑個分"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="295px"
>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/vmware-proxy-2023/Snipaste_2022-10-30_03-44-46.png"
width="1795"
height="1293"
srcset="https://blog.echosec.top/p/vmware-proxy-2023/Snipaste_2022-10-30_03-44-46_huf0637cd9ffe9eb3fec00fc57e4bff552_1096315_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/vmware-proxy-2023/Snipaste_2022-10-30_03-44-46_huf0637cd9ffe9eb3fec00fc57e4bff552_1096315_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="图 5 YouTube 4K Video Connection Speed"
class="gallery-image"
data-flex-grow="138"
data-flex-basis="333px"
>&lt;/p>
&lt;h2 id="开发中的代理问题">开发中的代理问题&lt;/h2>
&lt;p>介绍常见的虚拟机代理错误设置并给出相应的解决方法。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>浏览器代理&lt;/strong>&lt;/p>
&lt;p>浏览器代理选择系统代理即可。Google，Edge 默认走系统代理（且不可更改），Firefox 则给出眼花缭乱的选项，将「配置访问互联网的代理服务器」手动置为「使用系统代理」即可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>wget | git | pip |curl 等命令的路由通路&lt;/strong>&lt;/p>
&lt;p>这些命令默认走系统代理。如果你配置了优先级更高的回源代理（如 pip 清华镜像源）那么它大概率会和系统代理打架，针对回源代理的说明可看后文小节部分。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>apt 等命令的路由通路&lt;/strong>&lt;/p>
&lt;p>建议保持国内镜像源。本地与 Ubuntu 软件源服务器是直连关系，流量不走系统代理，选择国内镜像源直连是不错的选择。当然你也可以修改 Ubuntu 软件源指回主根服务器，并保持 NekoRay VPN 模式为开启状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ping 命令的连通性&lt;/strong>&lt;/p>
&lt;p>我想你应该不会惊讶于「为什么我开启了系统代理，能 ping 通 baidu.com 却 ping 不通 google.com」。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>JetBrains 家族产品的代理设置&lt;/strong>&lt;/p>
&lt;p>（如：PyCharm，Goland，IDE）&lt;/p>
&lt;p>这类软件设置项中的代理仅对软件本身有效，如插件商城，而软件运行代码是通过 shell 脚本命令执行的，即，你的代码中的网络请求是否使用代理与这个库的底层逻辑以及你是否传入代理参数有关，而与软件设置的代理无关。&lt;/p>
&lt;p>比如 Python3 的 &lt;code>requests.get()&lt;/code> 在你不指定参数 &lt;code>proxies&lt;/code> 时会检索环境变量 &lt;code>*_proxy&lt;/code> 自动填充 &lt;code>proxies&lt;/code> 参数，即，reqeusts 流量默认走系统代理。而 &lt;code>aiohttp&lt;/code> 中基于 &lt;code>ClientSession&lt;/code> 对象的网络请求默认直连，即，不指定参数 &lt;code>proxy&lt;/code> 代理不生效。但无论如何，它们都与软件设置的代理无关。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>TLS in TLS&lt;/code> 陷阱&lt;/strong>&lt;/p>
&lt;p>如果你使用 Python3 进行开发，你一定经历过： pip 下载速度慢；换源；镜像源和系统代理打架；自己写的网络请求没法过墙，指定了系统代理却出现了连锁的 &lt;code>SSLError&lt;/code> 异常。这是一个史前巨坑，是一个仅会在中国大陆发生的奇妙化学反应，urllib3 的导演组都自愧不如。这一切的一切都指向一个 &lt;strong>TLS in TLS 陷阱&lt;/strong>。你可以在 &lt;a class="link" href="https://github.com/conda/conda/issues/10590#issuecomment-880196074" target="_blank" rel="noopener"
>conda issues&lt;/a> 继续吃瓜。&lt;/p>
&lt;p>解决方法如下，根据你的需求和应用场景择优：&lt;/p>
&lt;p>&lt;strong>Solution1&lt;/strong>：调整 urllib3 版本，即，&lt;code>pip install urllib3==1.25.11&lt;/code>；&lt;/p>
&lt;p>&lt;strong>Solution2&lt;/strong>：调整代理软件配置&lt;/p>
&lt;ul>
&lt;li>
&lt;p>v2rayN v5.36+, 「参数设置 &amp;ndash; 系统代理设置 &amp;ndash; 高级代理设置」选择 &lt;code>http=http://{ip}:{http_port};https=http://{ip}:{http_port}&lt;/code>。在「例外」中添加 &lt;code>pypi.tuna.tsinghua.edu.cn;&lt;/code> 绕过 pip 清华源的代理请求，如果你使用其他 pip 源，填写相应的域名即可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Clash（cfw/verge/&amp;hellip;）开启 TAP/TUN。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>NekoRay 切换至 VPN 模式。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Solution3&lt;/strong>：以你喜欢的方式调整系统代理的协议格式&lt;/p>
&lt;p>核心操作是让 HTTPS 与 HTTP 的代理流量公用一个端口，并且绕过系统代理的 TLS 认证问题。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">proxies&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:10809&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;https&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:10809&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="相关文章">相关文章&lt;/h2>
&lt;p>&lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria/" >『Blog』Use Hysteria through NekoRay in Windows&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.echosec.top/p/naiveproxy/" >『Blog』Naiveproxy Quick Start&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" >『Blog』V2rayN 配置 Hysteria&lt;/a>&lt;/p></description></item><item><title>『Blog』Use Hysteria through Clash Verge</title><link>https://blog.echosec.top/p/clash-verge-hysteria/</link><pubDate>Fri, 02 Sep 2022 20:04:10 +0800</pubDate><guid>https://blog.echosec.top/p/clash-verge-hysteria/</guid><description>&lt;img src="https://blog.echosec.top/p/clash-verge-hysteria/anato.jpg" alt="Featured image of post 『Blog』Use Hysteria through Clash Verge" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文以 Windows 为例介绍使用 Clash Verge 启动 Hysteria 代理核心的快速入门步骤并列举一些注意事项。下文以 Verge 代称 Clash Verge。&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/zzzgydi/clash-verge" target="_blank" rel="noopener"
>Verge&lt;/a> 是一个基于 &lt;a class="link" href="https://github.com/tauri-apps/tauri" target="_blank" rel="noopener"
>tauri&lt;/a> 编写的 &lt;a class="link" href="https://docs.cfw.lbyczf.com/" target="_blank" rel="noopener"
>Clash系列图形化客户端&lt;/a>，支持跨平台（Windows x64, Linux x86_64 and macOS 11+）。Verge 支持更换至 &lt;a class="link" href="https://github.com/MetaCubeX/Clash.Meta" target="_blank" rel="noopener"
>Meta-core&lt;/a>，即，支持多平台的 &lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>Hysteria&lt;/a> 代理核心的管理。您可以查阅下表列出的 Documentation 了解有关 Verge（Meta）组合的诸多特性。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>项目名&lt;/th>
&lt;th>发行版本号&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/zzzgydi/clash-verge" target="_blank" rel="noopener"
>zzzgydi/clash-verge&lt;/a>&lt;/td>
&lt;td>v1.0.5&lt;/td>
&lt;td>图形化客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/Loyalsoldier/clash-rules" target="_blank" rel="noopener"
>Loyalsoldier/clash-rules&lt;/a>&lt;/td>
&lt;td>202208302241&lt;/td>
&lt;td>开源规则集&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/Dreamacro/clash/wiki" target="_blank" rel="noopener"
>Dreamacro/clash Wiki &lt;/a>&lt;/td>
&lt;td>/&lt;/td>
&lt;td>Documentation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://docs.metacubex.one/" target="_blank" rel="noopener"
>Clash.Meta Wiki&lt;/a>&lt;/td>
&lt;td>/&lt;/td>
&lt;td>Documentation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://docs.cfw.lbyczf.com/" target="_blank" rel="noopener"
>Clash for Windows Wiki&lt;/a>&lt;/td>
&lt;td>/&lt;/td>
&lt;td>Documentation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/emptysuns/Hi_Hysteria" target="_blank" rel="noopener"
>emptysuns/Hi_Hysteria&lt;/a>&lt;/td>
&lt;td>v0.4.0&lt;/td>
&lt;td>服务端安装脚本&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="下载设置现象-verge">下载设置现象 Verge&lt;/h3>
&lt;p>访问 &lt;a class="link" href="https://github.com/zzzgydi/clash-verge/releases" target="_blank" rel="noopener"
>Releases · zzzgydi/clash-verge&lt;/a>，下载最新发行版本。建议 Windows 用户选择 &lt;code>_zh-CN.msi&lt;/code>。&lt;/p>
&lt;h3 id="编排配置文件">编排配置文件&lt;/h3>
&lt;p>因为 Verge 也是基于 Meta 运行 Hysteria 代理核心，我们在 &lt;a class="link" href="https://blog.echosec.top/p/clash-meta-for-android-hysteria/#%e9%99%84%e4%bb%b6" >Clash.Meta&lt;/a> 这篇博客介绍的配置模版可以重用，配置项完全一致。如果你通过 &lt;a class="link" href="https://github.com/emptysuns/Hi_Hysteria" target="_blank" rel="noopener"
>hihy&lt;/a> 在服务器上维护 Hysteria，那么可以非常方便地导出包含预设规则的 Meta YAML 配置文件，你可以将该配置文件导入到 Verge 或 CMFA（Clash Meta for Android） 等客户端直接使用。&lt;/p>
&lt;h3 id="配置-verge">配置 Verge&lt;/h3>
&lt;p>假设已获取配置文件并存到本地&amp;hellip;&lt;/p>
&lt;p>从主界面进入到「配置」页，选择「新建」，调整配置类型为 &lt;code>Local&lt;/code>，加上合理的 Name 以及 Descriptions，点击「选择文件」找到存在本地的 YAML 配置文件，点击「保存」导入配置。Verge 会拷贝一份配置文件存储到目录 &lt;code>~/.config/clash-verge-prfiles&lt;/code> 。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902204955592.png" alt="新建配置" width="80%"/>&lt;br>
&lt;figcapton>图 1 新建配置&lt;/figcapton>
&lt;/figure>
&lt;p>回到「配置」页，选中刚创建的配置激活代理组（或「右键」目标代理组选择「使用」）。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902205916250.png" alt="激活配置" width="80%"/>&lt;br>
&lt;figcapton>图 2 激活配置&lt;/figcapton>
&lt;/figure>
&lt;p>可以在「代理」页查看当前激活的代理组。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902210134475.png" alt=" Verge 代理组" width="80%"/>&lt;br>
&lt;figcapton>图 3 Verge 代理组&lt;/figcapton>
&lt;/figure>
&lt;p>进入「设置」页，检查 「Clash 设置」，&lt;strong>切换内核&lt;/strong>至 Clash.Meta。&lt;/p>
&lt;p>在当前页面检查「系统设置」，如下图所示，开启「服务模式」，开启「系统代理」。若服务模式下载异常，可以先开启系统代理后再下载启用服务模式。访问 Google 或 YouTube 等站点进行行为检测，「流量图显」正常波动说明网络代理工作正常。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902210406243.png" alt="Verge 系统代理" width="80%"/>&lt;br>
&lt;figcapton>图 4 Verge 系统代理&lt;/figcapton>
&lt;/figure>
&lt;h2 id="进阶操作">进阶操作&lt;/h2>
&lt;h3 id="检查网络连接">检查网络连接&lt;/h3>
&lt;p>进入「连接」页中检查经由 Verge 的网络活动（即不开启代理时「连接」和「日志」不工作）。在下图中，我们筛选了经由 Verge 前往以 &lt;code>api.bilibili&lt;/code> 为前缀的域名的流量去向，可以看到使用的传输协议是 &lt;code>HTTPS&lt;/code>，访问策略是 &lt;code>DIRECT&lt;/code>，直译为「直接连接」表示访问数据包不经由远程代理服务器转发而是直接去往B站。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902212142666.png" alt="Verge 网络连接 - DIRECT " width="80%"/>&lt;br>
&lt;figcapton>图 5 Verge 网络连接 - DIRECT&lt;/figcapton>
&lt;/figure>
&lt;p>同样，我们筛选 &lt;code>youtube&lt;/code> 可以看到如下内容：&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902212619771.png" alt="Verge 网络连接 - PROXY" width="80%"/>&lt;br>
&lt;figcapton>图 6 Verge 网络连接 - PROXY&lt;/figcapton>
&lt;/figure>
&lt;p>图中的标签 &lt;code>PROXY&lt;/code> 对应着配置文件中的代理组名称，此处直译为「通用代理」表示 Verge 使用 PROXY 这个代理组中的节点处理面向当前连接的网络请求。我们切换到「日志」页面，可以进一步地查看访问细节，如下图所示：&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220902213034334.png" alt="Verge logs" width="80%"/>&lt;br>
&lt;figcapton>图 7 Verge logs&lt;/figcapton>
&lt;/figure>
&lt;p>以 &lt;code>09-02 21:24:15 INFO&lt;/code> 这条日志为例，其表述了一个数据包的行为链：数据包从「本地系统代理」7890 端口转发到本地 44391 端口“准备发往” Youtube（HTTPS），又因为当前站点触发了（域名）匹配规则 &lt;code>RuleSet(proxy)&lt;/code> ，意味着这次“发送”需要使用规则所指定的代理组 &lt;code>PROXY&lt;/code>，而具体使用该代理组中的哪个节点呢？默认是我们手动选中（Select）的节点，在配置文件中它的别名（name）是 &lt;code>CA Clone&lt;/code>&lt;/p>
&lt;h3 id="tun-模式">TUN 模式&lt;/h3></description></item><item><title>『Blog』Use Hysteria through Clash.Meta in Android</title><link>https://blog.echosec.top/p/clash-meta-for-android-hysteria/</link><pubDate>Thu, 01 Sep 2022 01:59:39 +0800</pubDate><guid>https://blog.echosec.top/p/clash-meta-for-android-hysteria/</guid><description>&lt;img src="https://blog.echosec.top/p/clash-meta-for-android-hysteria/finnstark-1.jpg" alt="Featured image of post 『Blog』Use Hysteria through Clash.Meta in Android" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文涉及的开源项目：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">项目名&lt;/th>
&lt;th style="text-align:left">发行版本号&lt;/th>
&lt;th style="text-align:left">用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;a class="link" href="https://github.com/MetaCubeX/ClashMetaForAndroid/releases" target="_blank" rel="noopener"
>MetaCubeX/ClashMetaForAndroid&lt;/a>&lt;/td>
&lt;td style="text-align:left">v2.5.11-pre02&lt;/td>
&lt;td style="text-align:left">图形化客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;a class="link" href="https://github.com/Loyalsoldier/clash-rules" target="_blank" rel="noopener"
>Loyalsoldier/clash-rules&lt;/a>&lt;/td>
&lt;td style="text-align:left">202208302241&lt;/td>
&lt;td style="text-align:left">开源规则集&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>下文均以 CMFA 代称 Clash Meta for Android。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="下载-cmfa">下载 CMFA&lt;/h3>
&lt;p>推荐从 &lt;a class="link" href="https://github.com/MetaCubeX/ClashMetaForAndroid/releases" target="_blank" rel="noopener"
>Releases&lt;/a> 下载最新发行版软件。&lt;/p>
&lt;p>通常，主流安卓手机使用带有 &lt;code>arm64-v8a&lt;/code> 标签的 APK 文件。以你喜欢的方式在移动设备上安装 CMFA，不要点击多余的东西。&lt;/p>
&lt;figure align="center" style="flex-grow: 169; flex-basis: 407px;">
&lt;img src="image-20220901034946913.png" alt=" Download CMFA release arm64-v8a." width="80%"/>&lt;br>
&lt;figcapton>Fig1. - Download CMFA release through GitHub.&lt;/figcapton>
&lt;/figure>
&lt;h3 id="导入配置文件">导入配置文件&lt;/h3>
&lt;p>参考 &lt;a class="link" href="#asset" >文末附件 &lt;/a>编写你的配置信息，导入移动设备。从 CMFA 应用主界面点击「配置」进入创建配置页面，导入配置文件，点击保存。&lt;/p>
&lt;p>值得一提的是，目前 Hysteria 仍未被普及使用，你可能缺少一种合理的方式部署 URI 服务用于定时更新 Hysteria 配置信息。目前的最佳实践仍是通过配置文件导入相关数据，通过链接导入反而有订阅泄漏的风险。&lt;/p>
&lt;figure align="center">
&lt;img src="image-20220901042857526.png" alt="Import rules file(yaml) of CMFA." width="60%"/>&lt;br>
&lt;figcapton>Fig2. - Import rules from external YAML file.&lt;/figcapton>
&lt;/figure>
&lt;figure align="center">
&lt;img src="image-20220901035951449.png" alt="Waiting for external resources to load." width="60%"/>&lt;br>
&lt;figcapton>Fig3. - Waiting for rule-providers to load.&lt;/figcapton>
&lt;/figure>
&lt;figure align="center">
&lt;img src="image-20220901040031284.png" alt="Select the (hysteria) configuration item." width="60%"/>&lt;br>
&lt;figcapton>Fig4. - Select the (hysteria) configuration item.&lt;/figcapton>
&lt;/figure>
&lt;h3 id="启动代理">启动代理&lt;/h3>
&lt;p>返回 CMFA 应用主界面，点击「启动」即可。&lt;/p>
&lt;figure align="center">
&lt;img src="image-20220901040247273.png" alt="Startup proxy." width="60%"/>&lt;br>
&lt;figcapton>Fig5. - Startup proxy.&lt;/figcapton>
&lt;/figure>
&lt;h3 id="黑名单访问控制模式">黑名单访问控制模式&lt;/h3>
&lt;p>黑名单模式，意为「&lt;strong>只有命中规则的网络流量，才使用代理&lt;/strong>」，这是一个大幅度提升网上冲浪体验的关键操作。在 Kotlin 系列的软件中，该选项还被称为「分应用代理」。&lt;/p>
&lt;p>由于每个人的设备环境大相径庭，很难用一套模版覆盖所有环境，所以我们只说明操作方法以及注意事项，提供的 rules 仅供参考，你需要根据具体情况进一步调教。&lt;/p>
&lt;p>关闭代理，从应用界面依次进入「设置 &amp;ndash; 网络 」，将访问控制模式调整为「仅允许已选择的应用」，其他选项保持默认即可，具体内容如下所示：&lt;/p>
&lt;figure align="center">
&lt;img src="image-20220901122526318.png" alt=" Access control mode of VpnService." width="60%"/>&lt;br>
&lt;figcapton>Fig6. - Access control mode of VpnService. &lt;/figcapton>
&lt;/figure>
&lt;p>打开「访问控制应用包列表」，开始点选&lt;strong>需要使用代理的应用软件&lt;/strong>。可供参考的应用包列表如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">com.azure.authenticator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.android.chrome&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.discord&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.microsoft.office.excel&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.github.android&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.android.gm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.ar.core&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.instagram.android&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.medium.reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.microsoft.office.officehubrow&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.picsart.studio&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.microsoft.office.powerpoint&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.reddit.frontpage&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.spotify.music&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">org.telegram.messenger&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.twitter.android&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">twittervideosaver.twittervideodownloader.twimate.savetwittergif&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.microsoft.office.word&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.android.youtube&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">photo.editor.photoeditor.photoeditorpro&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.earth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.android.vending&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.android.gms&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">com.google.android.gsf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你可以在「访问控制应用包列表」中从外部（剪切板）导入以上内容，部分应用需要关闭包列表的系统应用过滤器才能看到。我们以上述内容为例阐述黑名单访问控制模式的最佳实践案例。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">代理类&lt;/th>
&lt;th>备注&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">谷歌商店&lt;/td>
&lt;td>&lt;code>Google Play Store&lt;/code>，&lt;code>Google Play 服务&lt;/code> 以及 &lt;code>Google 服务框架&lt;/code>。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">浏览器&lt;/td>
&lt;td>主用的浏览器，如 Google，Edge，Firefox，DuckGo 等，否则应用内的多种服务无法正常使用。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">邮箱&lt;/td>
&lt;td>Gmail，Protonmail 等需要代理才能正常收发件的产品。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Authenticator&lt;/td>
&lt;td>用于二步验证或多因素验证的软件，若您使用的是国外产品（这类生态在国内不成熟），它们的云服务备份功能自然是需要通过代理的。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">其他&lt;/td>
&lt;td>（1）各种需要代理的国外应用。如 YouTube，Twitter，Telegram，Instagram，Reddit，Spotify，Google Earth ，Microsoft Office 等人尽皆知的国外御三家应用；（2）Twitter、Instagram下载器（用于下载推文视频）之类的软件；（3）需要代理才能正常使用的游戏、流媒体及协作服务。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>反模式警告&lt;/strong>，除非是特殊用途（比如装逼、连入公司内网、开发），否则你不应在任何情况下使用境外代理访问支付宝、微信、反炸中心、百度/高德地图、Bilibili、电商软件、抖音等知名国内御三家应用。&lt;/p>
&lt;p>这种反模式的行为会不会带来意料之外的惊喜暂且不谈，就上网体验本身就非常糟糕，也许是出入公共场合地点码半分钟加载不出来，也许是 B站 的下饭体验极其恶劣，但无论如何，长期「异地登录人」的用户画像会给你今后的网上冲浪生活留下浓墨重彩的一笔。&lt;/p>
&lt;p>&lt;span id="asset">&lt;/span>&lt;/p>
&lt;h2 id="附件">附件&lt;/h2>
&lt;ol>
&lt;li>参考项目&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/HyNetwork/hysteria/wiki/%e9%ab%98%e7%ba%a7%e7%94%a8%e6%b3%95" target="_blank" rel="noopener"
>HyNetwork/hysteria Wiki&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/Loyalsoldier/clash-rules" target="_blank" rel="noopener"
>Loyalsoldier/clash-rules&lt;/a>&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>
&lt;p>配置文件&lt;/p>
&lt;p>根据注释修改配置信息&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">mixed-port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">7890&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">allow-lan&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rule&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">log-level&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">info&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ipv6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">dns&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">listen&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.0.0.0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">53&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ipv6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">default-nameserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">114.114.114.114&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">223.5.5.5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enhanced-mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">redir-host&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nameserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">https://dns.alidns.com/dns-query&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">https://doh.pub/dns-query&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fallback&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">114.114.114.114&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">223.5.5.5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 编写 Hysteria 客户端的协商配置信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">proxies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;CN2 GIA-E&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hysteria&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Hysteria 服务域名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Hysteria 服务端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">auth_str&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 字符串校验密钥&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alpn&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">h3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">wechat-video&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># udp/wechat-video&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">up&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">25&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">down&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">125&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sni&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Hysteria 服务域名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">skip-cert-verify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">recv_window_conn&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">12320768&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">recv_window&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">49283072&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">disable_mtu_discovery&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 服务注册&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 将上文配置的 proxies-name 的值依次编排到下方的 proxies 列表中&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">proxy-groups&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;PROXY&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">select&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">proxies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;CN2 GIA-E&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">rule-providers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">reject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/reject.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">icloud&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/icloud.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">apple&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/apple.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">proxy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/proxy.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">direct&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/direct.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">private&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/private.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gfw&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/gfw.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">greatfire&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">domain&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/greatfire.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/greatfire.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">telegramcidr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ipcidr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/telegramcidr.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cncidr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ipcidr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/cncidr.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">lancidr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ipcidr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/lancidr.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">applications&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">behavior&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">classical&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://ghproxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./ruleset/applications.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">86400&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">DOMAIN,clash.razord.top,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">DOMAIN,yacd.haishan.me,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,proxy,PROXY&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,telegramcidr,PROXY&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,direct,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,applications,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,private,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,icloud,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,apple,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,lancidr,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,cncidr,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">RULE-SET,reject,RECEJT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">GEOIP,LAN,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">GEOIP,CN,DIRECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">MATCH,PROXY&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>『Blog』Use Hysteria through Matsuri in Android</title><link>https://blog.echosec.top/p/matsuri-hysteria/</link><pubDate>Wed, 31 Aug 2022 06:57:23 +0800</pubDate><guid>https://blog.echosec.top/p/matsuri-hysteria/</guid><description>&lt;img src="https://blog.echosec.top/p/matsuri-hysteria/webpti.jpg" alt="Featured image of post 『Blog』Use Hysteria through Matsuri in Android" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在以往文章中我们介绍了在 Windows 上以图形化界面的形式管理 Hysteria 的解决方案：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://blog.echosec.top/p/nekoray-hysteria" >『Blog』NekoRay 配置 Hysteria&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>『Blog』V2rayN 配置 Hysteria&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>本文继续介绍有关 Hysteria 代理核心更多内容。本篇以 Matsuri 为切入点，介绍在 Android 手机上启动 Hysteria 代理核心的 quick-start 入门步骤，开箱即用。&lt;/p>
&lt;p>如果你已持有一枚可用的 Hysteria 节点链接，只需要花费不到 3 分钟的时间便可在自己的手机上架起代理与互联国际完成「友好交互」。&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>本文涉及的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>项目名&lt;/th>
&lt;th>发行版本号&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>HyNetwork/hysteria&lt;/a>&lt;/td>
&lt;td>v1.2.0&lt;/td>
&lt;td>代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri" target="_blank" rel="noopener"
>MatsuriDayo/Matsuri&lt;/a>&lt;/td>
&lt;td>v0.4.1&lt;/td>
&lt;td>图形化客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/plugins/releases/tag/Hysteria-v1.2.0-2" target="_blank" rel="noopener"
>MatsuriDayo/Hysteria-Plugin&lt;/a>&lt;/td>
&lt;td>v1.2.0-2&lt;/td>
&lt;td>兼容性插件&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意 →&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>本文不面向零基础的小白读者，且仅涉及与 Matsuri Android 客户端相关的操作演示，hysteria 服务端的配置详见&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>『Blog』V2rayN 配置 Hysteria&lt;/a>。&lt;/li>
&lt;li>该项目仍处于成长期，且因开发者精力有限，无法保证 SagerNet 的最新特性得到及时迁移。本人在相关测试后认为该项目已能实现有关 Hysteria 代理的核心功能，可以正常使用，也即，本文不涉及该软件兼容的其他代理类型的介绍，玩家需要根据自己的喜好和需求选择适合自己的产品。&lt;/li>
&lt;/ol>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>如果你已是 Hysteria 其他桌面系统的玩家，那你一定参阅过 &lt;a class="link" href="https://github.com/HyNetwork/hysteria/wiki/%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85" target="_blank" rel="noopener"
>Hysteria 的 Wiki 文档&lt;/a>，你会发现，早在一年前， SagerNet 就以插件的形式支持了 Hysteria 在安卓手机上的运行。然而，该上游项目欠缺维护，实际情况是大量型号的安卓设备并不能正常启动 Hysteria 代理核心，乃至在作者撰文的现在，大量潜在 BUG 仍未得到妥善处理，常见的问题是弹出如下提示：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>缺少插件&lt;/strong>：&amp;hellip; 专有设备提供商篡改了你的安卓系统，使该插件无法使用。&lt;/p>
&lt;/blockquote>
&lt;p>那么，该主角出场了！&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri" target="_blank" rel="noopener"
>Matsuri&lt;/a>，是一个用 Kotlin 编写的 Android 代理工具链，是 &lt;a class="link" href="https://github.com/SagerNet/SagerNet" target="_blank" rel="noopener"
>SagerNet&lt;/a> 的一个子分支。Matsuri 继承了 SagerNet 的诸多优良特性，并在此基础上修补了一些历史遗留问题。相关内容可访问 Matsuri 仓库文档，本文仅介绍有关 Hysteria 代理核心相关的内容。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="下载-matsuri">下载 Matsuri&lt;/h3>
&lt;p>Matsuri 支持从 &lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri/releases" target="_blank" rel="noopener"
>GitHub Releases&lt;/a> 以及 &lt;a class="link" href="https://play.google.com/store/apps/details?id=moe.matsuri.lite" target="_blank" rel="noopener"
>Google Play&lt;/a> 两种途径下载。目前，谷歌商店上架的版本与 GitHub 发行版的版本号一致，两者均支持在线更新。如果条件允许，从谷歌商店下载比较方便。&lt;/p>
&lt;h4 id="从-github-下载">从 GitHub 下载&lt;/h4>
&lt;p>访问 &lt;a class="link" href="https://github.com/MatsuriDayo/Matsuri/releases" target="_blank" rel="noopener"
>GitHub Releases&lt;/a> ，下载最新发行版即可。主流的安卓手机适合使用 &lt;code>arm64-v8a&lt;/code> 类型 APK 客户端。&lt;/p>
&lt;h4 id="从-google-play-下载">从 Google Play 下载&lt;/h4>
&lt;p>访问内联链接 &lt;a class="link" href="https://play.google.com/store/apps/details?id=moe.matsuri.lite" target="_blank" rel="noopener"
>Google Play&lt;/a> 或手动搜索关键词 &lt;code>Matsuri Makubaro&lt;/code> 。&lt;/p>
&lt;figure align="center">
&lt;img src="image-20220831131748008.png" alt=" Download CMFA release arm64-v8a." width="33%"/>&lt;br>
&lt;/figure>
&lt;h3 id="导入-hysteria-节点">导入 Hysteria 节点&lt;/h3>
&lt;p>此处推荐的操作是先导入一个可用的 Hysteria 节点，再进行插件的（自动）安装。&lt;/p>
&lt;p>与同世代项目操作逻辑一致，Matsuri 支持从二维码，剪切板，配置文件以及手动编辑 4 种方式导入代理。推荐从剪切板导入 Hysteria 节点分享链接。&lt;/p>
&lt;h3 id="下载-hysteria-plugin">下载 Hysteria-Plugin&lt;/h3>
&lt;p>选中导入的节点，点击下方的启动开关，此时会弹出如下警告交互框：&lt;/p>
&lt;div align="center">&lt;img src="image-20220831133400876.png" alt="image-20220831133400876" style="zoom: 25%;" />&lt;/div>
&lt;p>点击「下载」自动打开浏览器前往 &lt;a class="link" href="https://github.com/MatsuriDayo/plugins/releases" target="_blank" rel="noopener"
>Hysteria 插件页面&lt;/a>，根据你自己的设备情况选择最新发行版的软件即可。如骁龙系列产品通常选择 &lt;code>arm64-v8a.apk&lt;/code>，相关截屏如下所示：&lt;/p>
&lt;div align="center">
&lt;img src="image-20220831133813986.png" alt="image-20220831133813986" style="zoom: 15%;" />
&lt;img src="image-20220831133819439.png" alt="image-20220831133819439" style="zoom:15%;" />
&lt;/div>
下载完后正常安装即可，不要点击多余的东西。
&lt;div align="center">&lt;img src="image-20220831134255535.png" alt="image-20220831134255535" style="zoom:25%;" />&lt;/div>
&lt;h3 id="配置-matsuri-代理核心">配置 Matsuri 代理核心&lt;/h3>
&lt;h4 id="解除插件限制">解除插件限制&lt;/h4>
&lt;p>首先，下载好的 plugin 在桌面上不显示快捷方式，需要在你自己设备中的「应用管理」中查找（不同设备操作路径不一致，此处不多赘述，大体上从设置界面进入）Hysteria Plugin，如下图所示：&lt;/p>
&lt;div align="center">
&lt;img src="image-20220831134752294.png" alt="image-20220831134752294" style="zoom:25%;" />
&lt;img src="image-20220831134958164.png" alt="image-20220831134958164" style="zoom:25%;" />
&lt;/div>
&lt;h4 id="解除主程序限制">解除主程序限制&lt;/h4>
&lt;p>同样，需要在应用信息界面调整 Matsuri 的软件权限。具体来说有 3 点，联网权限，自启动以及省电策略。&lt;/p>
&lt;p>最后，你需要锁定驻台进程，防止一键清除后台缓存时退出代理。&lt;/p>
&lt;div align="center">&lt;img src="image-20220831135551288.png" alt="image-20220831135551288" style="zoom:25%;" />&lt;/div>
&lt;h4 id="启用-http-入站">启用 HTTP 入站&lt;/h4>
&lt;p>回到主程序界面，从侧边栏中进入到「设置」界面，下滑找到「入站设置」板块，勾选「启动 HTTP 入站」。&lt;/p>
&lt;p>软件默认的 SOCKS5 入站代理端口为 2080，本地 DNS 端口为 6540，HTTP 代理端口为 9080。若有端口冲突更改代理端口即可。&lt;/p>
&lt;div align="center">&lt;img src="image-20220831142427900.png" alt="image-20220831142427900" style="zoom:25%;" />&lt;/div>
&lt;h3 id="启动-hysteria-节点">启动 Hysteria 节点&lt;/h3>
&lt;p>配置完成后回到主程序界面，点击启动开关。若节点服务正常，此时已能正常通过代理连接互联网。你可以访问 Google 以及 YouTube 等站点进行行为测试。&lt;/p>
&lt;h2 id="网络优化">网络优化&lt;/h2>
&lt;p>介绍推荐使用的最佳实践方案，可在网络质量较差时明显提升网路冲浪体验，下文未提及的配置项保持默认即可。&lt;/p>
&lt;h3 id="设置">设置&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Matsuri v0.5.2 play&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">软件设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">运行模式&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">VPN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">TUN实现&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Tun2Socket&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">MTU&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1500&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">路由设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">分应用代理&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">域名解析策略&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">AsIs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">启动流量探测&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">IPv6路由&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">禁用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">路由资源更新&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">官方&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">协议设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">复用最大并发&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># If enable&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">DNS设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">增强域名解析&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">远程DNS&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://8.8.8.8/dns-query&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">直连DNS&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https+local://233.5.5.5/dns-query&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">启动DNS路由&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">入站设置&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">启用HTTP入站&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">追加HTTP代理至VPN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">杂项&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">首选插件提供者&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Matsuri&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="路由规则">路由规则&lt;/h3>
&lt;p>Matsuri 提供了一些默认的路由规则，路由规则的优先级高于分应用代理。改动路由规则和分应用代理都需要重启代理服务才能生效。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">屏蔽QUIC:（屏蔽）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">屏蔽跟踪器（屏蔽）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">屏蔽广告（屏蔽）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">中国Play商店规则（代理）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">中国域名规则（绕过）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">中国IP规则（绕过）&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>场景优化：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>通用场景。建议在「设置 - 分应用代理」中&lt;strong>绕过&lt;/strong>「国产应用」并将「中国域名」以及「中国 IP 」的路由规则关闭。你可以借助软件内置的「扫描中国应用」一键添加。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>覆盖某些国产应用中的 IP 位置显示。先保持通用场景设置，再将指定的国产应用从绕过列表中移除。&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>『Blog』Use Hysteria through NekoRay in Windows</title><link>https://blog.echosec.top/p/nekoray-hysteria/</link><pubDate>Fri, 26 Aug 2022 05:51:00 +0800</pubDate><guid>https://blog.echosec.top/p/nekoray-hysteria/</guid><description>&lt;img src="https://blog.echosec.top/p/nekoray-hysteria/finnstark.jpg" alt="Featured image of post 『Blog』Use Hysteria through NekoRay in Windows" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>2022年3月，我们在&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>《V2rayN 配置 Hysteria》&lt;/a> 一文中简要介绍了一种 Windows 环境下借助 V2rayN 运行并管理 Hysteria 代理核心的可视化解决方案。行文中，我们提到了一些该种解决方案未能处理的问题，即，无法将 Hysteria 节点的启动与测试集成到一个 action 上，需要自行添加一个 Socks5 驻台线程并手动运行 hysteria-core 才能完成节点测试。在 V2rayN v5.32 中，软件作者 2dust 使用了一种妥协的方法尝试处理这种需求，但仍不够优雅，且方案可行性有待考究。&lt;/p>
&lt;p>为了达成上述「检测 + 管理」的集成体验，本文介绍一个仍处于成长期的开源项目——&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray" target="_blank" rel="noopener"
>NekoRay&lt;/a>，基于 Qt/C++ 跨平台代理配置管理器。NekoRay 不仅能优雅地解决这个问题，还先于 V2rayN 支持了 &lt;code>hysteria://&lt;/code> 协议头的解析，在一定程度上促进 hysteria 节点的社区传播。&lt;/p>
&lt;div align="center">&lt;img src="nekoray.png" alt="NekoRay 虚拟形象" style="zoom:67%;" />&lt;/div>
&lt;p>本文从「快速上手」及「进阶指南」两个阶段介绍这个项目。你如果已持有一枚可以使用的 hysteria 节点分享链接，那么只需 1 分钟即可完成与启动系统代理有关的一切操作，开箱机用，十分方便。&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>本文最后更新时间 &lt;code>2022-08-26&lt;/code>， 请注意甄别本文中可能过时的内容，谨慎参考。&lt;/p>
&lt;p>本文涉及的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>项目名&lt;/th>
&lt;th>发行版本号&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>HyNetwork/hysteria&lt;/a>&lt;/td>
&lt;td>v1.2.0&lt;/td>
&lt;td>代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray" target="_blank" rel="noopener"
>MatsuriDayo/nekoray&lt;/a>&lt;/td>
&lt;td>v1.4&lt;/td>
&lt;td>图形化客户端&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意 →&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>本文不面向零基础的小白读者，且仅涉及与 NekoRay &lt;strong>Win10+&lt;/strong> 客户端相关的操作演示，hysteria 服务端的配置详见&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>『Blog』V2rayN 配置 Hysteria&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>该项目仍处于成长期，其成熟度仍与 V2rayN 有较大差距。本文仅提供解决方案的演示说明，玩家需要根据自己的喜好和需求选择适合自己的产品。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;h3 id="下载-nekoray">下载 NekoRay&lt;/h3>
&lt;p>进入 &lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/releases" target="_blank" rel="noopener"
>Releases · MatsuriDayo/nekoray&lt;/a>，下载最新版的 NekoRay Windows 压缩包。免安装，开箱即用。此处假设解压目录为 &lt;code>C:\\nekoray&lt;/code>，则主程序路径为 &lt;code>C:\\nekoray\\nekoray.exe&lt;/code>。&lt;/p>
&lt;h3 id="下载-hysteria-windows">下载 hysteria-windows&lt;/h3>
&lt;p>进入 &lt;a class="link" href="https://github.com/HyNetwork/hysteria/releases" target="_blank" rel="noopener"
>Releases · HyNetwork/hysteria&lt;/a>，下载最新版的 &lt;code>hysteria-windows-amd64.exe&lt;/code>，将其放置在解压后的 NekoRay 配置目录下，例如：&lt;code>C:\\nekoray\\config\\hysteria-windows-amd64.exe&lt;/code>（此处随意，但 config 为核心界面的默认启动路径，这样放置方面找文件）。&lt;/p>
&lt;h3 id="配置-nekoray-代理核心">配置 NekoRay 代理核心&lt;/h3>
&lt;p>持续进入「首选项」「基本设置」「核心」界面，选择 &lt;strong>hysteria-core&lt;/strong> 的绝对路径，即刚下载的 &lt;code>hysteria-windows-amd64.exe&lt;/code> 文件绝对路径。&lt;/p>
&lt;p>选定后切换到「基本设置 - 通用」界面，&lt;strong>将 HTTP 监听端口启用&lt;/strong>。其他设置保持默认，点击确定，保存设置。&lt;/p>
&lt;div align="center">&lt;img src="image-20220826075323108.png" alt="首选项 - 基本设置 - 核心 - hysteria" style="zoom:48%;" />&lt;/div>
&lt;p>需要注意的是，若在后续操作中出现端口重用或冲突的弹窗警告，需要回到「基本设置 - 通用」中修改 Socks 监听端口或 HTTP 监听端口。下图为改变后的端口值：&lt;/p>
&lt;div align="center">&lt;img src="image-20220831145659642.png" alt="image-20220831145659642" style="zoom:67%;" />&lt;/div>
&lt;h3 id="导入-hysteria-节点">导入 hysteria 节点&lt;/h3>
&lt;h4 id="从分享链接或剪切板添加">从分享链接或剪切板添加&lt;/h4>
&lt;p>NekoRay 支持 &lt;code>hysteria://&lt;/code> 协议头的解析，可以直接将订阅链接粘贴进来自动获取节点的配置信息，如下图所示:&lt;/p>
&lt;div align="center">&lt;img src="image-20220826075502047.png" alt="NekoRay - 从剪切板添加 hysteria 节点分享链接" style="zoom: 48%;" />&lt;/div>
&lt;p>值得一提的是，我们在经典的 hysteria 客户端配置文件中设定字段 &lt;code>acl&lt;/code>以及 &lt;code>mmdb&lt;/code> 用以调取分流策略，还能额外设置 &lt;code>recv_window_conn&lt;/code> ，&lt;code>recv_window&lt;/code>以及 &lt;code>resolver&lt;/code> 等参数更细粒度地控制代理行为。但我们观察&lt;code>hysteria://&lt;/code> 的节点分享链接的参数后发现，其只保留了 C/S 通信的必要参数，即 &lt;code>host&lt;/code>，&lt;code>protocol&lt;/code>，&lt;code>auth_str&lt;/code> 等字段。&lt;/p>
&lt;p>显然，在最佳实践中，我们不应在为传播的设计的参数结构体中携带诸如文件路径等奇怪的东西，这会让整个分享体系变得非常冗余，十分不优雅。但我又偏有分流这样的需求怎么办呢？非常简单，我们可以通过 NekoRay 间接地为代理核心提供相关的配置信息（相关操作其实也非常简单，自己玩一玩就会了，具体操作我会在下文的进阶部分补充）。&lt;/p>
&lt;h4 id="手动编辑">手动编辑&lt;/h4>
&lt;p>有关 hysteria 服务端的配置介绍及最佳实践可见&lt;a class="link" href="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/" target="_blank" rel="noopener"
>另一篇博客&lt;/a>。&lt;/p>
&lt;p>相关配置的注释及生成后的面板预览结果如下图所示：&lt;/p>
&lt;div align="center">&lt;img src="image-20220826074722587.png" alt="NekoRay - Hysteria 配置生成面板" style="zoom: 67%;" />&lt;/div>
&lt;div align="center">&lt;img src="image-20220826075056836.png" alt="NekoRay - Hysteria 配置生成预览" style="zoom:63%;" />&lt;/div>
&lt;p>此处出现了被称为 &lt;code>替换串&lt;/code> 的占位符，即 &lt;code>%mapping_port%&lt;/code> 与 &lt;code>%socks_port%&lt;/code> ，不需要修改，保持默认即可。&lt;/p>
&lt;h3 id="启动-hysteria-节点">启动 hysteria 节点&lt;/h3>
&lt;p>初次使用时，选中目标节点，并依次点击「程序 &amp;ndash; 系统代理 &amp;ndash; 启动系统代理」。当控制台开始持续输出来自 hysteria-core 的日志信息时，说明节点启动成功，你可以访问 Google 或 YouTube 等站点进行行为校验。&lt;/p>
&lt;div align="center">&lt;img src="image-20220826081449835.png" alt="image-20220826081449835" style="zoom:48%;" />&lt;/div>
&lt;p>值得一提的是，NekoRay 的 &amp;lt;系统代理启动&amp;gt; 及 &amp;lt;代理核心运行&amp;gt; 的业务是分离的，也即对着节点敲回车的作用是启动/重启代理核心，只有勾选「启动系统代理」后才能连接互联网，这点与 V2rayN 相似。&lt;/p>
&lt;h3 id="测试-hysteria-节点">测试 hysteria 节点&lt;/h3>
&lt;p>在合理配置前置代理选项后，你可以将「节点激活 + 节点测试」集成到一个 action 中，这比 V2rayN 目前(~v5.32)的解决方案要更加优雅。&lt;/p>
&lt;p>若你按照本文档介绍的步骤走，你只需要在默认分组状态下，依次点击「服务器 – 当前分组」即可调出测试控件的接口，如下图所示：&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/nekoray-hysteria/image-20220826082130683.png"
width="323"
height="224"
srcset="https://blog.echosec.top/p/nekoray-hysteria/image-20220826082130683_hu0a171cb7f6b55220a14afee1c80b5a6a_6909_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/nekoray-hysteria/image-20220826082130683_hu0a171cb7f6b55220a14afee1c80b5a6a_6909_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="346px"
>&lt;/p>
&lt;p>NekoRay 集成了一些主流的测试工具，直接运行「完整测试」即可。测试包含以下四个项目（点击跳转源码）：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">测试项目&lt;/th>
&lt;th style="text-align:center">简介&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L204" target="_blank" rel="noopener"
>Latency 延迟测试&lt;/a>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L247" target="_blank" rel="noopener"
>下载速度测试&lt;/a>&lt;/td>
&lt;td style="text-align:center">使用代理下载 10MiB 文件，计算下载速度。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L216" target="_blank" rel="noopener"
>入口IP&lt;/a>， &lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L229" target="_blank" rel="noopener"
>出口IP&lt;/a>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/MatsuriDayo/nekoray/blob/4ed46c10feef17831398d7daf5829e01b446d3f5/go/grpc_core.go#L263" target="_blank" rel="noopener"
>NAT类型&lt;/a>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>常见的（玄学）速度测试分布如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>0~5 MiB/s&lt;/code>，绝大多数免费节点，山路十八弯的自建节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>4~6 MiB/s&lt;/code>，优选IP，反代优选IP，机场普通节点，自建普通线路节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>~10MiB/s&lt;/code>，机场上游质量节点，自建优质线路节点，hysteria+自建普通线路节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;gt;18MiB/s&lt;/code>，机场上游至最贵一档的机场节点，hysteria+自建优质线路节点（家宽 200Mpbs 起且服务端未限制 100Mbps 的下行速度）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>上不封顶&lt;/code>，hysteria 一般用于普通或劣质线路的环境改善，在G口档做 UDP 发包是非常睿智的行为。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>测试的输出结果如下图所示：&lt;/p>
&lt;div align="center">&lt;img src="image-20220826083252485.png" alt="image-20220826083024670" style="zoom:48%;" />&lt;/div>
&lt;p>我们在经典的 hysteria 代理拓扑中使用的是最简单的 QUIC 直连方案，也即入口地址 In 和出口地址 Out 是相同的，其值均为你的代理服务器的真实 IP。&lt;/p>
&lt;p>需要注意的是，hysteria 的通信协议是基于 quic-go 实现的，TCPing 测试不可用。&lt;/p>
&lt;h2 id="进阶教程">进阶教程&lt;/h2>
&lt;blockquote>
&lt;p>（必读）官方文档：&lt;a class="link" href="https://matsuridayo.github.io/n-configuration/" target="_blank" rel="noopener"
>Nekoray-配置 - Matsuri &amp;amp; NekoRay &lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="vpn模式">VPN模式&lt;/h3>
&lt;h3 id="服务器组">服务器组&lt;/h3>
&lt;p>NekoRay 以组的形式管理和编排代理对象，因此，所有的测试都是基于组进行的，即，所有组内节点都会被测。&lt;/p>
&lt;h3 id="必读分流策略">[必读]分流策略&lt;/h3>
&lt;p>在 Windows 上，NekoRay 默认以全局代理的形式启动。因此，我们需要通过设置基础的路由策略来提升网上冲浪的体验，否则会有大量的代理流量被浪费，还会无端加大断流风险。&lt;/p>
&lt;p>此处举个简单的例子说明设置分流的必要性。如果你使用过 Bilibili 你应该知道 B站番剧对「不同地区」用户有着不一样的版权策略，而界定「不同地区」用户的规则是基于「访客IP」编写的（目前），即，使用不同的 IP 访问 B站，推荐系统，搜索引擎，页面布局等服务的响应均有所不同。&lt;/p>
&lt;ul>
&lt;li>US Global Proxy&lt;/li>
&lt;/ul>
&lt;img src="image-20220831151213827.png" alt="image-20220831151213827" style="zoom:33%;" />
&lt;ul>
&lt;li>GEOIP-CN Bypass（简单理解为访问B站不用代理）&lt;/li>
&lt;/ul>
&lt;img src="image-20220831151428355.png" alt="image-20220831151428355" style="zoom:33%;" />
&lt;p>访问国内站点却绕行国外代理除了在评论区装逼我想不出任何动机。由于本篇文章属于「入门介绍」，不过多深入自定义规则或高级路由分流策略之类的东西，只需要按照下图所示操作开启 NekoRay 预设的路由规则即可。&lt;/p>
&lt;p>&lt;strong>TL;TD&lt;/strong>&lt;/p>
&lt;p>进入「首选项 &amp;ndash; 路由 VPN 设置」，选择预设「绕过局域网和大陆」，确定保存，重启代理。&lt;/p>
&lt;div align="center">&lt;img src="image-20220831152027353.png" alt="image-20220831152027353" style="zoom: 67%;" />&lt;/div></description></item><item><title>『Blog』爬虫之巅，畅想「矛」与「盾」的未来</title><link>https://blog.echosec.top/p/spider_performance/</link><pubDate>Thu, 07 Jul 2022 02:22:14 +0800</pubDate><guid>https://blog.echosec.top/p/spider_performance/</guid><description>&lt;img src="https://blog.echosec.top/p/spider_performance/pexels-geometric-photography-13271914.jpg" alt="Featured image of post 『Blog』爬虫之巅，畅想「矛」与「盾」的未来" />&lt;p>(填坑中&amp;hellip;)&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>矛与盾的界定，双向时间线，停一下，畅想未来。&lt;/p>
&lt;h2 id="captcha的前世今生">CAPTCHA的前世今生&lt;/h2>
&lt;h3 id="字符验证码">字符验证码&lt;/h3>
&lt;p>以 text-to-image 为例&lt;/p>
&lt;h3 id="行为验证码">行为验证码&lt;/h3>
&lt;p>以国内的极验、网易易盾、阿里安全、京东安全为例，涉及高强度的逆向防护，滑动拼图，文字点选，推理拼图，轨迹涂抹，语音验证等丰富的行为验证方案，相关技术步入「&lt;strong>感官挑战&lt;/strong>」阶段。&lt;/p>
&lt;p>曾被信息技术从业人员戏称为 HelloWorld 的 request-based Spider 早已成为村头树下的豚骨拉面。能否处理行为验证，成为爬虫开发者的分水岭。&lt;/p>
&lt;h3 id="问答式验证码">问答式验证码&lt;/h3>
&lt;p>以国外的 hCAPTCHA，reCAPTCHA v2，等前沿服务为例，涉及认知问答、AI对抗、行为检测多点防御。相关技术上升到全新的「&lt;strong>人机挑战&lt;/strong>」阶段。此阶段给出的挑战难题足以放倒人类。&lt;/p>
&lt;h3 id="我不是人类">我，不是人类&lt;/h3>
&lt;p>以国外的 hCAPTCHA，reCAPTCHA v3，Talon service of Epic 等前沿服务为例，涉及驱动特征检测，运动数据检测，威胁等级计算，访客信用水平统计等技术，此处涉及的多种检测策略在国内多以「无感验证」统称。&lt;/p>
&lt;h2 id="无畏的挑战者">无畏的挑战者&lt;/h2>
&lt;p>领域技术迭代过快，乃至自学爬虫的玩家，驾校网培生以及跨行业的零基础开发者，抱着刚学会即淘汰的《Python爬虫错题本》欲哭无泪。这类开发者在这场逐渐内卷的博弈中连「小镇做题家」都算不上，充其量只能是「乡村错题本」。&lt;/p>
&lt;p>各位读者可以脑补以下颇有戏剧性的演化场景：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>刚学会网络请求以及基础的伪装，发现获取不到数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>刚学会如何逆向前端代码，发现实战中的出题人是行业中最聪明的一批算法工程师&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发现无法绕过，需要额外学习使用 &lt;strong>Selenium&lt;/strong>/WebDriver 发起&lt;strong>模拟请求&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发现即使是模拟请求，也“不得不”处理行为验证。于是，开发者开始像机器一样思考，制作能够识别图像，识别语音，理解语义的AI，让网络驱动携带着这些模块上前线答题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一段时间后，开发者逐渐发现即使 AI 能够答对题目，验证仍无法通过，折腾一阵子后发现需要像人类一样思考，制作符合人类上网习惯的鼠标轨迹&lt;strong>行为&lt;/strong>链，然后呢，学都学了，顺带把键盘输入的模仿也专精了吧！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>过了不久，开发者发现一切都回到了原点，但凡是 Selenium 启动的网页，即使是自己手动答题也无法通过验证。折腾一阵子后发现需要让机器人认为「我」是人，开始研究 Chrome 开发者工具以及 BiDi 通信，隐藏浏览器的各项异常特征，尽可能地让 Selenium 启动的网页与手动打开的&lt;strong>网页特征&lt;/strong>一致，甚至不惜自行编译浏览器客户端。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>到此，开发者回顾往昔，发现路上已有绝大多数的同道之人倒下了。但秉持“不忘初心”的信念，开发者仍需在「自证为人」的道路上继续前行。再过不久，开发者已能熟练使用与网页驱动相关的工具技术，随时都能制作深度学习赋能的高性能机器人，秒解所有行为验证难题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>某一天，「问答式验证」出现了，在这场以「常识对决」为游戏规则的博弈中，开发者受到了来自「彼岸」的满满恶意，如果自己不知道这些生而为人就该知道的「常识」，自然也无法培养出优秀的小镇做题家。&lt;/p>
&lt;p>至此，作为防守方的「挨打人」开始主动出击，在世界各地崭露头角，&lt;strong>人机挑战&lt;/strong>时代拉开序幕。&lt;/p>
&lt;p>回望往昔，这是一场尚无硝烟的战争，本是机器人之间的对抗，上升为「挑战者」与「彼岸玩家」之间的对决；本是脑力劳动主导的工作，逐渐演化成了纯粹的体力劳动。无畏的挑战者与彼岸的玩家们凭借着自己对工作负责的态度以及对行业的热爱，在场无限轮回的游戏中，推动着人机验证领域高速发展。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>时至今日，「挑战者」与「彼岸玩家」共同开辟了计算机网络空间安全的一个全新分支。在这场对决中，它们分别饰演着「矛」与「盾」的角色，在对立统一中，它们互相吸取和利用有利于自己的因素而得到发展，在矛盾斗争中，它们相互排斥不断变化最终破坏自身统一，在这场形式多样性的对抗中，矛盾双方协同运动，融合成一个新事物。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>从上帝视角来看，这是一场颇具戏剧性的博弈。如果没有「搅局者」的加入，「反爬虫工程师」至今仍会是地球上的一小股极客团体，但我也无法想象没有人机验证的互联网该如何良性发展。&lt;/p>
&lt;p>当下，对抗恶意流量的安全团队仍是所有技术岗位中最神秘的一批人，有时他们化身白客，守护资本家和客户仅有的数字资产；但有时他们化身黑客，能够组织规模庞大的流量淹没仍处于萌芽阶段的潜在竞争对手。&lt;/p>
&lt;p>这群秉持着技术中立精神却向网络空间安全不断发起挑战的神秘人到底什么来头？风云激荡的二十年里，网络爬虫的形式经历了怎样的升级迭代？本章节以顺向时间线的形式，浅聊一下作为「矛」的网络机器人技术及其相关的行业领军人物。&lt;/p>
&lt;p>&lt;em>待序&amp;hellip;&lt;/em>&lt;/p>
&lt;h3 id="追赶时代的乡村错题本">追赶时代的乡村错题本&lt;/h3>
&lt;h3 id="来自网络驱动的虚假流量">来自网络驱动的虚假流量&lt;/h3>
&lt;h3 id="像人类一样思考">像人类一样思考&lt;/h3>
&lt;h3 id="我不是机器人">我，不是机器人&lt;/h3>
&lt;h2 id="既见未来为何不拜">既见未来，为何不拜？&lt;/h2>
&lt;h3 id="灰度空间的失衡与洗牌">灰度空间的失衡与洗牌&lt;/h3>
&lt;h3 id="防火长城与大航海时代">防火长城与大航海时代&lt;/h3>
&lt;h2 id="畅想矛与盾的未来">畅想「矛」与「盾」的未来&lt;/h2>
&lt;h3 id="年轻人的游戏但是适老化">年轻人的游戏，但是适老化&lt;/h3>
&lt;h3 id="熊掌与鱼兼收并蓄的农场主">熊掌与鱼，兼收并蓄的农场主&lt;/h3>
&lt;h3 id="搅局者web30的韭菜收割机">搅局者，Web3.0的韭菜收割机&lt;/h3>
&lt;h3 id="挣脱形态桎梏奔向虚拟现实社会">挣脱形态桎梏，奔向虚拟现实社会&lt;/h3>
&lt;h3 id="图灵测试20意识与人格的考验">图灵测试2.0，意识与人格的考验&lt;/h3></description></item><item><title>『Blog』VMware 虚拟机流量代理</title><link>https://blog.echosec.top/p/vmware-proxy/</link><pubDate>Sat, 07 May 2022 13:15:46 +0800</pubDate><guid>https://blog.echosec.top/p/vmware-proxy/</guid><description>&lt;img src="https://blog.echosec.top/p/vmware-proxy/unsplash.jpg" alt="Featured image of post 『Blog』VMware 虚拟机流量代理" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本系列博客以 VMware Workstation 16 pro 为例，分享在 Windows11 上启动 Ubuntu 20.04 LTS 虚拟机进行 Python3 项目开发的最佳实践。本章节内容涉及网络连接中较为关键的环节 —— 流量代理。&lt;/p>
&lt;p>推荐阅读：&lt;/p>
&lt;p>&lt;a class="link" href="http://localhost:11014/p/python-best-practices-ide/" target="_blank" rel="noopener"
>『Blog』Python 应用开发最佳实践@环境搭建篇&lt;/a>&lt;/p>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;ol>
&lt;li>本文首发于 &lt;code>2022-05&lt;/code>，如果你是若干年后到访的读者，请注意甄别文章中可能过时的内容，如有其他问题可在评论区提出；&lt;/li>
&lt;li>本文不面向零基础的小白读者，不会涉及软件下载安装等细枝末节的内容，不再赘述相关解决方案中涉及到的主流软件的使用细节。&lt;/li>
&lt;/ol>
&lt;h2 id="虚拟机设置">虚拟机设置&lt;/h2>
&lt;p>在 VMware 「虚拟机设置」中修改「网络适配器（网络连接）」，选择「桥接模式」但不复制物理网络连接状态。这是接管虚拟机代理流量最简单的方式，后文会详细介绍一些基于桥接模式的主流的流量代理解决方案。&lt;/p>
&lt;h2 id="局域网代理方案">局域网代理方案&lt;/h2>
&lt;h3 id="v2rayn">v2rayN&lt;/h3>
&lt;p>介绍使用 &lt;a class="link" href="https://github.com/2dust/v2rayN/releases" target="_blank" rel="noopener"
>v2rayN&lt;/a> 接管虚拟机全局流量的方法。操作前请确保虚拟机网络已被设为「桥接模式」。&lt;/p>
&lt;p>注意：使用的演示版本为 &lt;code>v5.16&lt;/code>；在这个版本中，v2rayN 区分了本地代理以及局域网代理所用的监听的端口。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>启动主机系统代理&lt;/p>
&lt;p>在 v2rayN 中主机上开启「自动配置系统代理」，用你喜欢的方式确认系统代理的运行状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动局域网代理&lt;/p>
&lt;p>在 v2rayN 中依次点击「设置」「参数设置」在「Core：基础设置」中开启 &lt;code>允许来自局域网的连接&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看无线局域网适配器 WLAN&lt;/p>
&lt;p>在主机命令行窗口输入 &lt;code>ipconfig&lt;/code>，找到其中的无线局域网适配器 WLAN 的 IPv4 地址。如果你是有线连接上网，寻找「以太网适配器」的 IPv4 地址即可（可能会打印很多选项，找有默认网关的那一条）。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align='center'>&lt;img src="image-20220507122059354.png" alt="image-20220507122059354" style="zoom:50%;" />&lt;/div>
&lt;ol start="4">
&lt;li>
&lt;p>查看 v2rayN 的局域网代理端口&lt;/p>
&lt;p>通常在软件视图的最下方的边框处可见，找到 HTTP 以及 SOCKS 的局域网代理端口。若你使用的是更早的版本，默认情况下的代理端口是 &lt;code>http:10809 socks:10808&lt;/code>，而在 &lt;code>v5.16&lt;/code> 或更高版本中，软件区分了系统代理和局域网代理，此时的局域网代理端口默认是 &lt;code>http:10811 socks:10810&lt;/code>，如下图所示。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align='center'>&lt;img src="image-20220507120921780.png" alt="image-20220507120921780" style="zoom: 33%;" />&lt;/div>
&lt;ol start="5">
&lt;li>
&lt;p>配置虚拟机网络代理&lt;/p>
&lt;p>打开 Ubuntu 的网络设置，将「网络代理」切换为手动模式，将我们刚才搜集到的（http 以及 socks）路由参数填入即可。下图为参考的填写格式，这与你的网络情况一定不一样，仅供参考。&lt;/p>
&lt;div align="center">&lt;img src="image-20220507122654416.png" alt="image-20220507122654416" style="zoom: 67%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>检查虚拟机网络连接&lt;/p>
&lt;p>查看能否正常访问&lt;a class="link" href="https://www.youtube.com" target="_blank" rel="noopener"
>Youtube&lt;/a>。此外，你还可以 &lt;a class="link" href="http://www.ip111.cn/" target="_blank" rel="noopener"
>显示查询自己的IP地址 (ip111.cn)&lt;/a> 。&lt;/p>
&lt;p>使用系统自带的 Firefox 浏览器访问 Youtube 的结果如下图所示：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507123156186.png" alt="image-20220507123156186" style="zoom:20%;" />&lt;/div>
&lt;h3 id="clash-for-windows">Clash for Windows&lt;/h3>
&lt;p>介绍使用 &lt;a class="link" href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener"
>Clash for Windows&lt;/a> 接管虚拟机全局流量的方法，其他「类 Clash」产品均可举一反三。操作前请确保虚拟机网络已被设为「桥接模式」。&lt;/p>
&lt;p>注意：以下使用的演示版本为 &lt;code>Clash for Windows v0.19.17&lt;/code> ，&lt;code>Clash Core 2022.04.17 Premium(10538)&lt;/code>，所有设置均保持“出厂状态” 。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>启动主机系统代理&lt;/p>
&lt;p>在 Clash for Windows 中启动「System Proxy」，用你喜欢的方式确认系统代理的运行状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动局域网代理&lt;/p>
&lt;p>在 Clash for Windows 中启动「Allow LAN」，并将鼠标移动到「Allow LAN」的位置上，悬停，可以看到窗口弹出了一则提示信息，如下图所示。你需要记下这个 &lt;code>WLAN IPv4&lt;/code> 以及 &lt;code>Port&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507231335305.png" alt="image-20220507231335305" style="zoom:37%;" />&lt;/div>
&lt;ol start="3">
&lt;li>
&lt;p>配置虚拟机网络代理&lt;/p>
&lt;p>打开 Ubuntu 的网络设置，将「网络代理」切换为手动模式，将我们刚才搜集到的路由参数填入即可。下图为参考的填写格式，仅供参考。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220507233025258.png" alt="image-20220507233025258" style="zoom: 33%;" />&lt;/div>
&lt;ol start="4">
&lt;li>
&lt;p>检查虚拟机网络连接&lt;/p>
&lt;p>查看能否正常访问一些热门站点。此外，你还可以 &lt;a class="link" href="http://www.ip111.cn/" target="_blank" rel="noopener"
>显示查询自己的IP地址 (ip111.cn)&lt;/a> 。&lt;/p>
&lt;p>使用 Firefox 访问 Google Scholar 检索关键词 &lt;code>Neurocompositional computing&lt;/code> 的结果如下图所示：&lt;/p>
&lt;div align="center">&lt;img src="image-20220507233450859.png" alt="image-20220507233450859" style="zoom: 30%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h2 id="错误排查">错误排查&lt;/h2>
&lt;h3 id="浏览器使用系统代理">浏览器使用系统代理&lt;/h3>
&lt;p>如果上文所述的局域网代理方案无法达到预期，你可能需要进一步调整 Firefox 浏览器代理。&lt;/p>
&lt;p>打开浏览器的「Settings」并依次访问「General」「Network Settings」。在弹出的「Connection Settings」中将代理选项切换至「use system proxy settings」也即使用系统代理，点击「OK」保存配置。新建标签页检查网络连接。&lt;/p>
&lt;p>（当然，如果你是用的是其他浏览器产品，你不应该在 Firefox 里面配置浏览器代理&amp;hellip;&amp;hellip;&lt;/p>
&lt;div align="center">&lt;img src="image-20220507124058496.png" alt="image-20220507124058496" style="zoom:37%;" />&lt;/div>
&lt;h3 id="虚拟机网络代理设置">虚拟机网络代理设置&lt;/h3>
&lt;p>若你在调整 Firefox 浏览器代理为「系统代理」后仍无法正常访问外网，很有可能是你的 IPv4 地址或局域网代理端口填写错误，也有可能是你的软件没有开启「允许局域网连接」的选项，控制变量逐一排查即可。&lt;/p>
&lt;h3 id="局域网动态-ipv4">局域网动态 IPv4&lt;/h3>
&lt;p>如果你出现「昨天都可以上网今天怎么就不行了」的情况，请检查你的 &lt;code>WLAN IPv4&lt;/code> 是否有变化。&lt;/p>
&lt;p>通常情况下国内家用终端物联网设备的局域网 &lt;code>IPv4 地址&lt;/code> 是动态分发的，如果你的物联网设备（如笔记本）从之前的 WIFI 热点（如卧室）中断出重连到其他的 WIFI 热点下（如星巴克），局域网 &lt;code>IPv4 地址&lt;/code> 很可能发生变化。此时按照流程重新检查一下变更后的地址，手动修改虚拟机的网络代理既可。&lt;/p></description></item><item><title>『Blog』台媒，信任危机！</title><link>https://blog.echosec.top/p/digital-news-report-2021-taiwan/</link><pubDate>Sun, 10 Apr 2022 12:13:43 +0800</pubDate><guid>https://blog.echosec.top/p/digital-news-report-2021-taiwan/</guid><description>&lt;img src="https://blog.echosec.top/p/digital-news-report-2021-taiwan/Snipaste_2022-04-10_12-35-43.png" alt="Featured image of post 『Blog』台媒，信任危机！" />&lt;h2 id="背景介绍">背景介绍&lt;/h2>
&lt;p>路透社数字新闻报告（ &lt;a class="link" href="https://reutersinstitute.politics.ox.ac.uk/" target="_blank" rel="noopener"
>Reuters Digital News Report&lt;/a> ）会在每年度的国家市场数据（ &lt;a class="link" href="https://reutersinstitute.politics.ox.ac.uk/digital-news-report/2021/country-and-market-data" target="_blank" rel="noopener"
>Country and market data&lt;/a> ）中统计部分地区的常驻人口对当地主流媒体的信任度以及了解新闻资讯的方式与渠道。&lt;/p>
&lt;p>该份报告从 2012 至今已将调研对象逐渐拓展至 46 个国家或地区，并于 2017 年首次将台湾市场纳入调查范围。立项以来，台湾市场报告均由国立台湾大学的林麗雲（ &lt;a class="link" href="https://sites.google.com/site/lihyunfield/" target="_blank" rel="noopener"
>Lihyun Lin&lt;/a> ） 主笔。&lt;/p>
&lt;h2 id="媒体整体信任度">媒体整体信任度&lt;/h2>
&lt;p>历年报告显示，台媒新闻信任度常居倒数。2017~2021 台湾民众对当地新闻媒体的整体信任度（ &lt;code>Trust in news overall&lt;/code> ）分别为 31%(30/36) ，32%(32/37)，28%(34/38)，24%(38/40)，31%(42/46)，前为算法得分，括号内为得分排位。&lt;/p>
&lt;p>2021 年度报告显示，在统计的 15 个媒体中，最受台湾民众信赖的当地媒体是「&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E5%85%AC%E5%85%B1%E9%9B%BB%E8%A6%96%E5%8F%B0" target="_blank" rel="noopener"
>公共电视台&lt;/a> (52%)」「&lt;a class="link" href="https://www.businessweekly.com.tw/" target="_blank" rel="noopener"
>商业周刊&lt;/a>（51%）」以及「&lt;a class="link" href="https://www.cw.com.tw/" target="_blank" rel="noopener"
>天下杂志&lt;/a>（51%）」。被台湾本地人戏称为“地摊报纸”的「&lt;a class="link" href="https://tw.appledaily.com/home/" target="_blank" rel="noopener"
>蘋果日報&lt;/a>（37%）」位列“第四”。此外，最不受待见的媒体则是「三立新闻台」不信任度最高，达到了 26%。&lt;/p>
&lt;iframe title="Brand trust scores" aria-label="Stacked Bars" id="datawrapper-chart-j0Cbb" src="https://datawrapper.dwcdn.net/j0Cbb/4/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="727">&lt;/iframe>&lt;script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(e){if(void 0!==e.data["datawrapper-height"]){var t=document.querySelectorAll("iframe");for(var a in e.data["datawrapper-height"])for(var r=0;r&lt;t.length;r++){if(t[r].contentWindow===e.source)t[r].style.height=e.data["datawrapper-height"][a]+"px"}}}))}();&lt;/script>
&lt;p>Lihyun Lin 在报告中强调「在特殊时期，民众对新闻的整体信任度相较去年上升了七个百分点。在我们的调查中，&lt;code>Public Television Service&lt;/code> 仍然是最受信任的信源，其次是经济新闻类媒体（常见的如《天下杂志》和《商业周刊》）。在两极分化的媒体环境中，其余的新闻品牌被一个群体信任，但被另一个群体不信任」。&lt;/p>
&lt;p>相信了解中国国情的各位读者都知道这里的「两极」具体涵义，此处不多赘述，而「特殊时期」指的则是新冠疫情爆发以来的这段时期，也即 Lihyun Lin 在综述中提到的「台湾民众对新闻的信任度历来很低，但媒体在强调公共卫生信息方面的作用可能促使今年的信任度大幅上升至31%（+7个百分点）」。&lt;/p>
&lt;h2 id="快讯平台使用频率">快讯平台使用频率&lt;/h2>
&lt;p>该年度报告还指出，台湾民众于线下渠道了解新闻时，使用率最高的是「&lt;a class="link" href="https://news.tvbs.com.tw/" target="_blank" rel="noopener"
>TVBS News&lt;/a>」使用率最低的是「华视全球资讯」；线上使用率最高的平台是「Yahoo! News」「&lt;a class="link" href="https://www.ettoday.net/" target="_blank" rel="noopener"
>ETtoday online&lt;/a>」以及「&lt;a class="link" href="https://today.line.me/tw/v2/tab?fbclid=IwAR0lFEnvWLj-UjCmAe_QYNtlNkMOXqnX6o-aAQNCL_ftSrHjAl71NyjZvhQ" target="_blank" rel="noopener"
>Line News&lt;/a>」，使用率最低的是「风暴传媒」以及「台湾电视新闻」。&lt;/p>
&lt;iframe title="Weekly reach - offline" aria-label="Split Bars" id="datawrapper-chart-H3T1E" src="https://datawrapper.dwcdn.net/H3T1E/1/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="662">&lt;/iframe>&lt;script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"])for(var e in a.data["datawrapper-height"]){var t=document.getElementById("datawrapper-chart-"+e)||document.querySelector("iframe[src*='"+e+"']");t&amp;&amp;(t.style.height=a.data["datawrapper-height"][e]+"px")}}))}();&lt;/script>
&lt;iframe title="Weekly reach - online" aria-label="Split Bars" id="datawrapper-chart-cLnie" src="https://datawrapper.dwcdn.net/cLnie/2/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="658">&lt;/iframe>&lt;script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(e){if(void 0!==e.data["datawrapper-height"]){var t=document.querySelectorAll("iframe");for(var a in e.data["datawrapper-height"])for(var r=0;r&lt;t.length;r++){if(t[r].contentWindow===e.source)t[r].style.height=e.data["datawrapper-height"][a]+"px"}}}))}();&lt;/script>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;p>&lt;a class="link" href="https://reutersinstitute.politics.ox.ac.uk/digital-news-report/2021/taiwan" target="_blank" rel="noopener"
>Taiwan | Digital News Report 2021&lt;/a>&lt;/p></description></item><item><title>『Blog』Hysteria Advanced</title><link>https://blog.echosec.top/p/hysteria-advanced/</link><pubDate>Sun, 10 Apr 2022 12:12:09 +0800</pubDate><guid>https://blog.echosec.top/p/hysteria-advanced/</guid><description>&lt;img src="https://blog.echosec.top/p/hysteria-advanced/207983.jpg" alt="Featured image of post 『Blog』Hysteria Advanced" />&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>截至 &lt;code>2022-04-05&lt;/code> 该解决方案仍处于测试阶段，未来短期内会有大量的版本更新，请注意甄别本文中可能过时的内容，谨慎参考。如有错误歧义之处欢迎指正。&lt;/p>
&lt;h2 id="进阶配置">进阶配置&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/HyNetwork/hysteria/wiki/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95" target="_blank" rel="noopener"
>Hysteria 高级用法&lt;/a>的拓展描述，原文已有的不再赘述。&lt;/p>
&lt;p>&lt;span id="advanced">&lt;/span>&lt;/p>
&lt;h3 id="linux-服务端配置">Linux 服务端配置&lt;/h3>
&lt;h3 id="windows-客户端配置">Windows 客户端配置&lt;/h3>
&lt;p>必填参数为 &lt;code>server&lt;/code>（或 &lt;code>host&lt;/code> and &lt;code>port&lt;/code> ） ，&lt;code>up_mbps &lt;/code> 以及 &lt;code>down_mbps&lt;/code>，其余配置与服务端的设置相匹配既可。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>server&lt;/code>：服务器地址。如&lt;code>domain.com:52025&lt;/code>，在部分图形化代理软件中将此项拆分成「服务器」与「服务器端口」，注意甄别。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>protocol&lt;/code>：传输协议。可选项为 &lt;code>udp&lt;/code>，&lt;code>wechat-video&lt;/code>，&lt;code>faketcp&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>up_mbps&lt;/code>：最大上行（Mbps）。此项限制的是当前客户端的最大上传速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>down_mbps&lt;/code>：最大下行（Mbps）。此项限制的是当前客户端的最大下载速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>retry&lt;/code>：启动时连接服务器异常后的重试次数。0 为不重试，负数为无限重试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>retry_interval&lt;/code>：重试间隔，单位为秒。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>acl&lt;/code>：分流规则。通过一系列语法决定访问指定「端点」的流量是否是用代理。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>mmdb&lt;/code>：MaxMind IP 库。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>obfs&lt;/code>：混淆密码。与服务端保持一致。一般不必混淆通信。若开启混淆，极端情况下会略微影响性能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>auth&lt;/code> | &lt;code>auth_str&lt;/code>：认证类型，其值通常称为「认证载荷」。二选一，与服务端保持一致。&lt;code>auth&lt;/code> 为 BASE64 验证密钥，&lt;code>auth_str&lt;/code> 为自定义的认证字符串。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>alpn&lt;/code>：QUIC TLS ALPN。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>server_name&lt;/code>：服务器名称指示，用于验证服务端的 hostname。填写服务端域名既可（申请证书时解析的域名）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>insecure&lt;/code>：允许不安全的连接。禁用证书检查，启用后该配置安全性相当于明文。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ca&lt;/code>：自定义证书（链）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>recv_window_conn&lt;/code>：QUIC 连接接收窗口。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>recv_window&lt;/code>：QUIC 流接收窗口。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>disable_mtu_discovery&lt;/code>：禁用路径MTU发现。此处的 &lt;code>mtu_discovery&lt;/code> 指的是 &lt;a class="link" href="https://en.wikipedia.org/wiki/Path_MTU_Discovery" target="_blank" rel="noopener"
>Path MTU Discovery(PMTUD)&lt;/a>。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『Blog』V2rayN 配置 Hysteria</title><link>https://blog.echosec.top/p/v2rayn-hysteria-tutorial/</link><pubDate>Tue, 05 Apr 2022 23:42:34 +0800</pubDate><guid>https://blog.echosec.top/p/v2rayn-hysteria-tutorial/</guid><description>&lt;img src="https://blog.echosec.top/p/v2rayn-hysteria-tutorial/3593983.jpg" alt="Featured image of post 『Blog』V2rayN 配置 Hysteria" />&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>截至本文最后更新时间 &lt;code>2022-08-24&lt;/code> ，该解决方案仍处于测试阶段，未来短期内会有大量的版本更新，请注意甄别本文中可能过时的内容，谨慎参考。&lt;/p>
&lt;p>本文涉及到的开源项目如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">项目名&lt;/th>
&lt;th style="text-align:center">发行版本号&lt;/th>
&lt;th style="text-align:center">用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/HyNetwork/hysteria" target="_blank" rel="noopener"
>HyNetwork/hysteria&lt;/a>&lt;/td>
&lt;td style="text-align:center">v1.2.0&lt;/td>
&lt;td style="text-align:center">代理核心&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/2dust/v2rayN" target="_blank" rel="noopener"
>2dust/v2rayN&lt;/a>&lt;/td>
&lt;td style="text-align:center">v5.32&lt;/td>
&lt;td style="text-align:center">图形化客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a class="link" href="https://github.com/emptysuns/Hi_Hysteria" target="_blank" rel="noopener"
>emptysuns/Hi_Hysteria&lt;/a>&lt;/td>
&lt;td style="text-align:center">v0.4.0&lt;/td>
&lt;td style="text-align:center">服务端安装脚本&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意&lt;/strong> 本文不面向零基础的小白读者，开始前，请确保你已了解 v2rayN 的基本用法，备有一台国外 VPS 以及可解析的域名，最后你需要了解基本的 Linux 操作指令用以解决本文尚未提及的偶发性异常。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;p>以 V2rayN 图形客户端为例，介绍在 Windows 上启动 hysteria 客户端的具体方法。&lt;/p>
&lt;h3 id="前期准备">前期准备&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>关闭服务器防火墙&lt;/p>
&lt;/li>
&lt;li>
&lt;p>域名解析，关闭 CDN&lt;/p>
&lt;/li>
&lt;li>
&lt;p>关闭冲突服务&lt;/p>
&lt;p>若服务器此前运行过或正在运行 xray-core 及其他代理核心服务，你需要先暂停或关闭这些服务。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> hysteria 与 xray-core 等服务并不冲突，可以同时运行，此处关闭仅为控制查错变量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更新 v2rayN 客户端至最新版&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="linux-服务端配置">Linux 服务端配置&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>通过脚本拉取基础设施&lt;/p>
&lt;p>如下指令需要在 &lt;code>superuser env&lt;/code> 下执行，使用 &lt;code>sudo su root&lt;/code> 切换至管理员上下文（如有必要）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bash &amp;lt;&lt;span class="o">(&lt;/span>curl -fsSL https://git.io/hysteria.sh&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>脚本配置&lt;/p>
&lt;p>在弹出的菜单中选择「安装 hysteria」。首次安装后，可通过全局脚手架指令 &lt;code>hihy&lt;/code> 调出菜单。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置介绍&lt;/p>
&lt;blockquote>
&lt;p>此处仅描述脚本运行所涉及到的基础配置项，更多高级参数详见 &lt;a class="link" href="../hysteria-advanced" >高级配置&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>域名&lt;/strong>：输入解析到本服务器 IP 的域名即可，解析前不可开启 CDN 。另外，确保已处理「前期准备」否则后续步骤必然报错。&lt;/p>
&lt;p>&lt;strong>端口：&lt;/strong> 无特殊要求，按回车随机选取即可。&lt;/p>
&lt;p>&lt;strong>协议类型：&lt;/strong> 经本人测试，仅有 &lt;code>wechat-video&lt;/code> 能够较好地兼容 &lt;code>v2rayN&lt;/code> 运行，其他协议类型大概率不可用（留意时效性）。&lt;/p>
&lt;p>&lt;strong>转发延迟：&lt;/strong> 在本地调出控制台，&lt;code>ping&lt;/code> 服务器 IP，执行 3 轮，每轮间隔 5 秒，取平均值即可。服务对此项配置并不敏感，保持在相交于真实值略低的区间即可（留意时效性）。&lt;/p>
&lt;p>&lt;strong>下行速度：&lt;/strong> 限制每个客户端的最大下载速率（mbps）。留有 1.25 倍的冗余，也即填入 50，最后配置为 62.5。此项不宜过大，否则会导致客户端频繁遇到「Google reCAPTCHA 异常流量」的提示。&lt;/p>
&lt;p>取&amp;lt;本地带宽理想值&amp;gt;以及&amp;lt;服务器带宽上限&amp;gt;的最小值，如服务器限速 100mbps，这里填 100 即可，若服务器带宽上限严重溢出，根据本地带宽取值。如：家宽 300Mbps 但你在阳台用笔记本的 WIFI 上网，实际网速可能只有 50Mbps ，这里填什么？好吧我也不知道，影响网速的东西可太多了Orz，一般情况下个人使用填 100 足足有余。&lt;/p>
&lt;p>&lt;strong>上行速度：&lt;/strong> 限制每个客户端的最大上传速率（mbps），同「下行速度」。&lt;/p>
&lt;p>&lt;strong>认证口令：&lt;/strong> 输入一串用于身份认证的指令， 如 &lt;code>fuck me till the daylight&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>复制输出&lt;/p>
&lt;p>脚本解析结束后会打印客户端的 &lt;code>json&lt;/code> 配置信息以及 &lt;code>Shadowrocket/Sagernet/Passwall&lt;/code> 一键链接。此处，你需要复制其中的 &lt;code>json&lt;/code> 配置信息。&lt;/p>
&lt;p>上述的「一键链接」是以 &lt;code>hysteria://&lt;/code> 打头的分别可用于 iOS/Andoid/软路由等嵌入式设备进行代理的 &lt;a class="link" href="https://github.com/HyNetwork/hysteria/wiki/URI-Scheme" target="_blank" rel="noopener"
>URI Scheme&lt;/a>。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="windows-客户端配置">Windows 客户端配置&lt;/h3>
&lt;p>操作前，请确保你的 v2rayN 客户端已更新至最新版本。&lt;/p>
&lt;h4 id="下载-hysteria-core">下载 &lt;code>hysteria-core&lt;/code>&lt;/h4>
&lt;p>访问 &lt;a class="link" href="https://github.com/HyNetwork/hysteria/releases" target="_blank" rel="noopener"
>hysteria releases&lt;/a>，在「Assets」找到最新版本的&lt;code>hysteria-tun-windows-6.0.amd64.exe&lt;/code>，下载。文件名随着时间推移可能会有所变更，留意时效性。&lt;/p>
&lt;h4 id="下载-hihy-分流文件">下载 &lt;code>hihy&lt;/code> 分流文件&lt;/h4>
&lt;p>访问 &lt;a class="link" href="https://github.com/emptysuns/Hi_Hysteria/releases" target="_blank" rel="noopener"
>hihy releases&lt;/a>，在「Assets」找到最新版的压缩文件，如 &lt;code>v2rayN-hysteriaCore.rar&lt;/code>，下载解压。这个包中的文件我们只会用到 &lt;code>acl&lt;/code> ，此处先按下不表。&lt;/p>
&lt;h4 id="启动-v2rayn-添加自定义配置服务器">启动 &lt;code>v2rayN&lt;/code> 添加自定义配置服务器&lt;/h4>
&lt;ol>
&lt;li>在界面的「服务器」一栏中选择「添加自定义配置服务器」。&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220406004646824.png" alt="image-20220406004646824" style="zoom:50%;" />&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>在「自定义配置中」点击「预览」，弹出一个窗口，&lt;strong>访问 v2rayN 的项目根目录&lt;/strong>。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>将 &lt;code>hihy&lt;/code> 中的 &lt;code>acl&lt;/code> 文件夹以及 &lt;code>hysteria-tun-windows-6.0.amd64.exe&lt;/code> 拖入到此窗口中（也即拖入到 v2rayN 的根目录下）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 v2rayN 的根目录下选中 &lt;code>config.json&lt;/code>模版文件，点击 &lt;strong>「打开」&lt;/strong> 自动拷贝一份配置文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在自定义配置窗口下点击 &lt;strong>「编辑」&lt;/strong>，弹出 UUID 源文件窗口，将刚才复制的 &lt;code>json&lt;/code> 配置信息复制进来。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> 若你使用 &lt;code>hihy v3.7+&lt;/code> 版本，自动生成的客户端配置（http，socks5）已自动适配 v2rayN 的系统代理监听端口，无需更改。&lt;/p>
&lt;p>&lt;strong>Modify listen port&lt;/strong>。将 &lt;code>http&lt;/code> 以及 &lt;code>socks5&lt;/code> 字段改为如下内容。也即将 &lt;code>http&lt;/code> 监听端口改为 10809，将 &lt;code>socks5&lt;/code> 监听端口改为 &lt;code>10808&lt;/code>（对接 v2rayN 的端口配置即可）。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;listen&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:10809&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;timeout&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;disable_udp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;socks5&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;listen&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:10808&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;timeout&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;disable_udp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>&lt;strong>Select Core Type&lt;/strong>。修改端口后保存并关闭配置文件。回到此处，在「Core 类型」中选择 &lt;code>hysteria&lt;/code> ，确定，保存。完整配置后的参考截图如下：&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;div align="center"> &lt;img src="image-20220406010435991.png" alt="image-20220406010435991" style="zoom:50%;" />&lt;/div>
&lt;div align="center"> &lt;img src="image-20220501175014854.png" alt="image-20220501175014854" style="zoom:45%;" />&lt;/div>
&lt;h4 id="连接测试">连接测试&lt;/h4>
&lt;p>选中新加入的代理服务器并启动系统代理。若配置正常，即可正常访问互联网。&lt;/p>
&lt;h3 id="可选-socks5-系统代理">[可选] Socks5 系统代理&lt;/h3>
&lt;p>这里介绍一种通用的客户端代理方法，同样是凭借 v2rayN 图形化客户端启动 hysteria 代理。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>修改节点客户端配置&lt;/strong>&lt;/p>
&lt;p>以同样的方法打开 uuid 配置文件，将 http 的监听配置删去，修改 socks5 的监听端口，建议不与常见端口冲突，如可设为 &lt;code>8889&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>启动 hysteria 服务&lt;/strong>&lt;/p>
&lt;p>从 v2rayN 根目录启动 shell，运行 hysteria 服务，配置文件在“当前目录”的 &lt;code>guiConfigs&lt;/code> 文件夹下。&lt;/p>
&lt;p>假设 v2rayN 根目录路径为 &lt;code>C:\v2rayn&lt;/code>，hysteria 文件名为 &lt;code>hysteria-tun-windows-6.0.amd64.exe&lt;/code>，节点客户端配置文件名为 &lt;code>UUID.json&lt;/code>，那么可以假设的命令行如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\\&lt;/span>v2rayn&amp;gt; hysteria-tun-windows-6.0.amd64.exe -c guiConfigs&lt;span class="se">\\&lt;/span>UUID.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>运行成功后可以看到如下输出日志，说明服务启动成功。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">时间 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>addr:服务端IP:服务端port&lt;span class="o">]&lt;/span> Connected
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">时间 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>addr:127.0.0.1:8889&lt;span class="o">]&lt;/span> SOCKS5 server up and running
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>添加 Socks5 服务器&lt;/strong>&lt;/p>
&lt;p>唤出 v2rayN 主界面，右键空白处，在弹出的菜单中选择「添加 Socks 服务器」。&lt;/p>
&lt;p>以上文所述内容为例，此处分别在地址（address）以及端口（port）处填写 127.0.0.1 以及 8889，别名（remarks）随意，其余不动。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> 如果你额外设置了用户名及密码，在配置窗口中对应填写即可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>连接测试&lt;/strong>&lt;/p>
&lt;p>选中刚创建的类型为「Socks」的 &lt;code>inner-hysteria&lt;/code> “套娃节点”，启动系统代理，以你喜欢的方式运行一系列的指标检测。&lt;/p>
&lt;p>值得一提的是，使用本方法在 v2rayN 中添加的配置项，可以使用 v2rayN 内置的测速功能（如真延迟，速度测试等），而根据上一节创建的类型为「Custom」的节点则不行（留意时效性）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>组合推荐&lt;/strong>&lt;/p>
&lt;p>通常情况下推荐使用 2.3 介绍的方法直接添加服务器。&lt;/p>
&lt;p>如果你依赖 v2rayN 的内置工具完成一些必要的测试工作，我建议你将指向同一个服务端的客户端配置文件分写，既使用完整的配置用于直接启动 hysteria 客户端代理，另起一个配置文件仅用于添加 Socks5 服务，在需要测速时按照 2.4.2 中介绍的方法手动运行 hysteria 服务，最后进行测速。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="speedtest-测试">Speedtest 测试&lt;/h2>
&lt;p>本人使用多个代理节点进行对比测试后发现，&lt;code>hysteria&lt;/code> 对素质较差的代理节点有较大提升，尤其在网络拥堵时间段。如下测试仅为不严谨的「玄学对比定性分析」，请忽视各种所谓的「测不准」因素。&lt;/p>
&lt;p>以下测试中，左组均使用 &lt;code>hysteria-core&lt;/code> 进行 100Mbps 下行，10Mbps 上行的带宽限制（有 1.25 倍冗余溢出）；右组均使用 &lt;code>xray-core&lt;/code> ，拥塞算法 &lt;code>bbr&lt;/code>，队列算法 &lt;code>fq&lt;/code>。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>VPS/Solution&lt;/th>
&lt;th>hysteria-core &amp;amp;&amp;amp; wechat-video&lt;/th>
&lt;th>xray-core &amp;amp;&amp;amp; Trojan TLS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>CloudPowerall&lt;/strong>&lt;/td>
&lt;td>&lt;img src="image-20220406011708210.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom:33%;" />&lt;/td>
&lt;td>&lt;img src="image-20220406011721458.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom:33%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Racknerd&lt;/strong>&lt;/td>
&lt;td>&lt;img src="image-20220406012005041.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom:33%;" />&lt;/td>
&lt;td>&lt;img src="image-20220406011947154.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom:33%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PacificRack&lt;/strong>&lt;/td>
&lt;td>&lt;img src="12992967224.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom:49.8%;" />&lt;/td>
&lt;td>&lt;img src="12992984222.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom:49.8%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>BandwagonHost&lt;/strong>&lt;/td>
&lt;td>&lt;img src="12993007120.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom:49.8%;" />&lt;/td>
&lt;td>&lt;img src="12993019859.png" alt="xray-core &amp;&amp; VLESS TCP XTLS-direct " style="zoom:49.8%;" />&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="youtube-测试">Youtube 测试&lt;/h2>
&lt;p>如下测试使用同上文一样的限制策略。&lt;/p>
&lt;p>测试方法是，播放 Youtube 视频 &lt;a class="link" href="https://www.youtube.com/watch?v=linlz7-Pnvw&amp;amp;t=79s&amp;amp;ab_channel=8KWorld" target="_blank" rel="noopener"
>Switzerland in 8K ULTRA HD HDR - Heaven of Earth (60 FPS) - YouTube&lt;/a> ，播放源 &lt;code>7680x4320@60&lt;/code> ， 从 1:30 持续播放至 2:50，取 2:50 时刻的截图（在这段时间内我会关注连接速度的取值，如果截停瞬间出现了偏离正常区间的异常数值，我会剔除这个样本并继续播放视频 1~2s 并取位于正常区间或附近的正常值）。不同节点和代理策略切换时，使用控制台清除本地缓存。测试时间段并非晚高峰。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>VPS/Solution&lt;/th>
&lt;th>xray-core &amp;amp;&amp;amp; Trojan TLS&lt;/th>
&lt;th>hysteria-core &amp;amp;&amp;amp; wechat-video&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>CloudPowerall&lt;/strong>&lt;/td>
&lt;td>&lt;img src="clone-vless.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom: 67%;" />&lt;/td>
&lt;td>&lt;img src="clone-hysteria.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom: 67%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Racknerd&lt;/strong>&lt;/td>
&lt;td>&lt;img src="rn-vless.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom: 67%;" />&lt;/td>
&lt;td>&lt;img src="rn-hysteria.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom: 67%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PacificRack&lt;/strong>&lt;/td>
&lt;td>&lt;img src="pack-trojan.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom: 67%;" />&lt;/td>
&lt;td>&lt;img src="pack-hysteria.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom: 67%;" />&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>BandwagonHost&lt;/strong>&lt;/td>
&lt;td>&lt;img src="bwg-vless.png" alt="xray-core &amp;&amp; Trojan TLS" style="zoom: 67%;" />&lt;/td>
&lt;td>&lt;img src="bwg-hihy.png" alt="hysteria-core &amp;&amp; wechat-video" style="zoom: 67%;" />&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>『Blog』Epic Awesome Gamer</title><link>https://blog.echosec.top/p/epic-awesome-gamer/</link><pubDate>Fri, 28 Jan 2022 23:45:18 +0800</pubDate><guid>https://blog.echosec.top/p/epic-awesome-gamer/</guid><description>&lt;img src="https://blog.echosec.top/p/epic-awesome-gamer/pexels-pixabay-219552.jpg" alt="Featured image of post 『Blog』Epic Awesome Gamer" />&lt;h2 id="backstory">Backstory&lt;/h2>
&lt;p>&lt;strong>🔨 分享一个有关立项的故事。&lt;/strong>&lt;/p>
&lt;p>去年月底某友在群里分享了一个他自己 fork 的 &lt;code>epicgames-claimer&lt;/code> 的项目，添加了 &lt;code>Actions&lt;/code> 的特性，能够借助工作流实现定时领周免的需求（非滥用），高能现场如下：&lt;/p>
&lt;div align="center">&lt;img src="image-20220129002530922.png" alt="image-20220129002530922" style="zoom:50%;" />&lt;/div>
&lt;p>当时我正在搓其他项目的代码，甚至还没点开这个链接，只是感觉这个点子感觉挺“曼妙”的，仅仅是留下印象而已。但巧就巧在- -我当时正在搓的项目是与 &lt;code>anti-CAPTCHA&lt;/code> 密切相关的任务。&lt;/p>
&lt;p>直到今年年初，1月14日左右，项目告一段落，有了阶段性的积累，对整个领域的技术模块和特性有了充足的了解（其实非常浅嗯）。在一次无意间的检索中 ，以&lt;code>CAPTCHA&lt;/code> 为关键词又重新搜到了这个项目（原来 Epic 真的可以免费领取游戏！用了老半年的 Epic Games Launcher 都没发现同一个客户端还有个游戏库的选项）。&lt;/p>
&lt;div align="center">&lt;img src="122922274-bb263b00-d363-11eb-8b82-8a3ed6e7e29d.png" alt="122922274-bb263b00-d363-11eb-8b82-8a3ed6e7e29d" style="zoom:50%;" />&lt;/div>
&lt;p>我翻了翻“评论区”，情况不太乐观- -不少玩家反应 &lt;code>CAPTCHA&lt;/code> 阻挡验证的问题，但维护者疏于忙碌，暂时无暇升级项目，同样的报错议题已经累积的一个月之久。车祸现场如下：&lt;/p>
&lt;div align="center">&lt;img src="IMG_20220120_015744.jpg" alt="IMG_20220120_015744" style="zoom: 25%;" />&lt;/div>
&lt;p>当时想着自己对人机挑战略知一二，便翻起了项目源码，看看大佬是如何梳理整个业务流程的。&lt;/p>
&lt;p>但很遗憾&amp;hellip;&amp;hellip;这项工作持续不到 10 分钟我就放弃了。我用成分分析工具解剖了核心业务类&lt;code>EpicgamesClaimer()&lt;/code> 后发现，这个看似朴实无华的玩意，竟然塞进了 59 个类方法，还放入了意义不明的 &lt;code>async&lt;/code> 事件循环，大概情况如下图所示：&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843.png"
width="3840"
height="1998"
srcset="https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843_hu3ba0a31ffbc0b0e3870be7f2f8b557db_997869_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/epic-awesome-gamer/image-20220129010800843_hu3ba0a31ffbc0b0e3870be7f2f8b557db_997869_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="461px"
>&lt;/p>
&lt;p>（os：没有讥讽的意思，这里表露的只是我当时的第一反应，确实没见过这样的场面-。-&lt;/p>
&lt;p>至此，一个重头构写「Epic免费人」的想法诞生了。但起初，我是奔着 &lt;code>hCaptcha challenge&lt;/code> 去的，刚积累了这么多料子，正好遇到一个可以练手的挑战，不趁热打铁怎么行，于是我在该楼层下烙下一句“问题不大”后，创建了一个空白仓库，开始设计新项目的技术模型。&lt;/p>
&lt;p>🤦‍♂️emmm&amp;hellip;现在是北京时间 2022-01-29 01:23 博客写到这的时候发现这个仓库被封掉了……真是一言难尽。&lt;/p>
&lt;h2 id="little-changes">Little changes&lt;/h2>
&lt;p>🍜 分享一些本项目中有关「人机挑战」的重点与难点。&lt;/p>
&lt;h3 id="undetected-flow">Undetected Flow&lt;/h3>
&lt;p>📋 &lt;strong>要处理 &lt;code>hCaptcha challenge&lt;/code> 首先要有可以隐藏控制特征的自动化技术。&lt;/strong>&lt;/p>
&lt;h4 id="preview">Preview&lt;/h4>
&lt;p>如果读者和 &lt;code>CAPTCHA&lt;/code> 打交道的时间不够长但又刚好会一点浏览器自动化技术，你可能会抢答“这个反爬用普通的伪装过不去，必须用浏览器自动化！”，大概率是这样，但不够精确，应该改成“无定向的浏览器自动化”技术。&lt;/p>
&lt;p>咱们做个小测试，分别以手动，编写 &lt;code>selenium&lt;/code> 脚本，以及 &lt;code>selenium headless&lt;/code> 脚本的形式访问这个链接 &lt;a class="link" href="https://bot.sannysoft.com/" target="_blank" rel="noopener"
>https://bot.sannysoft.com/&lt;/a> 。&lt;/p>
&lt;p>手工打开的浏览器是我们所谓的“正常特征”，如下图所示（页面中还有很多的参数项，篇幅有限就不多展示了）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129014108862.png" alt="image-20220129014108862" style="zoom:50%;" />&lt;/div>
&lt;p>使用默认参数启动的浏览器会有很多被标红的“异常特征”，如下图所示（页面中还有很多的参数项，篇幅有限就不多展示了）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129014842157.png" alt="image-20220129014842157" style="zoom:80%;" />&lt;/div>
&lt;p>接下来，您可以复制如下代码进行&lt;strong>无头访问&lt;/strong>，并以截图的形式检查回馈参数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">webdriver_manager.chrome&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ChromeDriverManager&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path_screenshot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;stander_headless.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ChromeOptions&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headless&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChromeDriverManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">log_level&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">install&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Chrome&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://bot.sannysoft.com/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save_screenshot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startfile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试结果截图如下：&lt;/p>
&lt;div align="center">&lt;img src="image-20220129015441536.png" alt="image-20220129015441536" style="zoom: 67%;" />&lt;/div>
&lt;p>是不是感觉很惊讶？还在以为其实浏览器自动化可以胜任爬虫的工作吗？&lt;/p>
&lt;p>&lt;code>Selenium Documentation&lt;/code> 中也明确说道，浏览器自动化工具用于爬虫业务并不符合最佳实践的要求，因为 WebDriver 的特征检测技术老早就普及使用了，几乎是和 &lt;code>selenium&lt;/code> 同个时代的技术。&lt;/p>
&lt;p>这时候有的读者可能会说，我们可以添加 &lt;code>ChromeOptions()&lt;/code> 呀。好的，现在尽你所致，把你知道的所有参数都加上，再次访问。你也许会发现表格上的“正常特征”会越来越多（截图展示的仅是部分参数），这是一件好事吗？我们先按下不表，但你是否发现，无论你怎么努力，表格中 &lt;code>WebDriver&lt;/code> 一项始终是“异常的”。好的，现在我明确告诉你，截图中的 &lt;code>WebDriver&lt;/code> 是识别控制流量的关键指标。&lt;/p>
&lt;p>这也解释了为什么处理 &lt;code>CAPTCHA&lt;/code> 要先解决 &lt;code>undetected flow&lt;/code> 的问题。现代化的人机验证都会通过前置的 &lt;code>JavaScript&lt;/code> 脚本捕获用户的页面控制轨迹，一旦驱动的 &lt;code>WebDriver&lt;/code> 指标亮起，你的一切后续操作都是徒增功耗，即使人机挑战“通过”，你也无法获取正确的身份令牌。&lt;/p>
&lt;h4 id="solution">Solution&lt;/h4>
&lt;p>兜了这么大的圈子，这里要介绍一个在业界几乎没有竞品的项目 &lt;a class="link" href="https://github.com/ultrafunkamsterdam/undetected-chromedriver" target="_blank" rel="noopener"
>undetected-chromedriver&lt;/a>。通过它，我们可以安全地隐藏驱动控制特征，将我们所有的业务逻辑安全地送到人机挑战页面。关于这个项目的特性我会另开博客详细介绍，其中大有门道。&lt;/p>
&lt;p>此处，你可以通过如下引导快速复现一个“无踪环境”，并得到驱动测试参数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pip install undetected-chromedriver&lt;span class="o">==&lt;/span>3.1.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Time : 2022/1/27 6:02&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Author : QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github : https://github.com/QIN2DIM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Description:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">undetected_chromedriver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Chrome&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path_screenshot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;undetected_headless.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">headless&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://bot.sannysoft.com/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save_screenshot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startfile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_screenshot&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;strong>undetected-chromedriver 无头启动&lt;/strong>&lt;/p>
&lt;p>可以看到，我们在不指定任何参数的情况下，&lt;code>WebDriver&lt;/code> 指标是正常的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;img src="image-20220129022219302.png" alt="Undetected 无头启动" style="zoom:50%;" />
&lt;ul>
&lt;li>
&lt;p>&lt;strong>undetected-chromedriver 正常启动&lt;/strong>&lt;/p>
&lt;p>在正常启动且不指定任何可选参数的情况下，&lt;code>WebDriver&lt;/code> 指标是正常的，不仅如此，其他所有的主要特征都通过了验证，和我们手动打开网站得到的结果几乎是一样的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20220129022411626.png" alt="Undetected 正常启动" style="zoom:50%;" />&lt;/div>
&lt;h4 id="trouble">Trouble&lt;/h4>
&lt;p>到此阶段，我们可以回顾一下 &lt;code>EpicgamesClaimer&lt;/code> 项目中遇到的第一个困难，那便是整个项目与 &lt;a class="link" href="https://github.com/puppeteer/puppeteer" target="_blank" rel="noopener"
>Puppeteer&lt;/a> 强绑定，维护者几乎为每一个原子操作都做了修饰封装，而 &lt;code>puppeteer&lt;/code>（也可称 &lt;a class="link" href="https://pypi.org/project/pyppeteer/" target="_blank" rel="noopener"
>pyppeteer&lt;/a>） 与 &lt;code>Selenium&lt;/code> 一样都是主流的自动化测试框架，并不具备隐秘特征的能力。所以，维护者几乎只能基于 &lt;code>pyppeteer&lt;/code> 的生态寻找类似的解决方案，或基于 &lt;code>pyppeteer&lt;/code> 底层特性寻找突破口，或选择 &lt;code>undetected-chromedriver&lt;/code> 嫁接开发。但无论选择哪一种，代价都是极其惨痛的。&lt;/p>
&lt;h3 id="threat-level">Threat Level&lt;/h3>
&lt;p>📋 正所谓「知己知彼百战不殆」，在硬刚人机挑战之前，我们得先知道 &lt;code>hCaptcha challenge&lt;/code> 的运作逻辑，以及「验证通过」「威胁等级」如何定义，我们才能优雅地通过测试，并将挑战模块无缝地衔入到主线业务中去。&lt;/p>
&lt;p>感兴趣的朋友可以参考一下 M. I. Hossen 等人的攻击方法 &lt;a class="link" href="https://ieeexplore.ieee.org/document/9474292" title="M. I. Hossen and X. Hei, &amp;amp;quot;A Low-Cost Attack against the hCaptcha System,&amp;amp;quot; 2021 IEEE Security and Privacy Workshops (SPW), 2021, pp. 422-431, doi: 10.1109/SPW53761.2021.00061."
target="_blank" rel="noopener"
>doi: 10.1109/SPW53761.2021.00061.&lt;/a>&lt;/p>
&lt;p>文章里详细介绍了人机挑战的前世今生以及当下主流的人机挑战形式；总结了 &lt;code>hCaptcha&lt;/code> 差异特性，并简要说明了一些 &lt;code>element&lt;/code> 的获取思路与模型训练的实验步骤。点击快速打开 &lt;a class="link" href="https://conferences.computer.org/sp/pdfs/spw/2021/893400a422.pdf" title="论文PDF"
target="_blank" rel="noopener"
>PDF&lt;/a> 预览文章。&lt;/p>
&lt;h4 id="preview-1">preview&lt;/h4>
&lt;p>其中有一些值得注意的现象，在论文摘要中作者写道：&lt;/p>
&lt;blockquote>
&lt;p>We evaluate our system against 270 hCaptcha challenges from live websites and demonstrate that it can solve them with &lt;strong>95.93% accuracy&lt;/strong> while taking only &lt;strong>18.76 seconds&lt;/strong> on average to crack a challenge. We run our attack from a docker instance with only 2GB memory (RAM), 3 CPUs, and no GPU devices, demonstrating that it requires minimal resources to launch a successful large-scale attack against the hCaptcha system.&lt;/p>
&lt;/blockquote>
&lt;p>在正文中作者详细解析了数据组成：&lt;/p>
&lt;blockquote>
&lt;p>&amp;hellip;Our deep learning classifier (the Solver) takes &lt;strong>3.79 seconds&lt;/strong> to classify the images (&lt;strong>usually 9&lt;/strong>) in a challenge, on average&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>然后奉上了图3，作者将业务耗时拆分成浏览器自动化的耗时以及图像分类任务的耗时，可以发现浏览器控制用的时间占了一次业务中的绝大部分（符合常识）。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129033424831.png" alt="image-20220129033424831" style="zoom:67%;" />&lt;/div>
&lt;p>但其实我是蛮疑惑的，首先是这个 &lt;code>3.79s&lt;/code> 的数据是如何算出来的。我们处理 &lt;code>hCaptcha&lt;/code> 一般有两轮验证一共 18 张图而这里用了&lt;code> usually 9&lt;/code>；其次，当我们的威胁等级足够低时，我们甚至会在激活 &lt;code>checkbox&lt;/code> 后跳过人机挑战。&lt;/p>
&lt;p>然后是 &lt;code> 18.76s&lt;/code> 的平均总耗时其实也是实验条件下的结果，至少拿 Epic 更新身份令牌的行为来说，我们启动「挑战者驱动」可能就要用 15s 。文章中的浏览器操作耗时的具体行为包括「初始化挑战（进入页面加载页面）」「与 &lt;code>checkbox&lt;/code> 交互并激活挑战」「提交挑战」以及「验证挑战是否成功」，忽视了最耗时的图片下载过程，其次在验证挑战是否成功环节，真实业务场景需要进行非常复杂的元素断言，而在实验环境下几乎只用判断按钮是否能继续点就可以（排除判断）说明挑战是否成功。&lt;/p>
&lt;blockquote>
&lt;p>We found that hCaptcha often repeats images across different challenges. We computed the MD5 hashes of &lt;strong>48330 images collected from the hCaptcha challenges&lt;/strong> during our analysis and identifified 9854 redundant images belonging to 1985 sets of identical images.&lt;/p>
&lt;/blockquote>
&lt;p>作者后文说道，他们发现挑战中经常遇到重复的图片，于是用了感知哈希判断在多伦测试中攒下来的图片中有多少重复的。真够狠的爬了五千多次。。&lt;/p>
&lt;h4 id="solution-1">Solution&lt;/h4>
&lt;h3 id="synergy-framework">Synergy framework&lt;/h3>
&lt;p>&lt;strong>📋 协同框架立大功！&lt;/strong>&lt;/p>
&lt;h4 id="preview-2">preview&lt;/h4>
&lt;p>根据上文可知，&lt;code>CAPTCHA&lt;/code> 一般都设有时间限制，一段时间内未通过测试页面元素就会自主刷新过时。我们知道，下载图片恰巧是个经典的网络I/O耗时场景。因此，我不由地想到利用协程技术缩短人机挑战的耗时，提高容错。&lt;/p>
&lt;h4 id="solution-2">Solution&lt;/h4>
&lt;ol>
&lt;li>&lt;strong>轻量可移植的协同任务框架&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>在本项目 &lt;code>utils &lt;/code>中存放着一个轻量化的 &lt;code>Synergy framework &lt;/code>，其核心业务代码可见 &lt;a class="link" href="https://github.com/QIN2DIM/epic-awesome-gamer/blob/main/src/services/utils/accelerator/core.py" target="_blank" rel="noopener"
>CoroutineSpeedup()&lt;/a>。打上 &lt;code>monkey&lt;/code> 鸡血补丁后，协同任务开始运作。&lt;/p>
&lt;ol start="2">
&lt;li>&lt;strong>使用 &lt;code>gevent&lt;/code> 而不是 &lt;code>async&lt;/code>&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;code>gevent&lt;/code> 是作者编写 Python 协程的常用方法。相交于 &lt;code>async&lt;/code> ，使用 &lt;code>gevent&lt;/code> 能够更自如地控制模块的布局与业务的上下文联系，不必为了接口的兼容关系割裂本该完整的函数体；从整体上看，这也能让实现同一逻辑的代码更加规范整洁雅观；从 Python 新手来说，&lt;code>gevent&lt;/code> 不需要改动原始代码的逻辑就能实现协同，这给还未深刻理解 &lt;code>async&lt;/code> 的朋友来说降低了很多的理解门槛。借知乎网友的话就是“手动挡和自动挡的区别”，个人觉得是非常真实了。但此处也有个坑，也是本项目目前遇到的最大技术难题，后文细说。&lt;/p>
&lt;ol start="3">
&lt;li>&lt;strong>45路公交与自行车&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>原先的 &lt;code>for loop&lt;/code> 循环下载一轮挑战的 9 张图片的总耗时为每张图片下载耗时之和，而在协同任务中，总耗时为单图的最长耗时，由此极大缩短数据集拉取的时间。&lt;/p>
&lt;p>在 GitHub Actions 里这是一种体感差距，几乎瞬间拉取，如下图所示。&lt;/p>
&lt;div align="center">&lt;img src="image-20220129044934503.png" alt="image-20220129044934503" style="zoom:67%;" />&lt;/div>
&lt;p>而在国内网络条件下，这就是判定挑战能否开启的守门员指标。从本人的网络条件来说，在不开启代理的情况下，300MB 带宽跑满拉取位于国外服务器上的图片，每张图花费将近 10 秒的时间，如果不引入协同下载的概念，光是下载图片我们都要干等一分半，而同样的时间，已能在工作流中结束一次人机挑战了。&lt;/p>
&lt;h2 id="happy-freebie-claiming">Happy Freebie Claiming&lt;/h2>
&lt;h2 id="reference">Reference&lt;/h2></description></item><item><title>『Blog』V2RSS云彩姬最佳实践（阶段Ⅰ）</title><link>https://blog.echosec.top/p/v2rss-best-practice/</link><pubDate>Mon, 13 Dec 2021 22:15:59 +0800</pubDate><guid>https://blog.echosec.top/p/v2rss-best-practice/</guid><description>&lt;img src="https://blog.echosec.top/p/v2rss-best-practice/gcc06ab1cf.jpg" alt="Featured image of post 『Blog』V2RSS云彩姬最佳实践（阶段Ⅰ）" />&lt;h2 id="项目简介与使用指南">项目简介与使用指南&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider" target="_blank" rel="noopener"
>V2RSS&lt;/a> 是一个能对全球范围内基于 &lt;a class="link" href="https://github.com/Anankke/SSPanel-Uim" target="_blank" rel="noopener"
>SSPanel-Uim&lt;/a> 框架产出的服务提供商进行垂直挖掘的「生态矿机」；能够自下而上地生成针对主流协议头的「聚合采集」任务；能够自我消化并产出相较于 &lt;a class="link" href="https://github.com/zu1k/proxypool" target="_blank" rel="noopener"
>proxypool&lt;/a> 更加纯净可靠的代理节点；具备自主发现，服务自愈等强大的生产特性。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>有关云彩姬（panel）的介绍详见 &lt;a class="link" href="https://blog.echosec.top/v2rss-docs/zh/docs/user/v2rss-cli/overview/" target="_blank" rel="noopener"
>技术文档&lt;/a> ，了解软体获取方法以及功能介绍。&lt;/li>
&lt;li>有关云彩姬（public-service）的介绍详见 &lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider" target="_blank" rel="noopener"
>项目仓库&lt;/a>，了解服务部署方法。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="最佳实践">最佳实践&lt;/h2>
&lt;h3 id="synergy与延迟反射机制">Synergy与延迟反射机制&lt;/h3>
&lt;h4 id="简介">简介&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>synergy 在计算机领域中有“协作”“协同”的定义；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>synergy 在大多数情况下 与「延迟反射」一起使用，并称「协同反射」，是一个在 &lt;code>v2rss v4.5.5&lt;/code> 版本中开源的模式；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>synergy 基于集群运行，具备「任务超载」「服务自愈」等高级特性，即使在所谓高峰期也能高效完成协同任务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="特性">特性&lt;/h4>
&lt;p>客户端玩家无需关心「协同反射」的上游实现逻辑。「协同反射」在客户端的表现为：能通过协同注册的方式&lt;del>拉起不可用节点，续订过期链接，&lt;/del> 延拓订阅可用流量，而这种延拓具有一定的延迟回馈。&lt;/p>
&lt;p>也即当您使用客户端请求/获取一条订阅链接并在更新订阅后通过 remark-label 得知订阅可用流量仅有 1GiB/2GiB/几十MiB 时，不必着急质疑上游服务质量，您可以等待一段时间后更新订阅，体会「synergy」机制带来的体验升级——当前订阅的可用流量持续增长（更新订阅后通过 remark-label 观察 ），这个过程将在 30~120s 内完成，可用流量将增长 10GiB+。&lt;/p>
&lt;p>在 &lt;code>v2rss v4.5.6&lt;/code> 服务优化版本中，「延迟」的概念被逐渐淡化。“流量延拓”的行为被桥接至消息队列中，也即每当有新的链接入库，「synergy」机制就会生效 ，为 proxy-pool 中的订阅延拓可用流量。换句话说，大多数情况下，用户获取到的链接的可用流量已被完整“延拓”；仅当需求高峰时，synergy 来不及执行，用户才会获取到“正在被处理”（订阅当前的剩余流量明显不满足日常需求）的订阅链接。&lt;/p>
&lt;h3 id="警惕重用与覆盖">警惕重用与覆盖&lt;/h3>
&lt;h4 id="简介-1">简介&lt;/h4>
&lt;p>&lt;code>v2rss 客户端&lt;/code> 使用 &lt;code>easygui&lt;/code> 编写，是一个纯静态前端面板（这是云彩姬 panel 敏捷开发中的遗留 BUG），即便数据端使用 redis 高速缓存维护 proxy-pool，也无法应对「请求覆盖」等并发需求场景。&lt;/p>
&lt;p>换句话说，用户通过「查看订阅」观察到的订阅列表可能已经变更，可能的改动为：其他用户取链接，上游服务清除无效订阅，此时用户依据可视内容而选取的链接很可能是“已被获取的链接”以及“已被清除的无效链接”。后一种情况较为罕见，而一旦出现前一种情况，就非常麻烦了。绝大多数服务提供商都会限制 low-level 节点的设备并行连接数，这种限流机制通常是通过逻辑脚本进行监听的，当多个IP共享同一订阅并触发断流机制时，代理用户的订阅链接将被重置（轻则流量清零重则删号，这是服务提供商用以防止流量泄露的常用方案）。&lt;/p>
&lt;h4 id="推荐用法">推荐用法&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>使用「快速获取」替代「查询获取」&lt;/p>
&lt;p>快速获取操作依靠 redis 自带的机制运行，具有全局原子性，不会引发上文所述的恶劣情况（redis 常用于百万并发的应用场景，而由云彩姬 panel 的并发量一般情况下不会超过 2 位数，放心使用）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>减少「查询」与「获取」间的衔接用时（🤷‍♂️）&lt;/p>
&lt;p>如上文所述，节点列表反应的并不是 proxy-pool 的实时状态，减少操作衔接用时可以避免获取到“已被其他用户获取”的订阅，但实际上这无法避免这条链接被其他用户获取（也即B用户在你获取订阅前查询 proxy-pool，那么你已获取的链接依然会出现在他的 panel 中，他有 &lt;code>1/pool_siz&lt;/code> 的概率点中你已获取的链接👀）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="user_profiling-与-beat_dance">User_profiling 与 beat_dance&lt;/h3>
&lt;p>采集器会根据群体画像（基于&lt;code>Relative Daily Activity Figures&lt;/code>，&lt;code>Action Value&lt;/code> 以及 &lt;code>Corrected Accuracy&lt;/code>）调整任务的发起顺序（原子概率）。&lt;/p>
&lt;ul>
&lt;li>&lt;code>Relative Daily Activity Figures&lt;/code>：群体喜好与需求量。建立“节点速度”“可用时长”“一次性可用流量区间”等喜好程度标签。&lt;/li>
&lt;li>&lt;code>Action Value&lt;/code>：运行评分，与资源占用率和获取效率有关。&lt;/li>
&lt;li>&lt;code>Corrected Accuracy&lt;/code>：模型会根据实时的需求变动预测下一时间段的需求走向，并根据观测值不断修正并精确画像模型。&lt;/li>
&lt;/ul>
&lt;p>呼吸节拍（beat dance）是一个协调运行实例的上层抽象，它基于定时任务和群体画像（user profiling）生产工作周期稳定，带有“运行时停顿”等行为特征的运行实例。&lt;/p>
&lt;p>以上两个机制共同决定了采集器的启动权限，启动时间，工作时长，运行功率以及运行时各个生命周期间的休眠时间。&lt;/p>
&lt;p>开放使用的 &lt;code>proxy-pool&lt;/code> 容量较低，以减轻不可抗力因素与恶意行为对数据集造成污染。一般情况下 &lt;code>pool-length&lt;/code> ≤ 50 &amp;lt; &lt;code>pool-cap&lt;/code>。&lt;/p></description></item><item><title>『Blog』Python 应用开发最佳实践@环境搭建篇</title><link>https://blog.echosec.top/p/python-best-practices-ide/</link><pubDate>Sat, 13 Nov 2021 15:17:14 +0800</pubDate><guid>https://blog.echosec.top/p/python-best-practices-ide/</guid><description>&lt;img src="https://blog.echosec.top/p/python-best-practices-ide/23591f5.jpg" alt="Featured image of post 『Blog』Python 应用开发最佳实践@环境搭建篇" />&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>本文总结截止至 &lt;strong>2022年06月&lt;/strong>，Python 开发环境的最佳实践（以 Windows 为例）。从大型应用和小型脚本项目两个角度出发提供规范化的环境搭建思路，并尽可能地避免环境搭建中的偶发性 BUG。&lt;/p>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>总体思路如下：&lt;/p>
&lt;ul>
&lt;li>大型项目使用 &lt;a class="link" href="https://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="noopener"
>Pycharm&lt;/a> + &lt;a class="link" href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener"
>Miniconda&lt;/a>搭建开发环境；&lt;/li>
&lt;li>小型脚本项目使用 &lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>Visual Studio Code&lt;/a> 及其自带编译组件搭建开发环境。&lt;/li>
&lt;/ul>
&lt;p>总体上建议打算长期学习 Python 的开发者使用第一种方案，而后一种方案适用于将 Python 作为第二语言（辅助语言），并已完全掌握 VS Code 使用套路的玩家。&lt;/p>
&lt;p>本篇博客的受众可能并不包含完全零基础的小白玩家，任何疑问都可在评论区留言，本人会一一答复。&lt;/p>
&lt;h2 id="pycharm--miniconda">Pycharm + Miniconda&lt;/h2>
&lt;p>两款软件的下载安装是并行的，不必区分先后顺序，可以同时下载安装配置。可在一款软件安装读条时可以操作另一款软件，仅在明文提示需要停顿的地方切换操作。&lt;/p>
&lt;h3 id="install-pycharm-edition">Install Pycharm Edition&lt;/h3>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>总体安装流程可参照 &lt;a class="link" href="https://www.runoob.com/w3cnote/pycharm-windows-install.html" target="_blank" rel="noopener"
>菜鸟教程&lt;/a>（不过也没啥好参照的，Windows 安装就是点「下一步」就完事了）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>官方下载地址 &lt;a class="link" href="https://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="noopener"
>Jetbrains&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>此处以社区版（Community）安装流程说明「需要特殊处理」的步骤，没有说明的地方点击「下一步」既可。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Choose Install Location&lt;/strong>&lt;/p>
&lt;p>选择安装路径。当您的设备区分盘符时，一定选择非系统盘存储。创建一个或选择一个专门用于存储编程工具的文件夹安装 Pycharm，这尤其重要，而且路径中的任意一层不得出现中文，尽量不要出现空格。&lt;/p>
&lt;p>需要额外注意的是，Pycharm 会自动为软件本体包裹一层文件夹（如下图所示的&lt;code>Pycharm Community Edition 2021.2.3&lt;/code>），若你下载的（其他软件）的 Destination Folder 不显示包裹的文件夹名，务必手动创建一个「子文件夹」将其包裹，否则你安装的文件可能会散落到你选择的目录下。若不注意，你的工具文件夹就会被污染，各种配置文件或核心文件散落在文件夹中，后期打扫时动都不敢动。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113152838338.png" alt="image-20211113152838338" style="zoom:67%;" />&lt;/div>
&lt;p>如下图所示为作者常用设备中，「专门用于存储编程工具的文件夹」的内容及存储路径。可见此目录存放于路径 &lt;code>E:\\ProjectFire&lt;/code>（非系统盘+英文路径），此目录下除了 &lt;code>Pycharm&lt;/code> 还存放了其他常用的开发工具，比如下文将要介绍的 &lt;code>Miniconda&lt;/code> 以及 &lt;code>Microsoft VS Code&lt;/code>。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524023055864.png" alt="image-20211113152950647" style="zoom: 50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Installation Options&lt;/strong>&lt;/p>
&lt;p>配置安装选项。以「 2021.2.3 Pycharm Community Edition」 安装面板为例。解释相关配置项的含义及其在开发环境中的具体作用，并给出配置建议。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113153013684.png" alt="image-20211113153013684" style="zoom: 67%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Create Desktop Shortcut&lt;/p>
&lt;p>创建桌面快捷方式。不作建议，开心就好。此处为了操作的连贯性，可以勾选，免得安装完毕后软件本体不自动打开，还得花时间找软件比较麻烦，环境配置完成后可手动删除快捷方式。&lt;/p>
&lt;p>当然若你使用 &lt;a class="link" href="https://u.tools/" target="_blank" rel="noopener"
>uTools&lt;/a> 等优秀的桌面工具，可以无视此段介绍。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Update Context Menu&lt;/p>
&lt;p>更新上下文菜单。当你在文件夹中右键空白处，可在「右键菜单」中选择以当前文件夹为根启动 Pycharm。推荐勾选，这不会影响所谓系统性能，当你想在本地快速阅读某个 GitHub 项目源码时，可在本地空白文件（比如桌面新建文件夹）Clone 代码，然后以此种方式快速启动 Pycharm。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113154026804.png" alt="image-20211113154026804" style="zoom: 50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Update PATH Variable(restart needed)&lt;/p>
&lt;p>将 Pycharm 软体的 「bin 文件」添加至系统环境变量。推荐勾选，重启生效。建议在安装完毕后选择 「I want to manually reboot later」并在 Miniconda 安装配置后一并重启。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create Associations&lt;/p>
&lt;p>创建软链映射，打开 &lt;code>.py&lt;/code> 格式文件时以 Pycharm 作为编辑器启动。不推荐勾选。&lt;/p>
&lt;p>Pycharm 显然不是一个轻量的集成开发环境。当你仅想阅览某个 &lt;code>.py&lt;/code> 文件的代码时，使用 Pycharm 打开并不是个明智的选择，这是个启动速度相对较慢的解决方案。无论是否有其他替代方案，都不建议使用 Pycharm 启动，如果实在不妥，你用记事本打开都行。&lt;/p>
&lt;p>举个不恰当的例子，使用 Pycharm 单独启动某个 &lt;code>.py&lt;/code> 文件，相当于看个 15s 的短视频还要非常弱智地看 15s 广告。当然如果你的设备有 32GB+ 内存，从硬件层面就足以秒开一切 Jetbrains IDE，可以无视此段介绍。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>
&lt;p>&lt;strong>Garbage Collection&lt;/strong>&lt;/p>
&lt;p>安装步骤中不存在这步。此处用于说明我们从官网拉取下来的仅是下载器，当我们使用下载器安装软体后，可将下载器安全移除，回收其占用的空间。&lt;/p>
&lt;p>同样，需要一个良好的习惯，在非系统盘符专门创建一个文件夹管理各个软件进程的「运行缓存」或「下载缓存」。下图路径为作者用于管理浏览器下载缓存的目录，红色箭头的标记目标为下载器本体，可将其安全删除。&lt;/p>
&lt;img src="image-20211113161040326.png" alt="image-20211113161040326" style="zoom:67%;" />
&lt;/li>
&lt;/ol>
&lt;h3 id="pycharm-settings">Pycharm Settings&lt;/h3>
&lt;p>以你喜欢的方式打开刚安装好的 &lt;code>Pycharm Community Edition&lt;/code>。&lt;/p>
&lt;img src="image-20211113164718097.png" alt="image-20211113164718097" style="zoom:50%;" />
&lt;p>此处我们不需要迅速实现所谓「Hello World」打印项目，而应该先着手于调整下文所述的最佳实践配置。&lt;/p>
&lt;p>举个不恰当的例子，就像上了车，我们应当习惯于先调整后视镜，调整座椅，检查各项机能，寄上安全带，调整舒服的坐姿，在车况安全的情况下起步。入门任何技术栈都应当如此，所谓「工欲善其事必先利其器」指的不仅仅是挑选一款强大的工具，更要学会如何充分发挥它的优势，让它成为符合自己使用习惯的生产力伙伴。&lt;/p>
&lt;p>而退一步讲，我们暂时还没有配置 Python 解释器，是无法正常运行 Python 代码的。&lt;/p>
&lt;h4 id="marketplace">Marketplace&lt;/h4>
&lt;p>安装对你来说可以降低这款编辑器使用门槛的必要插件，此处推荐几款作者在日常编码中较为常用的第三方插件。&lt;/p>
&lt;p>请注意，插件的安装或更新在重启软件后生效。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Chinese(Simplified) Language Pack / 中文语言包&lt;/strong>&lt;/p>
&lt;p>此款插件可以汉化 Pycharm，汉化进度与软件最新特性保持一致。在插件市场中检索 「Chinese」既可获取插件。&lt;/p>
&lt;img src="image-20211113165038769.png" alt="image-20211113165038769" style="zoom: 50%;" />
&lt;p>重启软件后，界面汉化。&lt;/p>
&lt;img src="image-20211113165217984.png" alt="image-20211113165217984" style="zoom: 50%;" />
&lt;p>当然，此处需要提个醒，此步骤仅仅是降低「上手门槛」，接触编程必须熟悉常用的领域词汇，当你足够熟悉这些概念的时候，可适时停用此插件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Translation&lt;/strong>&lt;/p>
&lt;p>这是一款能够嵌入在 Pycharm 中的翻译软件，通过它，我们可以实现代码上下文的「划词翻译」「语义文档」等比较方便的功能。&lt;/p>
&lt;p>插件市场中检索「Translation」既可获取。&lt;/p>
&lt;img src="image-20211113165921127.png" alt="image-20211113165921127" style="zoom:50%;" />
&lt;p>如下图所示为该插件上下文「划词翻译」的大致效果：&lt;/p>
&lt;div align="center">&lt;img src="image-20211117214825627.png" style="zoom:50%;" />&lt;/div>
&lt;p>当然也可以反向操作，如下图所示。这是个「可替换缓存」菜单，点击候选项可快速替换选中内容。&lt;/p>
&lt;div align="center">&lt;img src="image-20211117215227331.png" style="zoom:50%;" />&lt;/div>
&lt;p>目前插件支持四种翻译引擎，如下图所示。Google 翻译可以使用免费的 API，当然其他的也是免费的，但需要自行配置 &lt;code>Token &lt;/code> 以及 &lt;code>Secret ID&lt;/code>。插件默认使用 Google 翻译引擎，相关设置可在「设置（Settings）」→「工具（Tools）」→「翻译（Translation）」里设置。&lt;/p>
&lt;div align="center">&lt;img src="image-20211117215423229.png" alt="image-20211117215423229" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h4 id="customize">Customize&lt;/h4>
&lt;p>调整对你来说比较舒服的默认主题样式以及键盘映射。编码是一个耗时费力需要长时间专注的工作，请对你的眼睛好点。&lt;/p>
&lt;div align="center">&lt;img src="image-20211113170341583.png" alt="image-20211113170341583" style="zoom:50%;" />&lt;/div>
&lt;p>推荐使用的 Python 编程字体为 &lt;code>Source Code Pro&lt;/code>，&lt;code>JetBrains Mono&lt;/code>，字号和行距与你的工作条件以及编码风格有关。&lt;/p>
&lt;h4 id="keymap">Keymap&lt;/h4>
&lt;blockquote>
&lt;p>建议作为手册查阅，在开发环境配置成功后回看。（持续更新&amp;hellip;&amp;hellip;）&lt;/p>
&lt;/blockquote>
&lt;p>这里总结了一些 Pycharm 中可以提高生产力的快捷键。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>格式化代码&lt;/strong> &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>Alt&lt;/kbd> + &lt;kbd>L&lt;/kbd>&lt;/p>
&lt;div align="center">&lt;img src="gt323.gif" alt="gt323" style="zoom:50%;" />&lt;/div>
&lt;p>值得一提的是，这与 TIM/QQ/网易云音乐 的默认热键冲突，建议修改这些软件的配置。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>运行上下文程序&lt;/strong> &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd>&lt;/p>
&lt;p>详见下文 Python Interpreter 最佳实践中的 &lt;a class="link" href="#best_run" >「run」&lt;/a>部分介绍。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="other">Other&lt;/h4>
&lt;blockquote>
&lt;p>建议作为手册查阅，在开发环境配置成功后回看。（持续更新&amp;hellip;&amp;hellip;）&lt;/p>
&lt;/blockquote>
&lt;p>这里总结了一些 Pycharm 中可以提高生产力的设置。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>调整粘性内存，加快 Pycharm 响应速度。&lt;/strong>&lt;/p>
&lt;p>在菜单栏中选择 「Help」 → 「Change Memory Settings」&lt;/p>
&lt;div align="center">&lt;img src="image-20211127120842747.png" alt="image-20211127120842747" style="zoom:50%;" />&lt;/div>
&lt;p>如下图所示为作者设置的 &lt;code>Maximun Heap Size：12288MiB&lt;/code> ，参考设备的物理内存为 16GB，根据你自己的情况设置。&lt;strong>此处需要留意 MiB 和 MB 是不一样的计量单位&lt;/strong>，详见 &lt;a class="link" href="https://www.gbmb.org/mib-to-mb" target="_blank" rel="noopener"
>MiB to MB Conversion&lt;/a>。&lt;/p>
&lt;div align="center">&lt;img src="image-20211127121015826.png" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>调整 Code Completion，提高代码补全效率&lt;/strong>&lt;/p>
&lt;p>打开设置，选择 「Editor」→「General」→「Code Completion」，将 &lt;code>Match case&lt;/code> 反选。&lt;/p>
&lt;img src="image-20211127121948279.png" alt="image-20211127121948279" style="zoom:50%;" />
&lt;p>&lt;code>Match case&lt;/code> 根据特征字符进行编码补全。我们反选后，我们的代码中仅需出现目标对象/方法/函数的任意大小写字符仅可触发推荐补全，非常方便。&lt;/p>
&lt;p>Python 编程规范中，习惯上使用大驼峰命名类变量（Class），使用蛇形法命名方法（Method）和函数（function）。&lt;/p>
&lt;ul>
&lt;li>大驼峰：不同单词首字母大写如 &lt;code>CoroutineEngine()&lt;/code>&lt;/li>
&lt;li>蛇形：统一小写不同单词用下划线&lt;code>_&lt;/code>隔开如 &lt;code>handle_html()&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>显然，编码过程中频繁切换大小写很容易把中文输入法给按出来，打断我们的编码思路，是个非常搞心态的事情。&lt;/p>
&lt;p>下图所示即为全特征索引补全的效果。&lt;/p>
&lt;div align="center">&lt;img src="image-20211127122427063.png" alt="image-20211127122427063" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3 id="install-miniconda">Install Miniconda&lt;/h3>
&lt;blockquote>
&lt;p>官网下载 &lt;a class="link" href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener"
>Miniconda — Conda documentation&lt;/a>。在官网 &lt;code>Latest Miniconda Installer Links&lt;/code> 中选择你所使用的操作系统对应的二进制文件。如下未说明的配置项保持默认继续下一步即可。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Choose Install Location&lt;/strong>&lt;/p>
&lt;p>选择安装目录。与上文所述观点一致。我们选择安装目录后，Destination Folder 处并未显示 Miniconda 自带的包裹文件名，为了防止上文所述的「散落污染」问题，我们手动补全自定义文件名包裹安装包，不存在的文件夹会自动创建。&lt;/p>
&lt;p>如下图所示，选择 &lt;code>E:\ProjectFire\&lt;/code> 为安装目录，并手动补全 &lt;code>Miniconda&lt;/code> 包裹文件。建议将 Miniconda 和 Pycharm 放在&lt;u>同一目录&lt;/u>下。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524022858712.png" alt="image-20211113173835527" style="zoom: 67%;" />&lt;/div>
&lt;p>&lt;strong>Advanced Installation Options&lt;/strong>&lt;/p>
&lt;p>勾选 &lt;code>Add Miniconda3 to my PATH environment variable&lt;/code> 以及 &lt;code>Register Miniconda3 as my defaulty Python 3.9&lt;/code>&lt;/p>
&lt;div align="center">&lt;img src="image-20220524023626100.png" alt="image-20220524023626100" style="zoom:67%;" />&lt;/div>
&lt;h3 id="python-interpreter">Python Interpreter&lt;/h3>
&lt;h4 id="new-project">New Project&lt;/h4>
&lt;p>回到 Pycharm，以你喜欢的方式「新建项目」。如下图所示为新建项目所需配置的基本参数：&lt;/p>
&lt;div align="center">&lt;img src="image-20220524024602879.png" alt="image-20211113180327178" style="zoom:50%;" />&lt;/div>
&lt;p>默认情况下，虚拟环境名与我们的项目名保持一致。&lt;/p>
&lt;p>点击确定后，Pycharm 会帮助我们自动创建项目文件，虚拟环境文件，并以项目根目录为源码根启动编码窗口，我们等待环境索引完成后便可进行下一步操作。&lt;/p>
&lt;p>&lt;strong>注意！！&lt;/strong> 若你在执行创建指令的过程中遇到了 &lt;code>CondaHTTPError&lt;/code> ，你需要重启计算机后再回到本教程。&lt;/p>
&lt;p>下图所示为 Pycharm 启动后的界面，图中已标记需要重点关注的组件。&lt;/p>
&lt;img src="image-20220524025816319.png" alt="image-20220524025816319" style="zoom:67%;" />
&lt;h4 id="terminal">Terminal&lt;/h4>
&lt;p>&lt;strong>如何优雅地使用命令行工具？&lt;/strong>&lt;/p>
&lt;p>Pycharm 自带运行终端，通过 「终端（Terminal）」，我们可以自动激活当前 Conda 虚拟环境，并基于当前项目路径运行指令。请不要再根据某些教程的指引单独启动 &lt;code>cmd.exe&lt;/code> ，然后又遇上各种「环境变量配置」或是「命令不存在」的低级问题了。&lt;/p>
&lt;p>点击 Pycharm 界面中的「终端（Terminal）」启动组件（快捷键 &lt;kbd>Alt&lt;/kbd> + &lt;kbd>F12&lt;/kbd>），如下图所示。&lt;/p>
&lt;img src="image-20220524030401515.png" alt="image-20220524030401515" style="zoom:50%;" />
&lt;p>此处需要额外注意的是，我们必须确保「终端使用的虚拟环境」与「聚焦编码区所使用的虚拟环境」保持一致。如上图所示，终端激活的环境名为「base」而当前的聚焦环境是「pythonProject」不一致，需要切换终端使用的虚拟环境。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方案一：点击上图标注的🔽符号切换命令行工具，选择「Command Prompt」。该终端激活后自动附带当前聚焦编码区所使用的虚拟环境。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方案二：若上述方案不起作用，可在当前命令行中输入 &lt;code>conda activate [envName]&lt;/code>，也即当前的开发环境名为「pythonProject」，运行指令 &lt;code>conda activate pythonProject&lt;/code> 切换虚拟环境：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div align="center">&lt;img src="image-20220524030822330.png" style="zoom:50%;" />&lt;/div>
&lt;ul>
&lt;li>
&lt;p>其他情况：若你首次打开的终端中，仅出现了命令行终端的执行路径，未出现括号圈起来的虚拟环境名，按方案二处理即可。&lt;/p>
&lt;div align="center">&lt;img src="image-20220524031140200.png" style="zoom:50%;" />&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么需要关注此步骤？&lt;/strong>&lt;/p>
&lt;p>我们在终端执行 &lt;code>pip&lt;/code> 脚手架指令，对 python 开发依赖的增删改查都是基于当前虚拟环境实现的，不同的虚拟环境的外部资源相互隔离，意味着你在 A 环境中 pip install 安装的依赖，放在 B 环境中不可用。&lt;/p>
&lt;p>绝大多数菜鸟都会遇上「虚拟环境适配问题」引发的偶发性 BUG。例如发现昨天 &lt;code>pip install&lt;/code> 的资源今天 &lt;code>import&lt;/code> 无法找到，这显然是上文提到的问题，既当前聚焦编码区所使用的（未安装指定依赖的）虚拟环境和你已安装指定依赖的虚拟环境不一致。&lt;/p>
&lt;h4 id="run">Run&lt;/h4>
&lt;p>&lt;strong>如何运行第一个 Python 程序？&lt;/strong>&lt;/p>
&lt;p>如下图所示为运行 Python 程序的常用手法。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>run[1]，栈缓存运行。解释器会记住你上一次成功运行的配置并执行配置所关联的 &lt;code>.py&lt;/code> 文件。说人话就是，运行刚跑过的代码。&lt;/p>
&lt;p>这个设定会让许多新手懊恼——「为什么运行结果跟我当前写的东西都不搭噶」。也即编程菜鸟此时已经新建或切换到了另一个 &lt;code>.py&lt;/code> 文件编写代码并点击 run[1] 执行，而此操作却是运行了刚才跑通的代码，这就造成了「输出」不符合预期的假象。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>run[2]，基于上下文运行。在不使用快捷键的情况下，右击代码框，或是右击左侧项目结构下的文件，或是右击代码框顶部的文件元素，都可以弹出如下图所示的菜单栏，点选 run[2] 既可。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;img src="image-20211113190554142.png" alt="image-20211113190554142" style="zoom:50%;" />
&lt;p>&lt;span id="best_run">&lt;/span>&lt;/p>
&lt;p>&lt;strong>如何优雅地运行 Python 程序？&lt;/strong>&lt;/p>
&lt;p>此处建议将「基于上下文运行」的快捷键改成 &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd>，这么一来，在完成编码后我们可以以非常顺手地运行当前聚焦的代码。&lt;/p>
&lt;p>在「文件（File）」→「设置（Settings）」→「键盘映射（Keymap）」中搜索「run context configuration」，并将下图所示的 「运行（Run context configuration）」快捷键添加一个 &lt;kbd>Shift&lt;/kbd> + &lt;kbd>Enter&lt;/kbd> 触发方式。此时会显示快捷键冲突，可以无视，因为这些功能几乎不会用到。&lt;/p>
&lt;img src="image-20211113200431442.png" style="zoom:50%;" />
&lt;h3 id="hello-world">Hello World&lt;/h3>
&lt;p>现在你已经知道如何在 Pycharm IDE 中编写代码，也知道如何基于本机环境运行 Python 程序。此外，你需要额外做一些在其他教程中不会提及的工作以减轻今后的 Python 学习阻力。&lt;/p>
&lt;h4 id="pip">pip&lt;/h4>
&lt;p>常见的主流编程语言都会有「第三方编程依赖（wheel）」的设计，用以减轻开发压力。我们仅需关注极具创造力的部分，而重复性的繁琐的底层代码，我们可以通过优秀的 wheel 轮子解决。&lt;/p>
&lt;p>wheel 是其他人写好的，开放使用的，致力于解决特定场景问题的模块集成。支持 wheel 的语言都有一套拉取 wheel 的方案，而 Python 中推荐使用 pip 脚手架工具管理 wheel。&lt;/p>
&lt;p>根据上文的介绍，启动 Terminal 并在当前虚拟环境的命令行窗口下执行如下代码，可查看 pip 工具的基础信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip --help
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>pip v21.0.1(python 3.8)&lt;/code> 的可用指令如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Usage:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pip &amp;lt;command&amp;gt; &lt;span class="o">[&lt;/span>options&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Commands:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> install Install packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> download Download packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uninstall Uninstall packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> freeze Output installed packages in requirements format.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> list List installed packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> show Show information about installed packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> check Verify installed packages have compatible dependencies.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config Manage &lt;span class="nb">local&lt;/span> and global configuration.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> search Search PyPI &lt;span class="k">for&lt;/span> packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache Inspect and manage pip&lt;span class="err">&amp;#39;&lt;/span>s wheel cache.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wheel Build wheels from your requirements.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">hash&lt;/span> Compute hashes of package archives.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> completion A helper &lt;span class="nb">command&lt;/span> used &lt;span class="k">for&lt;/span> &lt;span class="nb">command&lt;/span> completion.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> debug Show information useful &lt;span class="k">for&lt;/span> debugging.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">help&lt;/span> Show &lt;span class="nb">help&lt;/span> &lt;span class="k">for&lt;/span> commands.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上方列出的指令中，比较常用的有：&lt;/p>
&lt;ul>
&lt;li>install：我们下载 wheel 基本都是用这个指令&lt;/li>
&lt;li>uninstall：卸载 wheel&lt;/li>
&lt;li>list：显示当前虚拟环境中的第三方依赖&lt;/li>
&lt;li>show：显示某个依赖的详细信息，通常用来查看依赖版本和安装路径&lt;/li>
&lt;li>config：设置运行变量，最常用的变量是 &lt;code>global.index&lt;/code> 配置安装源&lt;/li>
&lt;li>help：帮助指令&lt;/li>
&lt;/ul>
&lt;h4 id="pip-config">pip config&lt;/h4>
&lt;p>根据上文的定义，这些依赖本质上是由代码组成的文件，而「第三方」的概念尤其重要，他们并不会无故出现在你的电脑上（当前虚拟环境），最常见的方式是通过网络输送到你的电脑上。而这个输送源默认是一个国外站点 pypi org，我们在不使用代理的情况下直接通过 &lt;code>install&lt;/code> 指令拉取第三方依赖的下载速度极其慢。&lt;/p>
&lt;p>而至今，已有很多先驱者和引领者帮我们解决了这些问题——缓存镜像站，这些站点将数量极其庞大的存储在 pypi 上的资源包缓存到了国内多个节点服务器上，我们通过这些节点服务器即可以“跑满带宽”的速度拉取依赖。&lt;/p>
&lt;p>此处修改这个指向的源也可通过一行指令搞定：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config &lt;span class="nb">set&lt;/span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这行指令通过 &lt;code>set&lt;/code> 关键字修改全局（global）变量（index）的值为 &lt;code>https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code>，这是清华源的镜像站接口地址。除此之外，国内仍有许多提供缓存资源的优秀镜像站点：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 豆瓣 https://pypi.tuna.tsinghua.edu.cn/simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 阿里 https://mirrors.aliyun.com/pypi/simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 中科大 https://pypi.mirrors.ustc.edu.cn/simple&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>替换源仅需执行相同的指令并替换链接既可。&lt;/p>
&lt;p>📌此处需要注意的是，这类开放式镜像源一般需要&lt;strong>直连访问&lt;/strong>。若使用代理访问，较大概率遇上 &lt;code>SSLError&lt;/code> 错误，具体描述及解决方案可见本博客的 &lt;a class="link" href="https://blog.echosec.top/p/python-debug/#:~:text=%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E2%80%A6-,%E2%80%A6,-%3E%3E%3E%20pip%20config%20list" target="_blank" rel="noopener"
>Python 开发日记&lt;/a>。&lt;/p>
&lt;p>使用如下指令查看已配置的全局镜像源接口地址：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config get global.index-url
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以使用如下指令查看自定义的变量，并在其中寻找 &lt;code>global.index-url&lt;/code> 的值：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip config list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="pip-install">pip install&lt;/h4>
&lt;blockquote>
&lt;p>📌 需要留意当前 Terminal 的激活环境是否和当前开发环境一致。&lt;/p>
&lt;/blockquote>
&lt;p>现在你已经配置好了镜像源，可以用正常的网速拉取依赖。请执行如下指令安装 demo 开发必要的依赖：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install easygui
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处使用了 &lt;code>install&lt;/code> 指令拉取开发依赖，&lt;code>easygui&lt;/code> 是依赖名称，后面可跟多个依赖名一并安装。&lt;/p>
&lt;h4 id="rerun">rerun&lt;/h4>
&lt;p>等待 &lt;code>easygui&lt;/code> 安装完成，等待 Pycharm 索引完毕后，复制，粘贴，运行如下代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">邦尼百度APP
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;gt; 不懂就问：百度怎么用？！（认真脸）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">webbrowser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">easygui&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">BAIDU_SEARCH_API&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://www.baidu.com/s?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">STACKOVERFLOW_SEARCH_API&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://stackoverflow.com/search?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_key&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 通过 GUI 窗口获取检索关键词
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">key_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">easygui&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enterbox&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">msg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;请输入检索关键词&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;邦尼百度&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#34;孤勇者&amp;#34; &amp;#34;女声&amp;#34; site:bilibili.com&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">key_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">handle_key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key_&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 过滤关键词，使用 default browser 查询关键词。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :param key_:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 添加过滤词缀&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_filter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">key_&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34; -csdn.net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 简单拼接访问网址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BAIDU_SEARCH_API&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;wd=&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">_filter&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 启动默认浏览器访问链接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">webbrowser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_key&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">handle_key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">webbrowser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">STACKOVERFLOW_SEARCH_API&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;q=&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若你能得到正确的运行结果，说明一切安好并完成了 Python 的历史性对话！&lt;/p>
&lt;h2 id="visual-studio-code">Visual Studio Code&lt;/h2>
&lt;h2 id="related-issues">Related Issues&lt;/h2>
&lt;h3 id="condahttperror">CondaHTTPError&lt;/h3>
&lt;blockquote>
&lt;p>CondaHTTPError: HTTP 000 CONNECTION FAILED for url&lt;/p>
&lt;/blockquote>
&lt;p>安装完 Miniconda 并启动 Pycharm 首次创建 Conda 虚拟环境后出现此错误，重启计算机即可解决。&lt;/p>
&lt;h3 id="proxyerror">ProxyError&lt;/h3>
&lt;blockquote>
&lt;p>ProxyError: Conda cannot proceed due to an error in your proxy configuration.&lt;/p>
&lt;/blockquote>
&lt;p>在 Pycharm 中通过引导创建 Conda 虚拟环境时抛出。按照下文&amp;lt;代理设置&amp;gt;指出的对比实验结果进行调整。例如关闭系统代理进行安装，或开启代理工具的 TUN 模式（全局隧道模式），或将 base 虚拟环境中的 &lt;code>urllib3&lt;/code> 第三方库的版本调整至 &lt;code>v1.25.11&lt;/code>，&lt;code>pip install urllibe==1.25.11&lt;/code>。&lt;/p>
&lt;h3 id="代理设置">代理设置&lt;/h3>
&lt;p>下图展示了在 Pycharm 中手动创建 Conda 虚拟环境的结果与系统代理的关系。使用 &lt;code>conda create&lt;/code> 命令行创建时，无论哪种代理设置情况都可以成功创建。&lt;/p>
&lt;p>注意：Pycharm 软件中的代理设置始终设为「无代理」，依靠其他代理工具接管设备流量。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148.png"
width="1220"
height="1218"
srcset="https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148_hu9e9a41948c0f2d000a0c1345505face2_203719_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/python-best-practices-ide/image-20220524032007148_hu9e9a41948c0f2d000a0c1345505face2_203719_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220524032007148"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;h3 id="github-copilot">GitHub Copilot&lt;/h3>
&lt;blockquote>
&lt;p>With &lt;a class="link" href="https://copilot.github.com/" target="_blank" rel="noopener"
>GitHub Copilot&lt;/a>, get suggestions for whole lines or entire functions right inside your editor.&lt;/p>
&lt;/blockquote></description></item><item><title>『Blog』Robot Yea</title><link>https://blog.echosec.top/p/robot-yea/</link><pubDate>Fri, 15 Oct 2021 19:40:23 +0800</pubDate><guid>https://blog.echosec.top/p/robot-yea/</guid><description>&lt;img src="https://blog.echosec.top/p/robot-yea/sins.jpg" alt="Featured image of post 『Blog』Robot Yea" />&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;h2 id="features">Features&lt;/h2>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h2 id="development">Development&lt;/h2>
&lt;h2 id="changelog">Changelog&lt;/h2>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;h2 id="support">Support&lt;/h2>
&lt;h2 id="contact">Contact&lt;/h2>
&lt;h2 id="authors-and-acknowledgment">Authors and acknowledgment&lt;/h2>
&lt;h2 id="license">License&lt;/h2>
&lt;p>&lt;img src="https://blog.echosec.top/p/robot-yea/Roobt-Yea.svg"
loading="lazy"
alt="Roobt-Yea"
>&lt;/p></description></item><item><title>『Blog』Selenium 4.0</title><link>https://blog.echosec.top/p/selenium4-intro/</link><pubDate>Thu, 14 Oct 2021 23:45:57 +0800</pubDate><guid>https://blog.echosec.top/p/selenium4-intro/</guid><description>&lt;img src="https://blog.echosec.top/p/selenium4-intro/adb2.jpg" alt="Featured image of post 『Blog』Selenium 4.0" />&lt;h2 id="overview">Overview&lt;/h2>
&lt;blockquote>
&lt;p>I know it’s a cliche to say that it’s a “very great pleasure”, but, being honest with you, it genuinely is.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="noopener"
>Selenium 4&lt;/a> 不仅对前代版本做了稳定提升，还带来了大量令人兴奋的新功能，这能让我们的测试编写起来更有趣，也能在运行时更加稳定。&lt;/p>
&lt;h2 id="authenticationspan-idauthspan">Authentication&lt;span id="auth">&lt;/span>&lt;/h2>
&lt;p>Selenium 4.0 的一个重要更新是 &lt;strong>身份验证&lt;/strong> 能力。&lt;/p>
&lt;p>在过去，我们一直能使用 Selenium 处理一些「登录」请求，譬如通过定位特征元素（如 &lt;code>Input&lt;/code> ）来控制 Driver 进行定位（如 &lt;code>find_element_by_xpath() &lt;/code>）、输入（如 &lt;code>send_key()&lt;/code> ）、提交（如 &lt;code>click()&lt;/code> ）完成身份验。然而，我们使用这套工作流处理一些特殊框架的站点（如 &lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noopener"
>basic or digest authentication&lt;/a>）时效果差强人意。因此，我们在使用 Selenium 处理难以应付的登录要求时，总会在启动前携带 &lt;code>cookie&lt;/code>。&lt;/p>
&lt;p>上述情况将在 Selenium 4.0 时代有所改观。我们可以通过调用 &lt;code>register&lt;/code> 方法来添加 「username」以及 「password」或是其他 Token 执行身份认证任务，而无需再繁琐地定位元素发送消息或是与人机验证勾心斗角，「验证」行为由 Driver 底层实现。&lt;/p>
&lt;p>如下案例演示了新方法的功能实现：&lt;/p>
&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// This &amp;#34;HasAuthentication&amp;#34; interface is the key!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">HasAuthentication&lt;/span> &lt;span class="nf">authentication&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">HasAuthentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// You can either register something for all sites
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernameAndPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Or use something different for specific sites
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">uri&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHost&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;mysite.com&amp;#34;&lt;/span>&lt;span class="o">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernameAndPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;AzureDiamond&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;hunter2&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Ruby&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当我们完成 &lt;code>add&lt;/code> 添加操作后，每当站点要求或是 &lt;code>driver&lt;/code> 加载出身份认证页面时，Selenium 会帮我们自动提供验证信息（如 username 与 password），&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/bidi_apis/#register-basic-auth" target="_blank" rel="noopener"
>这样的操作是隐式完成的&lt;/a>。以往，我们可能需要单独开一条线程来应对随时可能出现的 「运行时身份认证」或是通过 「try&amp;hellip;exception」机制主动捕获异常并调用相应的处理模块。&lt;/p>
&lt;p>这个特性目前是基于 Selenium 4 的 &lt;a class="link" href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener"
>CDP&lt;/a> （Chrome DevTools Protocol）实现的，意味着此功能仅能运行在支持这个协议的浏览器上。值得一提的是，Selenium 旗下产品 &lt;a class="link" href="https://w3c.github.io/webdriver-bidi/" target="_blank" rel="noopener"
>WebDriver Bidi&lt;/a> 的允许开发者在不支持 CDP 的浏览器使用这项功能，好消息是这个项目还未完整孵化出来，我们可以期待一下。&lt;/p>
&lt;h2 id="relative-locators">Relative Locators&lt;/h2>
&lt;p>相对定位器（Relative Locators）是一种基于「自然语言术语」的元素定位解决方案，开发者可通过诸如「上方」「下方」「左侧」「右边」等描述捕获那些「看得见但摸不着」的标记元素，这种描述可以适应 DOM 的变化。&lt;/p>
&lt;p>这种方法背后的概念是允许开发者根据在页面上描述元素的方式来查找元素。更自然的说法是「find the element that is below the image」，而不是「find the INPUT inside the DIV with the &amp;ldquo;id &amp;quot; of &amp;ldquo;main&amp;rdquo;」 。通常，我们可以将此方案视为一种==基于视觉==的元素定位方法。&lt;/p>
&lt;p>这套方法论最初由 &lt;a class="link" href="https://www.sahipro.com/" target="_blank" rel="noopener"
>Sahi&lt;/a> 提出，这是一个极其强大的基于 &lt;a class="link" href="https://baike.baidu.com/item/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0/23661682" target="_blank" rel="noopener"
>低代码&lt;/a> 实现的自动化测试平台，感兴趣的朋友可以了解以下。&lt;/p>
&lt;p>我们以 &lt;code>Python&lt;/code> 和 &lt;code>Java&lt;/code> 举个例子，简要说明这个方案的强大之处。&lt;/p>
&lt;p>如下图所示是一个常见的登陆页面，我们现在尝试用新版本 API 定位页面元素。&lt;/p>
&lt;div align="center">&lt;img src="login-form-relative-locators.png"/>&lt;/div>
&lt;h3 id="above">Above&lt;/h3>
&lt;p>如上图是一个常见的登录页面，我们想找到位于密码字段上方的电子邮件地址字段。为此，我们通过其 id 找到密码字段，然后使用 relative locators 定位器捕获电子邮件字段。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">above&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">passwordField&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">above&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passwordField&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="below">Below&lt;/h3>
&lt;p>反过来，让我们定位密码字段，它位于电子邮件地址字段下方。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">below&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emailAddressField&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">passwordField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">below&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">emailAddressField&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="to-the-left-of">To the left Of&lt;/h3>
&lt;p>让我们考虑一下我们想要在「提交」按钮左侧找到元素的情况。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">to_left_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">submitButton&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">toLeftOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">submitButton&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="to-the-right-of">To the Right Of&lt;/h3>
&lt;p>现在我们将考虑相反的情况，我们希望找到「取消」按钮右侧的元素。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;cancel&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">to_right_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cancelButton&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">cancelButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;cancel&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">submitButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">toRightOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cancelButton&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="near">Near&lt;/h3>
&lt;p>上文「适应 DOM 的变化」从何而来？我觉得 &lt;code>near&lt;/code> function 是个非常重要的体现，它允许我们通过一定的规则指定所选取的元素周围 &lt;code>50px&lt;/code> 以内的其他元素。小伙伴们首先想到什么？欸嘿我不说。官方文档中这一句不起眼的描述，可能在未来，成为万千依靠 Selenium 工作的工程师们实现财富自由的垫脚石。&lt;/p>
&lt;p>回到话题，在这个案例中，我们可以通过先定位邮件标签，再通过寻找 &lt;code>input&lt;/code> tag 的偏移量，最终定位邮件地址的输入框。&lt;/p>
&lt;ul>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.common.by&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">By&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium.webdriver.support.relative_locator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">locate_with&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressLabel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lbl-email&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">locate_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">near&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emailAddressLabel&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.openqa.selenium.support.locators.RelativeLocator.with&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressLabel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;lbl-email&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebElement&lt;/span> &lt;span class="n">emailAddressField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">driver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findElement&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">with&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">By&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tagName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;input&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">near&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">emailAddressLabel&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="enhancement">Enhancement&lt;/h2>
&lt;p>如果你使用 &lt;a class="link" href="https://www.mozilla.org/en-GB/firefox/new/" target="_blank" rel="noopener"
>Firefox&lt;/a> 或是其他基于 &lt;a class="link" href="https://www.chromium.org/Home" target="_blank" rel="noopener"
>Chromium&lt;/a> 的浏览器，Selenium 4 还提供了强大的增强特性。&lt;/p>
&lt;p>除了上文介绍的 &lt;a class="link" href="#auth" >Authentication&lt;/a> ，Selenium 4 还添加了 Network Interception（&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418" target="_blank" rel="noopener"
>Are you an HTTP 418?&lt;/a>）以及一些常见执行请求，如更加高效的「等待 DOM 变更」的方法，或是查看 Javascript 错误的方法等等。&lt;/p>
&lt;p>值得一提的是，这些提升大都是基于现有 API 打磨的，意味着我们原先引用的函数方法无需改动，而我们只需升级版本 如 &lt;code>pip install --upgrade selenium&lt;/code> ，这些库函数将被自动替换（如果是要使用原先没有的新功能我们当然得改代码）。&lt;/p>
&lt;h2 id="selenium-grid">Selenium Grid&lt;/h2>
&lt;p>Selenium 重构了 &lt;a class="link" href="https://www.selenium.dev/documentation/grid/" target="_blank" rel="noopener"
>Grid&lt;/a> ，使其完全支持分布式，能够运行于 Kubernetes 等现代基础设施之上。&lt;/p>
&lt;p>重构后的 Grid 可以管理本地机器上的 Docker 容器，提取诸如独立的 Firefox 服务器之类的镜像，这样我们的基础设施维护工作就会变得轻松一些。&lt;/p>
&lt;p>最后， Grid 更加安全，也更加易于管理。Selenium 改进了 Grid 的UI，将其置于 GraphQL 模型上运行，任何人都可以自由查询并使用该模型来创建自己的可视化或 Grid 监视器。开发者可以使用 VNC 与正在运行的会话（session）进行交互，从而更好地了解到正在发生地事情。&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/blog/2021/announcing-selenium-4/" target="_blank" rel="noopener"
>Announcing Selenium 4 | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/locating_elements/#relative-locators" target="_blank" rel="noopener"
>Locating elements | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.selenium.dev/documentation/webdriver/bidi_apis/#register-basic-auth" target="_blank" rel="noopener"
>BiDi APIs | Selenium&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418" target="_blank" rel="noopener"
>418 I&amp;rsquo;m a teapot - HTTP | MDN (mozilla.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noopener"
>HTTP authentication - HTTP | MDN (mozilla.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="noopener"
>SeleniumHQ/selenium: A browser automation framework and ecosystem. (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『Notes』Python Programming diary</title><link>https://blog.echosec.top/p/python-debug/</link><pubDate>Thu, 14 Oct 2021 18:14:26 +0800</pubDate><guid>https://blog.echosec.top/p/python-debug/</guid><description>&lt;img src="https://blog.echosec.top/p/python-debug/6e1a7a.jpg" alt="Featured image of post 『Notes』Python Programming diary" />&lt;h2 id="packagesnotfounderror-the-following-packages-are-missing-from-the-target-environment">PackagesNotFoundError: The following packages are missing from the target environment&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 使用 Pycharm 手动添加新环境，或使用 &lt;code>conda create -n [env-name] [python=3.9]&lt;/code>指令遇到如下报错：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PackagesNotFoundError: The following packages are missing from the target environment - &lt;span class="nv">python&lt;/span>&lt;span class="o">=&lt;/span>3.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>事件回溯：&lt;/strong> Pycharm 手动添加源，本质上相当于执行了 &lt;code>conda&lt;/code> 脚手架指令，简单的可视化交互其本质上也只是使用了 &lt;code>-p&lt;/code> 参数指定 &lt;code>env&lt;/code> 存储路径以及 &lt;code>Python&lt;/code> 版本，所以根因出在脚手架身上。&lt;/p>
&lt;p>在报错时，我设置了 &lt;code>conda config:channels&lt;/code> 也就是所谓的 「源」为清华源。若我开启本机代理，则环境创建会时抛出另一个访问清华园的 &lt;code>404&lt;/code> 错误；若我不开启本机代理，则会抛出本 Tag 异常。我在开关本机代理的时候，也排列组合设置了 Pycharm 中的代理设置（无代理/手动代理）。最终依靠移除 &lt;code>conda&lt;/code> 关于源的环境变量解决问题。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 执行如下代码移除 &lt;code>conda&lt;/code> 源（使用默认源）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">conda config --remove-key channels
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="sslerrorssleoferror8-eof-occurred-in-violation-of-protocol-_sslc1129">SSLError(SSLEOFError(8, &amp;lsquo;EOF occurred in violation of protocol (_ssl.c:1129)&amp;rsquo;))&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 使用 &lt;code>pip&lt;/code> 脚手架下载任意包抛出。先经过 N 论超时警告，最后抛出 &lt;code>SSLError&lt;/code> 或 &lt;code>HTTPSConnectionPool&lt;/code> 异常。错误日志如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; pip install requests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>4, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>3, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>2, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>1, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Retrying &lt;span class="o">(&lt;/span>Retry&lt;span class="o">(&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">connect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">read&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">redirect&lt;/span>&lt;span class="o">=&lt;/span>None, &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>None&lt;span class="o">))&lt;/span> after connection broken by &lt;span class="s1">&amp;#39;SSLError(SSLEOFError(8, &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EOF occurred in violation of protocol &lt;span class="o">(&lt;/span>_ssl.c:1129&lt;span class="o">)&lt;/span>&lt;span class="s1">&amp;#39;))&amp;#39;&lt;/span>: /simple/requests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Could not fetch URL https://pypi.tuna.tsinghua.edu.cn/simple/requests/: There was a problem confirming the ssl certificate: HTTPSConnectionPo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ol&lt;span class="o">(&lt;/span>&lt;span class="nv">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;pypi.tuna.tsinghua.edu.cn&amp;#39;&lt;/span>, &lt;span class="nv">port&lt;/span>&lt;span class="o">=&lt;/span>443&lt;span class="o">)&lt;/span>: Max retries exceeded with url: /simple/requests/ &lt;span class="o">(&lt;/span>Caused by SSLError&lt;span class="o">(&lt;/span>SSLEOFError&lt;span class="o">(&lt;/span>8, &lt;span class="s1">&amp;#39;EOF occu
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">rred in violation of protocol (_ssl.c:1129)&amp;#39;&lt;/span>&lt;span class="o">)))&lt;/span> - skipping
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR: Could not find a version that satisfies the requirement requests &lt;span class="o">(&lt;/span>from versions: none&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR: No matching distribution found &lt;span class="k">for&lt;/span> requests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>事件回溯：&lt;/strong>&lt;code>pip&lt;/code> 配置了全局 &lt;a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener"
>清华源&lt;/a>（如下所示），运行指令时使用由 &lt;code>v2rayN&lt;/code> 发起的系统代理，这是一个「墙内人」几乎不会遇到的问题……&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt; pip config list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">global.index-url&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;https://pypi.tuna.tsinghua.edu.cn/simple&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考方案：&lt;/strong> 根因在于我们访问的镜像接口识别并屏蔽了代理流量（不可信的源），也即核心解决思路为「不使用代理」访问镜像源。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>「&lt;strong>推荐&lt;/strong>」修改 &lt;u>代理客户端&lt;/u> 路由规则（以 &lt;code>v2rayN&lt;/code> 为例其他代理软件同理）&lt;/p>
&lt;p>这是个一劳永逸的做法，代理软件将不再接管访问此域名的流量。&lt;/p>
&lt;p>启动代理客户端，依次打开 &lt;kbd>设置&lt;/kbd> → &lt;kbd>参数设置&lt;/kbd> → &lt;kbd>系统代理设置&lt;/kbd>，在「例外」中填入镜像域名，以清华源 pip 镜像域名为例，填入 &lt;code>pypi.tuna.tsinghua.edu.cn&lt;/code>，如下图所示：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div align="center">&lt;img src="image-20220524045444990.png" style="zoom: 67%;" />&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>&lt;strong>「推荐」&lt;/strong> 开启 TUN 模式代理（以 Clash for Windows v0.19.19 为例）&lt;/p>
&lt;p>在面板中启动 TUN Mode，此时 Clash 可以通过端点间隧道（虚拟网卡）代理当前局域网的全局流量，此时无论是浏览器流量还是各种电脑软件的流量都会通过 Clash 虚拟网卡访问互联网。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在执行 &lt;code>pip&lt;/code> 指令时清除系统代理，也即关闭代理软件的系统代理功能&lt;/p>
&lt;p>比较繁琐，需要执行前关闭代理，（如果你当前的环境依赖代理）执行后再重新开启代理。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="文件编码">文件编码&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 此问题难以使用某一类异常描述，因为运行时不会报错，但运行结果和预想的不太一样。例如，网络上抓取语料，需要获取 &lt;code>user-nickname&lt;/code>，不免会遇上使用特殊符号命名的玩家。这些符号直接在网页上渲染，或是直接在控制台输出，都是「所见即所得」，但在「写入文件」这一步骤时，出现了不可控的「乱码」问题。&lt;/p>
&lt;p>&lt;strong>事件回溯：&lt;/strong> 以下方 Python 代码为例，我们定义一个包含「特殊符号」集合的变量，并以 UTF-8 编码形式将其写入到 CSV 文件当中。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">csv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;🌪&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;嬡芣释掱&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newline&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">writer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">writer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writerow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打开 &lt;code>test.csv&lt;/code>，查看写入的数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162216767.png" alt="image-20211025162216767" style="zoom:50%;" />&lt;/div>
&lt;p>当时的第一反应是 &lt;code>encoding&lt;/code> 参数的选择不恰当，而事实证明的确如此。但我却在编码类型的选择上陷入大坑。最后试出了一种能够正常显示写入数据的编码格式 &lt;code>utf-16&lt;/code>。&lt;/p>
&lt;p>修改参数 &lt;code>encoding=&amp;quot;utf-16&amp;quot;&lt;/code> 后再次打开文件，查看写入数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162348681.png" alt="image-20211025162348681" style="zoom:50%;" />&lt;/div>
&lt;p>可以看到「特殊符号」的**字形（glyph）**已被正常渲染，但似乎分隔符的识别出现了问题，同一行数据被识别为同一个单元的内容。&lt;/p>
&lt;p>于是我在查了有关资料后，找到了另一种编码格式 &lt;code>utf-8-sig&lt;/code>。&lt;/p>
&lt;p>修改参数 &lt;code>encoding=&amp;quot;utf-8-sig&amp;quot;&lt;/code> 后再次打开文件，查看写入数据：&lt;/p>
&lt;div align="center">&lt;img src="image-20211025162553256.png" alt="image-20211025162553256" style="zoom:50%;" />&lt;/div>
&lt;p>蚌埠住了，这次分隔符正常识别，火星文正常显示，但表情包符号却乱码了。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 使用 &lt;code>utf-8-sig&lt;/code> 或 &lt;code>utf-16&lt;/code> 编码尝试应对字形渲染问题。&lt;/p>
&lt;p>但值得一提的是，无论是 &lt;code>utf-8&lt;/code>、&lt;code>utf-8-sig&lt;/code> 还是 &lt;code>utf-16&lt;/code> ，只要不是默认的 &lt;code>gbk&lt;/code> 都不会引发读写错误。尽管在 GUI 软件上出现了字形渲染的问题，但将同样的数据读回 Python 程序后，其仍然是一个正常显示的可以操作的 str 对象。&lt;/p>
&lt;h2 id="字符编码">字符编码&lt;/h2>
&lt;blockquote>
&lt;p>最后更新时间：2022-01-28&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>错误现象：&lt;/strong>「看着一摸一样」的两句字符串，在 &lt;code>==&lt;/code> 条件判别下返回 &lt;code>Flase&lt;/code>。&lt;/p>
&lt;p>&lt;strong>事件回溯：&lt;/strong> 这里要记录一个有趣的背景故事。这是作者在玩 &lt;a class="link" href="https://www.hcaptcha.com/" target="_blank" rel="noopener"
>hCaptcha challenge&lt;/a> 时遇上的趣事。&lt;/p>
&lt;p>如果你接触过爬虫，你一定了解这玩意（如下图所示），给出一个需求标签，点选九宫格中符合要求的图片。当下有很多流行的人机挑战， &lt;code>hCaptcha challenge&lt;/code> 算是其中 T0 级别的模块，能够阻挡近乎九成的爬虫流量，新手遇上这种视觉验证类的 &lt;code>CAPTCHA&lt;/code> ，基本上不会有太多想法。&lt;/p>
&lt;div align="center">&lt;img src="image-20220128230029379.png" alt="image-20220128230029379" style="zoom:50%;" />&lt;/div>
&lt;p>但我们环顾这个技术行业，&lt;code>hCaptcha challenge&lt;/code> 显然算不上最“变态”的或者说最困难的人机挑战。最相关的好比 Google 的 &lt;code>reCaptcha v2&lt;/code> ，除了简单的图像分类外，还创新性的使用了图像切割的形式抽象地表述实体，让简单的「分类问题」变成了难度更高的「目标识别」问题（如下图所示），从编码者角度来看，无论是自动化模块的编写还是视觉模块的处理都是不小的挑战。&lt;/p>
&lt;div align="center">&lt;img src="Snipaste_2022-01-29_00-00-03.png" alt="Snipaste_2022-01-29_00-00-03.png" style="zoom:50%;" />&lt;/div>
&lt;p>当然，如果你同时熟悉 &lt;code>Undetected Automation&lt;/code> 以及 &lt;code>Darknet Image Classification&lt;/code> 或 &lt;code>Object Detection&lt;/code>，我相信这对你来说不是什么难事。但你要相信，当下的人机挑战的病态程度已经远超你的想象，篇幅有限此处不多展开，后买咱再开个坑详细说说「人机挑战的那些事」。&lt;/p>
&lt;p>&lt;strong>回到正题&lt;/strong>，此处的 &lt;code>字符编码&lt;/code> 问题出自于 &lt;code>hCaptcha challenge&lt;/code> 。我们通过网页元素截取 &lt;code>label&lt;/code> 也即我们需要 「点击」的图像标签名，送入模型比对后得出相应的结果。此处截取的 &lt;code>label&lt;/code> 是具有 &lt;code>locale&lt;/code> 特性的，如果你以 &lt;code>zh-CN&lt;/code> 请求形式打开，标签名会显示中文。坑就在这了，作者获取到的某些 &lt;code>label&lt;/code> 并&lt;u>不是标准的中文格式编码&lt;/u>，什么意思呢，你可以用你喜欢的编程语言去比对如下两个字符串，看它们是否“相等”。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Python &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ー条船&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;一条船&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>结果显然是不相等的，在该篇博客中，由于页面字体兼容此种字符编码的渲染，所以你很明显能看到两个“一”有所不同，但如果在你的 &lt;code>IDE&lt;/code> 中，设置了等宽编程字体，或者 &lt;code>Source code pro&lt;/code> 之类的流行字体，这对字符串从肉眼看是完全一样的。&lt;/p>
&lt;p>不知道这是不是 &lt;code>hCaptcha&lt;/code> 开发团队的有意为之，至少我觉得这是从“反爬虫”角度来说非常高明的一招。想撩到来犯爬虫，先潦倒它的开发者。同样地，其他语种也会有这样的问题，如英文 &lt;code>bіcycle&lt;/code>（自行车）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#Python&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;bіcycle&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;bicycle&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>好的，这下连本博客的默认字体引擎也无法渲染了，肉眼可见的“完全一致”，但如果你将它们复制进你的 &lt;code>IDE&lt;/code> ，执行结果显然是 &lt;code>False&lt;/code>。&lt;/p>
&lt;p>如果你也感叹这一招十分高明，大可在网上检索一下其中的“玄机”。&lt;/p>
&lt;p>如果你也在处理 &lt;code>hCaptcha challenge&lt;/code>，和我使用同样的思路获取 &lt;code>label&lt;/code>，并且没有发现这个字符编码问题，你会陷入窘况。显然，我们训练的模型的标注 &lt;code>label&lt;/code> 都是标准的国际统一的字符编码，在这种特殊的情况下，一个单词，因为某个字母的编码不同，经过解释器后，在模型看来，这是两个完全不一样的“实体目标”。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> 手动编织 &lt;code>dict mapping&lt;/code> ，将异常编码做一层映射再导向模型。&lt;/p>
&lt;p>这是个有效的，但也是最笨的方法。当然，根据本人的实验结论来看，使用 &lt;code>locale=zh-CN&lt;/code> 时，这项阻碍是最小的（大部分异常都能看出差别）。如果你使用 &lt;code>en-US&lt;/code> 本地化，任何一个英文字母都有可能出现异常编码（且肉眼难以察觉），工程难度非常大。&lt;/p>
&lt;h2 id="此时不应有-">此时不应有 &amp;amp;&lt;/h2>
&lt;p>&lt;strong>错误现象：&lt;/strong> 命令提示符抛出提示「此时不应有 &amp;amp;」后秒退。在 Pycharm 中启动的 CMD 终端秒退。&lt;/p>
&lt;p>&lt;strong>参考方案：&lt;/strong> &lt;kbd>Win&lt;/kbd> + &lt;kbd>R&lt;/kbd> ，键入 &lt;code>regedit&lt;/code> 打开注册表，在如下路径找到 &lt;code>Autorun&lt;/code>，将其数据数值删去。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cython" data-lang="cython">&lt;span class="line">&lt;span class="cl">&lt;span class="n">HKEY_CURRENT_USER&lt;/span>\&lt;span class="n">Software&lt;/span>\&lt;span class="n">Microsoft&lt;/span>\&lt;span class="n">Command&lt;/span> &lt;span class="n">Processor&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="image-20220524043332047.png" alt="image-20220524043332047" style="zoom: 50%;" /></description></item><item><title>『 Blog 』Resources Transfer</title><link>https://blog.echosec.top/p/resources-transfer/</link><pubDate>Thu, 07 Oct 2021 14:06:41 +0800</pubDate><guid>https://blog.echosec.top/p/resources-transfer/</guid><description>&lt;img src="https://blog.echosec.top/p/resources-transfer/d330174.jpg" alt="Featured image of post 『 Blog 』Resources Transfer" />&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>本文介绍 2 种能够实现的 GitHub 资源传递的解决方案，并简要介绍与此相关的技术模型。&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;blockquote>
&lt;p>「资源代下」是一种可能在中国才会出现的盛况。&lt;/p>
&lt;/blockquote>
&lt;p>不可否认，「&lt;a class="link" href="https://zh.wikipedia.org/zh-hans/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="noopener"
>防火长城&lt;/a>」的诞生确实推动了许多行业的发展，也为许多商业模式的出现奠定了基石，这堵「墙」在这杵着，隔离了“脏数据”，也让万千学子“查文献”的门槛上了一个台阶。&lt;/p>
&lt;p>时至今日，国内高校大都拥有内建或合租的 VPN 网络供本校学子进行学术科研工作，但这些 VPN 往往被当作是针对「学术文献」资源建立的「传输通道」，所能提供的「视野」相较于全局代理要小很多。&lt;/p>
&lt;p>于是，在这种又忙又卷的环境中，出现了这么一群在鼓捣“特种领域”但又没鼓捣清楚自己为啥访问不了某些站点的人。&lt;/p>
&lt;p>诚然，目前没有可靠的数据表明这类群体的规模，但从直觉上看，这是个非常庞大的“市场”。&lt;/p>
&lt;p>打开淘宝，你能发现各种各样需要跨越「防火长城」才能流畅进行的「资源拉取服务」。这里有我们常见的 GitHub 资源下载（或数据集下载）， Google Cloud 资源下载以及各种需要代理才能流畅访问的素材资源的下载。&lt;/p>
&lt;p>&lt;span id="taobao">&lt;/span>&lt;/p>
&lt;div align="center">&lt;img src="photo_2021-10-07_13-29-48.jpg" alt="photo_2021-10-07_13-29-48" style="zoom:67%;" />&lt;/div>
&lt;p>作者点进了显示在综合排列考前的 「GitHub 资源代下」的店铺，翻阅了店铺当前仅有的一条 Q&amp;amp;A。&lt;/p>
&lt;div align="center">&lt;img src="photo_2021-10-07_13-35-54.jpg" alt="photo_2021-10-07_13-35-54" style="zoom:36%;" />&lt;/div>
&lt;p>当我看到「&lt;strong>高速下载连接&lt;/strong>」这个关键词时，我已参透这背后的运营模式，惊呼“这 TM 也能赚钱？”，但当我看到图片中的回复时，我并不惊讶。&lt;/p>
&lt;p>当我们已经习惯于使用 GitHub 并基于 GitHub 的各种产品进行日常工作时，我们当然会对如上现象感到疑惑，但我们还是得解释以下这是个什么情况！&lt;/p>
&lt;p>对于一个拥有 200 M 家庭带宽的用户来说，使用代理后下载各种 GiHub 资源的速度都是非常快的，因为常见的 GiHub 挂载资源包体积都非常小（数据集除外）。但同样的事情对于“墙内”用户来说非常痛苦，眼看着个位数 MiB 体积的资源就是下不完，下载速度可能只有 10 kb/s。&lt;/p>
&lt;p>好了，正所谓「&lt;strong>有需求就有市场&lt;/strong>」，只要卖家的交易行为还在法律的条框之内，我们也不能说什么，毕竟有人着急着要下载，也不缺这一两块的小费，又刚好有人能提供这种服务，双方一拍即合，一个船新的市场就诞生了~&lt;/p>
&lt;p>说到这，可能还有的小伙伴会疑惑：我以为它是把资源自己下载下来后，通过某种方式分享给买家，这个「高速下载连接」是什么？这种薄利多销的“模式”，真的不会亏损吗？如果我也想给身边的“朋友”提供这种服务，有没有比较可靠的解决方案？不着急，下文慢慢说。&lt;/p>
&lt;h2 id="technology-stack">Technology Stack&lt;/h2>
&lt;h3 id="resource-transfer">Resource Transfer&lt;/h3>
&lt;p>本文所讨论的「资源传递」与我们通常理解的「&lt;a class="link" href="https://baike.baidu.com/item/%E6%96%87%E7%8C%AE%E4%BC%A0%E9%80%92/6646200" target="_blank" rel="noopener"
>文献传递&lt;/a>」有所不同。后者通常是指「将用户所需的文献复制品以有效的方式和合理的费用，直接或间接传递给用户的一种非返还式的文献提供服务」；而前者强调的是传递的代理以及资源的转发，传递的资源必须是在网络上共享且开放使用的。&lt;/p>
&lt;p>以下，我们将基于传统文献传递的观点，一步步说明这个被一眼看透的商业模式到底时怎样赚钱的。&lt;/p>
&lt;h3 id="cloudflare-workers-cfw">Cloudflare Workers (CFW)&lt;/h3>
&lt;p>&lt;span id="rt-1">&lt;/span>&lt;/p>
&lt;p>首先需要解答的问题是：「如何给不会翻墙的国内用户提供加速下载 GitHub 资源的服务？」&lt;/p>
&lt;p>目前的最优解是 &lt;a class="link" href="https://workers.cloudflare.com/" target="_blank" rel="noopener"
>&lt;code>Cloudflare Workers (CFW)&lt;/code>&lt;/a> + &lt;code>jsdelivr&lt;/code> + &lt;code>cnpmjs&lt;/code> 实现的无服务 (&lt;a class="link" href="https://www.cloudflare.com/zh-cn/learning/serverless/what-is-serverless/" target="_blank" rel="noopener"
>Severless&lt;/a>) 反向代理 + 内容分发策略。具体内容后面会单独发一篇博客说明，实现起来比较简单（但可能对新手不是很友好，具体可见 &lt;a class="link" href="https://github.com/hunshcn/gh-proxy" target="_blank" rel="noopener"
>gh-proxy&lt;/a> 项目的自述文档）。&lt;/p>
&lt;p>这一步完成后，我们将从 Wokers 获取一个 CDN 链接，这个链接是用来做什么的呢？当然是用来回答问题的~&lt;/p>
&lt;p>作者已部署了一个应用案例，分发链接如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://curly-shape-d178.qinse.workers.dev/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后找到你需要的资源的下载链接，以作者先前编写的 &lt;a class="link" href="https://github.com/QIN2DIM/V2RayCloudSpider/releases/tag/v4.5.4" target="_blank" rel="noopener"
>V2Ray云彩姬 v4.5.4&lt;/a> 发行客户端为例，其链接如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://github.com/QIN2DIM/V2RayCloudSpider/releases/download/v4.5.4/v2rss_4.5.4_Windows-64bit.zip&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;figure>&lt;img src="image-20211007151926050.png"
alt="无代理直连下载"/>&lt;figcaption>
&lt;p>无代理直连下载&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>将两者按如下格式合并拼写，访问拼接后的链接，即可实现加速下载。我们清理下载缓存，使用加速下载，看看能有多少提升。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">https://curly-shape-d178.qinse.workers.dev/https://github.com/QIN2DIM/V2RayCloudSpider/releases/download/v4.5.4/v2rss_4.5.4_Windows-64bit.zip&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;figure>&lt;img src="image-20211007152042536.png"
alt="反向代理加速下载"/>&lt;figcaption>
&lt;p>反向代理加速下载&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>是的，只需将下载链接完整复制到 CDN 链接之后就能实现反向代理（加速下载）。&lt;/p>
&lt;p>值得一提的是，此步骤的精华输出就是这个可用的 CDN 链接，意味着如果你想搭建自己的服务，上文提供的链接你已经可以拿去用了~&lt;/p>
&lt;p>此外，我们需要知道，CFW 提供免费服务「每天 10 万次请求以及每分钟 1000 次请求」仅当需求无法满足时，你才需要升级到 $5 的付费版本，此时你的 API Limit 变为「每月 1000 万次请求」 。从 &lt;a class="link" href="#taobao" >上文截图所示的销量情况&lt;/a> 来看，如果你有幸用上了付费版本，那你早已垄断了这个行业的生意（笑死。&lt;/p>
&lt;p>好了回到话题，经此讨论我们不难得出如下图所示的资源传递技术模型：&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/resources-transfer/tech-stack-resources-transfer-1.svg"
loading="lazy"
>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先，假设 Customer 能够正常浏览 GitHub 站点，并在浏览中产生需求；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>客户带着需求以及下载链接找到 Chatbot，并于 Chatbot 发生首轮交互；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过预先设定的 Inline 引导框架，客户能够提供经过 Review 的资源链接；&lt;/p>
&lt;p>至少要确认客户发来的链接指向 GitHub。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Chatbot 调度已经封装好的 SDK，修饰资源链接并返回给客户；&lt;/p>
&lt;p>若此时用户满意，则订单结束；若订单异常，则需要技术支持（人工客服）介入回滚订单。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户获取「高速下载链接」凭借 CDN 技术平步上青云。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;a class="link" href="#rt-1" >上文所述的实现方案&lt;/a> 仅是作者的反射想法，生产环境要稍微麻烦些。此模型是实现 Background 所述模式的最简单方案。对于作者此类对 Cloudflare Workers 有所了解的玩家，部署一套用于加速 GitHub 资源拉取的反向代理接口，可能只需要几分钟（毕竟有成熟的轮子），编写一套完整的 Inline 引导框架可能需要一至两天的时间。如果你不知道怎么做 Chatbot，你可以“肉身交互”（模板回复）；如果你觉得部署麻烦，你可以在网络上直接获取 CFW 的加速链接，以及共享通用的 Inline 引导框架，甚至是手把手教你开淘宝店的奶妈教程，门槛非常低。&lt;/p>
&lt;h3 id="aliyundrive-hash-mapping">Aliyundrive Hash Mapping&lt;/h3>
&lt;p>如下分享的是一套可实现「内外双循环」的技术模型，此模型可插入到&lt;a class="link" href="#rt-1" >上文所述的实现方案&lt;/a> 的任一环节中。&lt;/p>
&lt;img src="tech-stack-resources-transfer-2.svg" style="zoom:92%;" />
&lt;p>技术支持与客户交流（或 Inline 引导），并询问客户是否拥有 Aliyundrive 账号；&lt;/p>
&lt;ul>
&lt;li>YES，我就问问；&lt;/li>
&lt;li>NO，提出免费下载，引导客户使用你的邀请码注册云盘账号，待获取 Response（网盘资源的分享链接） 后分发给客户。若用户否决提议（财大气粗），则返回 CFW 技术模型收费下载。&lt;/li>
&lt;/ul>
&lt;p>别光顾着问，先给人家下载东西，两三下就下好了。反正下好了就给客户发网盘分享链接，没有账号就得注册，用你的邀请码（明文超链接）跳转会很方便，也算是一种引导暗示。&lt;/p>
&lt;p style="background:#FAEBD7">（占坑不定时更新）&lt;/p>&lt;p>&lt;/p>
&lt;h2 id="business-model">Business model&lt;/h2>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/user">用户 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/customer-support">客户支持 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a target="_blank" href="undefined/icons/set/bot">博特 icon&lt;/a>图标源自&lt;a target="_blank" href="">Icons8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://workers.cloudflare.com/" target="_blank" rel="noopener"
>Cloudflare Workers®&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://baike.baidu.com/item/%e6%96%87%e7%8c%ae%e4%bc%a0%e9%80%92/6646200" target="_blank" rel="noopener"
>文献传递_百度百科 (baidu.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/zh-hans/%e9%98%b2%e7%81%ab%e9%95%bf%e5%9f%8e" target="_blank" rel="noopener"
>防火长城 - 维基百科，自由的百科全书 (wikipedia.org)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Blog 』需要留意的法律问题</title><link>https://blog.echosec.top/p/blogs-live-legal-issues/</link><pubDate>Fri, 24 Sep 2021 10:28:41 +0800</pubDate><guid>https://blog.echosec.top/p/blogs-live-legal-issues/</guid><description>&lt;img src="https://blog.echosec.top/p/blogs-live-legal-issues/3360802.jpg" alt="Featured image of post 『 Blog 』需要留意的法律问题" />&lt;p>本文章“常见问题”的搜集源自 &lt;a class="link" href="https://www.66law.cn/laws/" target="_blank" rel="noopener"
>华律网&lt;/a> ，&lt;a class="link" href="https://www.pkulaw.cn/" target="_blank" rel="noopener"
>北大法宝&lt;/a> 以及相关生活经验。&lt;/p>
&lt;h2 id="导航">导航&lt;/h2>
&lt;p>&lt;strong>常见问题 [LICENSE]&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e7%9f%a5%e8%af%86%e5%85%b1%e4%ba%ab%e8%ae%b8%e5%8f%af%e5%8d%8f%e8%ae%ae" >知识共享许可协议(&lt;strong>C&lt;/strong>reative &lt;strong>C&lt;/strong>ommons license)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#MIT%e8%ae%b8%e5%8f%af%e5%8d%8f%e8%ae%ae" >MIT 许可协议(The MIT License)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#Apache%e8%ae%b8%e5%8f%af%e5%8d%8f%e8%ae%ae" >Apache 许可协议&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="BSD%e8%ae%b8%e5%8f%af%e8%af%81" >BSD 许可证&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#GNU%e9%80%9a%e7%94%a8%e5%85%ac%e5%85%b1%e8%ae%b8%e5%8f%af%e8%af%81" >GNU 通用公共许可证&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>常见问题 [知识产权]&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e8%bd%ac%e8%bd%bd%ef%bc%8c%e5%bc%95%e7%94%a8%ef%bc%8c%e6%8a%84%e8%a2%ad%ef%bc%8c%e5%8e%9f%e5%88%9b%e7%9a%84%e5%8c%ba%e5%88%ab" >转载，引用，抄袭，原创的区别&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e7%94%a8%e5%88%ab%e4%ba%ba%e7%9a%84%e4%bd%9c%e5%93%81%e5%bd%93%e5%a4%b4%e5%83%8f%e4%be%b5%e6%9d%83%e5%90%97?" >用别人的作品当头像侵权吗?&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%a6%82%e2%80%9c%e6%b6%89%e5%8f%8a%e4%be%b5%e6%9d%83%ef%bc%8c%e8%af%b7%e8%81%94%e7%b3%bb%e5%88%a0%e9%99%a4%e2%80%9d%e7%ad%89%e5%85%8d%e8%b4%a3%e5%a3%b0%e6%98%8e%e6%98%af%e5%90%a6%e6%9c%89%e6%95%88%ef%bc%9f" >如“涉及侵权，请联系删除”等免责声明是否有效？&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>常见问题 [劳动纠纷]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>常见问题 [合同纠纷]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>法条索引&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e4%b8%ad%e5%8d%8e%e4%ba%ba%e6%b0%91%e5%85%b1%e5%92%8c%e5%9b%bd%e8%91%97%e4%bd%9c%e6%9d%83%e6%b3%95" >中华人民共和国著作权法&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="常见问题-lincense">常见问题 [LINCENSE]&lt;/h2>
&lt;h3 id="知识共享许可协议">知识共享许可协议&lt;/h3>
&lt;p>&lt;span id="知识共享许可协议">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e7%9f%a5%e8%af%86%e5%85%b1%e4%ba%ab%e8%ae%b8%e5%8f%af%e5%8d%8f%e8%ae%ae" target="_blank" rel="noopener"
>知识共享许可协议 - 维基百科，自由的百科全书 (wikipedia.org)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;table class="wikitable">
&lt;tbody>&lt;tr>
&lt;th>&lt;big>标志&lt;/big>&lt;/th>
&lt;th>&lt;big>权利&lt;/big>&lt;/th>
&lt;th>&lt;big>备注&lt;/big>
&lt;/th>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image" title="Attribution">&lt;img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Cc-by_new.svg/75px-Cc-by_new.svg.png" decoding="async" width="75" height="75" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Cc-by_new.svg/113px-Cc-by_new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Cc-by_new.svg/150px-Cc-by_new.svg.png 2x" data-file-width="80" data-file-height="80">&lt;/a>
&lt;/td>
&lt;td>&lt;b>署名&lt;/b>（英语：&lt;span lang="en">Attribution&lt;/span>，&lt;b>by&lt;/b>）
&lt;/td>
&lt;td>您（用户）可以复制、发行、展览、表演、放映、广播或通过信息网络传播本作品；您必须按照作者或者许可人指定的方式对作品进行署名。
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image" title="Share-alike">&lt;img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/2/29/Cc-sa.svg/75px-Cc-sa.svg.png" decoding="async" width="75" height="75" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/2/29/Cc-sa.svg/113px-Cc-sa.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/2/29/Cc-sa.svg/150px-Cc-sa.svg.png 2x" data-file-width="64" data-file-height="64">&lt;/a>
&lt;/td>
&lt;td>&lt;b>&lt;a href="https://blog.echosec.top/wiki/%E7%9B%B8%E5%90%8C%E6%96%B9%E5%BC%8F%E5%85%B1%E4%BA%AB" title="相同方式共享">相同方式共享&lt;/a>&lt;/b>（英语：&lt;span lang="en">&lt;b>S&lt;/b>hare&lt;b>A&lt;/b>like&lt;/span>，&lt;b>sa&lt;/b>）
&lt;/td>
&lt;td>您可以自由复制、散布、展示及演出本作品；若您改变、转变或更改本作品，仅在遵守与本作品相同的许可条款下，您才能散布由本作品产生的派生作品。（参见&lt;a href="https://blog.echosec.top/wiki/Copyleft" title="Copyleft">copyleft&lt;/a>）。
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image" title="Non-commercial">&lt;img alt="" src="75px-Cc-nc.svg-163253623170044.png" decoding="async" width="75" height="75" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/db/Cc-nc.svg/113px-Cc-nc.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/db/Cc-nc.svg/150px-Cc-nc.svg.png 2x" data-file-width="64" data-file-height="64">&lt;/a>
&lt;/td>
&lt;td>&lt;b>非商业性使用&lt;/b>（英语：&lt;span lang="en">&lt;b>N&lt;/b>on&lt;b>c&lt;/b>ommercial&lt;/span>,&lt;b>nc&lt;/b> ）
&lt;/td>
&lt;td>您可以自由复制、散布、展示及演出本作品；您不得为&lt;a href="https://blog.echosec.top/wiki/%E5%95%86%E4%B8%9A" title="商业">商业&lt;/a>目的而使用本作品。
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image" title="Non-derivative">&lt;img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Cc-nd.svg/75px-Cc-nd.svg.png" decoding="async" width="75" height="75" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Cc-nd.svg/113px-Cc-nd.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Cc-nd.svg/150px-Cc-nd.svg.png 2x" data-file-width="64" data-file-height="64">&lt;/a>
&lt;/td>
&lt;td>&lt;b>禁止演绎&lt;/b>（英语：&lt;span lang="en">&lt;b>N&lt;/b>o &lt;b>D&lt;/b>erivative Works&lt;/span>，&lt;b>nd&lt;/b>)
&lt;/td>
&lt;td>您可以自由复制、散布、展示及演出本作品；您不得改变、转变或更改本作品。
&lt;/td>&lt;/tr>&lt;/tbody>&lt;/table>
&lt;table class="wikitable sortable jquery-tablesorter">
&lt;thead>&lt;tr>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">&lt;b>&lt;big>图标&lt;/big>&lt;/b>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">&lt;b>&lt;big>说明&lt;/big>&lt;/b>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">缩写
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">&lt;b>署名要求&lt;/b>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">混合作品
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">允许&lt;b>商业性使用&lt;/b>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">允许&lt;a title="自由文化作品定义">自由文化作品&lt;/a>
&lt;/th>
&lt;th class="headerSort" tabindex="0" role="columnheader button" title="升序排列">符合&lt;a title="开源定义">OKI&lt;/a>的“开放定义”
&lt;/th>&lt;/tr>&lt;/thead>&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC0 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/6/69/CC0_button.svg/100px-CC0_button.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/6/69/CC0_button.svg/150px-CC0_button.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/6/69/CC0_button.svg/200px-CC0_button.svg.png 2x" data-file-width="88" data-file-height="31">&lt;/a>
&lt;/td>
&lt;td>不受限制地在全球范围内发布内容
&lt;/td>
&lt;td>CC0&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">否&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/100px-CC-BY_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/150px-CC-BY_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/200px-CC-BY_icon.svg.png 2x" data-file-width="88" data-file-height="31">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）
&lt;/td>
&lt;td>BY&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY-SA 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/d0/CC-BY-SA_icon.svg/100px-CC-BY-SA_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/d0/CC-BY-SA_icon.svg/150px-CC-BY-SA_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/d0/CC-BY-SA_icon.svg/200px-CC-BY-SA_icon.svg.png 2x" data-file-width="88" data-file-height="31">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-相同方式共享（&lt;b>SA&lt;/b>）
&lt;/td>
&lt;td>BY-SA&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-by-NC 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/9/99/Cc-by-nc_icon.svg/100px-Cc-by-nc_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/99/Cc-by-nc_icon.svg/150px-Cc-by-nc_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/99/Cc-by-nc_icon.svg/200px-Cc-by-nc_icon.svg.png 2x" data-file-width="120" data-file-height="42">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-非商业性使用（&lt;b>NC&lt;/b>）
&lt;/td>
&lt;td>BY-NC&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY-NC-SA 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/1/12/Cc-by-nc-sa_icon.svg/100px-Cc-by-nc-sa_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/12/Cc-by-nc-sa_icon.svg/150px-Cc-by-nc-sa_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/12/Cc-by-nc-sa_icon.svg/200px-Cc-by-nc-sa_icon.svg.png 2x" data-file-width="120" data-file-height="42">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-非商业性使用（&lt;b>NC&lt;/b>）-相同方式共享（&lt;b>SA&lt;/b>）
&lt;/td>
&lt;td>BY-NC-SA&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY-ND 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/1/16/Cc-by-nd_icon.svg/100px-Cc-by-nd_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/16/Cc-by-nd_icon.svg/150px-Cc-by-nd_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/16/Cc-by-nd_icon.svg/200px-Cc-by-nd_icon.svg.png 2x" data-file-width="120" data-file-height="42">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-禁止演绎（&lt;b>ND&lt;/b>）
&lt;/td>
&lt;td>BY-ND&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-yes" style="text-align:center; background:#90FF90">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否
&lt;/td>&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="image">&lt;img alt="CC-BY-NC-ND 图标" src="//upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Cc-by-nc-nd_icon.svg/100px-Cc-by-nc-nd_icon.svg.png" decoding="async" width="100" height="35" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Cc-by-nc-nd_icon.svg/150px-Cc-by-nc-nd_icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Cc-by-nc-nd_icon.svg/200px-Cc-by-nc-nd_icon.svg.png 2x" data-file-width="120" data-file-height="42">&lt;/a>
&lt;/td>
&lt;td>署名（&lt;b>BY&lt;/b>）-非商业性使用（&lt;b>NC&lt;/b>）-禁止演绎（&lt;b>ND&lt;/b>）
&lt;/td>
&lt;td>BY-NC-ND&lt;/td>
&lt;td style="background: #ffff90; color: black; vertical-align: middle; text-align: center;" class="table-maybe">是&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否&lt;/td>
&lt;td class="table-no" style="text-align:center; background:#FF9090">否
&lt;/td>&lt;/tr>&lt;/tbody>&lt;tfoot>&lt;/tfoot>&lt;/table>
&lt;p>例如本站所使用的 &lt;a class="link" href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh" target="_blank" rel="noopener"
>&lt;code>CC BY-NC-SA 4.0&lt;/code>&lt;/a> 许可，署名-非商用-相同方式共享 4.0。&lt;/p>
&lt;h3 id="mit-许可协议">MIT 许可协议&lt;/h3>
&lt;p>&lt;span id="MIT许可协议">&lt;/span>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/wiki/MIT%e8%a8%b1%e5%8f%af%e8%ad%89" target="_blank" rel="noopener"
>MIT许可证 - 维基百科，自由的百科全书 (wikipedia.org)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>更大的权利与更少的限制&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>被许可人权利&lt;/strong>&lt;/p>
&lt;p>被许可人有权利使用、复制、修改、合并、出版发行、散布、再许可和/或贩售软件及软件的副本，及授予被供应人同等权利，惟服从以下义务（义务并非强制）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>被许可人义务&lt;/strong>&lt;/p>
&lt;p>在软件和软件的所有副本中都必须包含以上著作权声明和本许可声明。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="apache-许可协议">Apache 许可协议&lt;/h3>
&lt;h3 id="bsd-许可证">BSD 许可证&lt;/h3>
&lt;h3 id="gnu-通用公共许可证">GNU 通用公共许可证&lt;/h3>
&lt;h2 id="常见问题-知识产权">常见问题 [知识产权]&lt;/h2>
&lt;h3 id="转载引用抄袭原创的区别">转载，引用，抄袭，原创的区别&lt;/h3>
&lt;p>&lt;span id="转载，引用，抄袭，原创的区别">&lt;/span>&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：以下陈述为作者个人理解，完整词缀描述请查百科或相关法条。如下以“文章发表”为例子说明“著作权”的常见体现，同样的形式也用于“乐曲”“计算机软件”“影视作品”等实体，需要注意的是 &lt;code>idea&lt;/code> 不属于保护范围，仅有想法不落地不算侵权但也不受保护。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>原创&lt;/strong>：甲用户在知乎首发了一篇文章A，不属于改编、翻译、注释、整理他人已有创作而产生的作品。&lt;/p>
&lt;p>简单理解，如果文章是自己敲出来的，内容和观点或是文章标题都无法在网上查到相同的案例的，都可以认为是原创。但现在各个垂直领域的基础构建几乎无死角，不可能完全不涉及他人的理论研究成果，所以文章中出现引用是必要的也是必须的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>引用&lt;/strong>：乙用户在任何平台上发表文章B，使用了A文章中的数据或者结论，注明来源。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>篡改&lt;/strong>：乙用户在任何平台上发表文章B*，使用了A文章中的数据或者结论，注明来源，但对数据本身有所改动或将原文逻辑紧密的上下文断章取义放到自己的文章中用以强化自己的观点（歪曲理解）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>抄袭&lt;/strong>：丙用户在任何平台上发表文章C，将B或A中的内容分散融入到自己文章的上下文之中，不注明来源。&lt;/p>
&lt;p>抄得少叫“融入”，抄得多叫“复制粘贴 + 语序润色”。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>转载&lt;/strong>：丁用户复制（&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>C&lt;/kbd> ）粘贴（&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>V&lt;/kbd>）了一篇文章后在任何平台上发表。&lt;/p>
&lt;p>所以默认情况下转载就是侵权，除非获得原作者授权！（转载后的）文章中的“涉及侵权，请联系删除”等免责声明无法律效益。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="用别人的作品当头像侵权吗">用别人的作品当头像侵权吗?&lt;/h3>
&lt;p>&lt;span id="用别人的作品当头像侵权吗?">&lt;/span>&lt;/p>
&lt;p>用别人的画作为账号头像的，如果不以盈利为目的，仅仅作为头像使用的，一般不构成侵权。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>相关法条&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="http://www.lasrd.gov.cn/include/content.php?id=17101#:~:text=%E6%9D%83%E5%88%A9%E7%9A%84%E9%99%90%E5%88%B6-,%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E6%9D%A1,-%E5%9C%A8%E4%B8%8B%E5%88%97%E6%83%85%E5%86%B5" target="_blank" rel="noopener"
>《中华人民共和国著作权法》第二十二条&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://www.lasrd.gov.cn/include/content.php?id=17101#:~:text=%E5%92%8C%E6%89%A7%E6%B3%95%E6%8E%AA%E6%96%BD-,%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E6%9D%A1,-%E6%9C%89%E4%B8%8B%E5%88%97%E4%BE%B5" target="_blank" rel="noopener"
>《中华人民共和国著作权法》第四十七条&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="如涉及侵权请联系删除等免责声明是否有效">如“涉及侵权，请联系删除”等免责声明是否有效？&lt;/h3>
&lt;p>&lt;span id="如“涉及侵权，请联系删除”等免责声明是否有效？">&lt;/span>&lt;/p>
&lt;p>“先授权，后转载”是”著作权法“的强制规定，未经授权进行转载均构成侵权。&lt;/p>
&lt;p>（1）“未经许可，严禁转载”，对于网络内容提供者而言，无论“声明”与否，只要未经许可转载都算侵权。&lt;/p>
&lt;p>（2）“禁止转载”，顾名思义，不可转载。&lt;/p>
&lt;h2 id="法条索引">法条索引&lt;/h2>
&lt;h3 id="中华人民共和国著作权法">中华人民共和国著作权法&lt;/h3>
&lt;p>&lt;span id="中华人民共和国著作权法">&lt;/span>&lt;/p></description></item></channel></rss>