<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hello World on Echosec @QIN2DIM</title><link>https://blog.echosec.top/tags/hello-world/</link><description>Recent content in Hello World on Echosec @QIN2DIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 19 Sep 2021 23:40:03 +0800</lastBuildDate><atom:link href="https://blog.echosec.top/tags/hello-world/index.xml" rel="self" type="application/rss+xml"/><item><title>『 Hugo 』Hello Hugo</title><link>https://blog.echosec.top/p/hello-hugo/</link><pubDate>Sun, 19 Sep 2021 23:40:03 +0800</pubDate><guid>https://blog.echosec.top/p/hello-hugo/</guid><description>&lt;img src="https://blog.echosec.top/p/hello-hugo/2511065.jpg" alt="Featured image of post 『 Hugo 』Hello Hugo" />&lt;p>使用&lt;code>Hugo/theme:Stack + Github Pages&lt;/code> 快速搭建个人博客网站，足够轻量，包含最新特性，快速上手，记录一些容易踩的坑。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：若您将本博客作为您的部署参考指南，默认您拥有一枚可用的&lt;code>Github&lt;/code>账号，了解&lt;code>git&lt;/code>，&lt;code>bash/shell&lt;/code>常用指令，且您的本机运行环境中已预先安装&lt;code>hugo&lt;/code>脚手架。本篇博客的行内指令若无特殊说明，均在站点根目录下执行，请注意区别。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">ID&lt;/th>
&lt;th style="text-align:center">Content&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td style="text-align:center">Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo version&lt;/td>
&lt;td style="text-align:center">hugo v0.88.1-5BC54738+extended&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo theme&lt;/td>
&lt;td style="text-align:center">hugo-theme-Stack v3.2.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;h3 id="preview">Preview&lt;/h3>
&lt;p>我们需要知道当前版本中的 Github Pages 能创建在你的任意一个 Github Project 之上，而非一定要在&lt;code>yourname.github.io&lt;/code>上创建。但无论是哪种创建方式，都要遵守相应的部署规则，才能不报错，不出现路径定位异常等问题。&lt;/p>
&lt;p>其次，Github Pages 默认以你的 Project Repository 为项目根，意味着你&lt;strong>部署 Github Pages 的仓库首页&lt;/strong>应该存在如&lt;code>index.html&lt;/code>，&lt;code>404.html&lt;/code>等站点文件，参考组织结构如下图所示。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/Snipaste_2021-09-20_00-42-35.png"
width="2055"
height="730"
srcset="https://blog.echosec.top/p/hello-hugo/Snipaste_2021-09-20_00-42-35_hufbbd0cd106106cda9e414f3ca7ff70f3_79807_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/Snipaste_2021-09-20_00-42-35_hufbbd0cd106106cda9e414f3ca7ff70f3_79807_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="参考组织结构"
class="gallery-image"
data-flex-grow="281"
data-flex-basis="675px"
>&lt;/p>
&lt;p>显然，此处的“仓库首页”是你的 Pages 指向的 folder ，如下图所示。&lt;span id="select folder">&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920005037531.png"
width="1264"
height="402"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920005037531_hu6a14e650ccf543636d4c92a1e14b7c7b_57653_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920005037531_hu6a14e650ccf543636d4c92a1e14b7c7b_57653_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Pages 运行根"
class="gallery-image"
data-flex-grow="314"
data-flex-basis="754px"
>&lt;/p>
&lt;p>举个例子，你的用户名叫 &lt;code>xiaoming&lt;/code>，你创建了一个仓库叫 &lt;code>APIs-docs&lt;/code>，那么你的仓库链接是&lt;code>https://github.com/xiaoming/apis-docs&lt;/code>（大小写不敏感）。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>此时如果你的 &lt;code>Select folder = /(root)&lt;/code>，那么你直接访问上文所述仓库链接后，能直接在当前页面中看到&lt;code>index.html&lt;/code>等文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同理，&lt;code>Select folder = /docs&lt;/code>，那么你访问链接&lt;code>https://github.com/xiaoming/apis-docs/docs&lt;/code>后，也能在当前页面中看到 &lt;code>index.html&lt;/code>等文件，也即项目源码中&lt;strong>需要有&lt;/strong>这么个一个&lt;code>/docs&lt;/code>文件夹存放渲染好的站点信息。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>这个 &lt;strong>folder&lt;/strong> 非常关键，其为 &lt;strong>hugo&lt;/strong> 的编译输出文件夹，也即配置文件中 &lt;strong>publishDir&lt;/strong> 变量指明的相对路径，后文详细说明。&lt;/p>
&lt;h3 id="new-repository">New Repository&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>用你喜欢的方式创建一个仓库(Public)。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不建议初始化任何文件，这可能会造成不可预估的版本冲突问题，如果你想添加&lt;code>README.md&lt;/code>什么的，完全可以在你的站点部署成功后手动创建。本篇博客创建的demo不勾选初始化，若您实际操作与本步骤不符，请于后续步骤中选择对应的解决方案。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920010752399.png"
width="1460"
height="1568"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920010752399_hu71d7ba8a1a19543475da1add4920f60a_192494_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920010752399_hu71d7ba8a1a19543475da1add4920f60a_192494_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Create a new repository for demo"
class="gallery-image"
data-flex-grow="93"
data-flex-basis="223px"
>&lt;/p>
&lt;h3 id="hugo-scaffold">Hugo Scaffold&lt;/h3>
&lt;h4 id="new-site">New Site&lt;/h4>
&lt;blockquote>
&lt;p>此阶段使用脚手架迅速构建 hugo 项目并创建默认的目录结构。&lt;/p>
&lt;/blockquote>
&lt;p>找个比较可靠的位置启动你熟悉的CLI App(Terminal/bash/powershell)，按步骤执行如下指令。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>创建名为&lt;code>hello-hugo&lt;/code>的站点&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hugo new site hello-hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Congratulations! Your new Hugo site is created in E:&lt;span class="se">\_&lt;/span>GithubProjects&lt;span class="se">\m&lt;/span>yProfile&lt;span class="se">\h&lt;/span>ello-hugo.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Just a few more steps and you&lt;span class="err">&amp;#39;&lt;/span>re ready to go:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. Download a theme into the same-named folder.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Choose a theme from https://themes.gohugo.io/ or
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create your own with the &lt;span class="s2">&amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34;&lt;/span> command.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. Perhaps you want to add some content. You can add single files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with &lt;span class="s2">&amp;#34;hugo new &amp;lt;SECTIONNAME&amp;gt;\&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. Start the built-in live server via &lt;span class="s2">&amp;#34;hugo server&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Visit https://gohugo.io/ &lt;span class="k">for&lt;/span> quickstart guide and full documentation.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>进入站点根目录&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> hello-hugo/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>打印站点根目录下的文件&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">archetypes/ config.toml content/ data/ layouts/ static/ themes/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时一个完整的 hugo 项目已经创建完毕，现在需要修改配置文件，使其兼容 Github Pages 部署规则。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="update-configuration">Update Configuration&lt;/h4>
&lt;blockquote>
&lt;p>此阶段以demo的形式说明 &lt;code>Hugo + Github Pages&lt;/code>技术栈的核心配置。&lt;/p>
&lt;/blockquote>
&lt;p>以你喜欢的方式打开&lt;code>~/hello-hugo/config.toml&lt;/code>（也可能是其他后缀的配置文件，遵循对应的语法规则既可）并将其中的内容作如下更新：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">baseurl&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;https://yourname.github.io/hello-hugo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">publishDir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;docs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>全局变量 &lt;code>publishDir&lt;/code> 指明 hugo 的编译输出目录，其路径默认在站点根目录下(&lt;code>~/hello-hugo/&lt;/code>)，hugo 以此为根生成的静态站点。&lt;/p>
&lt;p>我们需要将 publishDir 与 Github Pages 的 folder 对应， folder 是 Github Pages 的渲染根目录。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>注意&lt;/strong>：请替换这里的&lt;code>yourname&lt;/code>为你的 &lt;code>Github UserName&lt;/code>，此处我们还没有拉取任何的主题，不需要跟着其他教程设置变量&lt;code>theme&lt;/code>。&lt;/li>
&lt;li>&lt;strong>注意&lt;/strong>：本博客选用 &lt;code>folder = “/docs”&lt;/code> 策略，需要添加 &lt;code>publishDir = &amp;quot;docs&amp;quot;&lt;/code> ，反之则不需要添加此行代码。值得一提的是，Github Pages 的执行根只有&lt;code>/(root)&lt;/code> 和&lt;code>/docs&lt;/code>两个选项，也即此处的 publishDir 要么不写(以&lt;code>./public&lt;/code>为项目根)，要么只能写 docs。&lt;/li>
&lt;/ul>
&lt;h4 id="remote-origin">Remote Origin&lt;/h4>
&lt;blockquote>
&lt;p>此阶段通过Git命令将 Hugo（本地文件） 与 Github Pages （远程仓库）组织结构对接。&lt;/p>
&lt;/blockquote>
&lt;p>还记得我们刚创建的 Repository 吗? 它的仓库链接是 &lt;code>https://github.com/yourname/hello-hugo.git&lt;/code>，同样，你需要更换此处的&lt;code>yourname&lt;/code>。&lt;/p>
&lt;p>按序执行如下指令，实现上下文对接两个强大的技术栈！&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>初始化 Git 环境&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initialized empty Git repository in E:/_GithubProjects/myProfile/hello-hugo/.git/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>链接远程仓库&lt;/strong>&lt;/p>
&lt;p>若您初次使用bash-git，需要进行身份验证。此处没有返回值说明操作成功。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git remote add origin https://github.com/qin2dim/hello-hugo.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>创建主分支&lt;/strong>&lt;/p>
&lt;p>因为此demo创建时不勾选初始化，默认情况下是没有分支的，需要手动创建。通过如下指令创建分支&lt;code>main&lt;/code>，并将其设为默认分支。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git branch -M main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>标注更改内容并创建 commit 缓存&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;committing hugo template&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>master &lt;span class="o">(&lt;/span>root-commit&lt;span class="o">)&lt;/span> 4e0cab8&lt;span class="o">]&lt;/span> committing hugo template
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">2&lt;/span> files changed, &lt;span class="m">9&lt;/span> insertions&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> archetypes/default.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> config.toml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>将标注信息推送至远程仓库&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -u origin main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enumerating objects: 5, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counting objects: 100% &lt;span class="o">(&lt;/span>5/5&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Delta compression using up to &lt;span class="m">16&lt;/span> threads
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Compressing objects: 100% &lt;span class="o">(&lt;/span>4/4&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Writing objects: 100% &lt;span class="o">(&lt;/span>5/5&lt;span class="o">)&lt;/span>, &lt;span class="m">483&lt;/span> bytes &lt;span class="p">|&lt;/span> 241.00 KiB/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total &lt;span class="m">5&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: This repository moved. Please use the new location:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: https://github.com/QIN2DIM/hello-hugo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To https://github.com/qin2dim/hello-hugo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * &lt;span class="o">[&lt;/span>new branch&lt;span class="o">]&lt;/span> main -&amp;gt; main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> &lt;span class="nb">set&lt;/span> up to track remote branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> from &lt;span class="s1">&amp;#39;origin&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>查看远程仓库&lt;/strong>&lt;/p>
&lt;p>若您按照如上所述步骤操作，此时打开你的远程仓库，能看到如下目录结构。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920015937151.png"
width="2043"
height="764"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920015937151_huf2c00499ff8ca77d289c654553d6f18b_145226_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920015937151_huf2c00499ff8ca77d289c654553d6f18b_145226_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bingo Operation"
class="gallery-image"
data-flex-grow="267"
data-flex-basis="641px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="select-folder">Select Folder&lt;/h3>
&lt;p>访问&lt;code>https://github.com/yourname/hello-hugo/settings/pages&lt;/code>指定你的运行根，记得保存设置。本博客指定&lt;code>/docs&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920021554554.png"
width="2043"
height="1171"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920021554554_hu716309a10cbb47c175328d4551dd22a2_189094_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920021554554_hu716309a10cbb47c175328d4551dd22a2_189094_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Select Folder"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>&lt;/p>
&lt;p>不要着急，到此为止您的站点还无法访问，若您兴致勃勃地启动&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，你会看到如下经典一幕。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920021940601.png"
width="960"
height="533"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920021940601_hu5d1d34b06f2d4ae39826ed72a8e4c2a5_42484_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920021940601_hu5d1d34b06f2d4ae39826ed72a8e4c2a5_42484_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Pages 404"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;h3 id="hugo-publishdir">Hugo PublishDir&lt;/h3>
&lt;p>回到我们的本地操作环境，是不是感觉少了点什么？是的，还记得我们一开始提到 Github Pages 的渲染首页么？&lt;code>index.html&lt;/code>去哪里了？既然不在首页，那也应该在&lt;code>./docs&lt;/code> 里呀（若不指定&lt;code>config.toml&lt;/code>中的变量&lt;code>publishDir&lt;/code>,则默认为&lt;code>./public&lt;/code>）&lt;/p>
&lt;p>是的，到此为止我们仅仅是创建了hugo的项目目录，但仍未进行hugo项目的初始化（首次构建）。&lt;/p>
&lt;p>执行如下命令编译你的Hugo：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Start building sites …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo v0.88.1-5BC54738+extended windows/amd64 &lt;span class="nv">BuildDate&lt;/span>&lt;span class="o">=&lt;/span>2021-09-04T09:39:19Z &lt;span class="nv">VendorInfo&lt;/span>&lt;span class="o">=&lt;/span>gohugoio
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;home&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;taxonomy&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;taxonomy&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> EN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------+-----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pages &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Paginator pages &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non-page files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Static files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Processed images &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aliases &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sitemaps &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cleaned &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total in &lt;span class="m">57&lt;/span> ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打印目录：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">archetypes/ content/ docs/ resources/ themes/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">config.toml data/ layouts/ static/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这不来了嘛，&lt;code>./docs&lt;/code>目录出现了，我们打印一下这个此目录的内容看看。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ls ./docs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">categories/ index.xml sitemap.xml tags/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>咦，怎么只有&lt;code>index.xml&lt;/code>，后缀不太对，不要着急，我们还没有配置任何Hugo主题。&lt;/p>
&lt;p>我们尝试将更改推送至远程仓库，看看情况对不对。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;hugo init&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>main 7301327&lt;span class="o">]&lt;/span> hugo init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">4&lt;/span> files changed, &lt;span class="m">41&lt;/span> insertions&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> docs/categories/index.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> docs/index.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> docs/sitemap.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create mode &lt;span class="m">100644&lt;/span> docs/tags/index.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -u origin main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enumerating objects: 10, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counting objects: 100% &lt;span class="o">(&lt;/span>10/10&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Delta compression using up to &lt;span class="m">16&lt;/span> threads
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Compressing objects: 100% &lt;span class="o">(&lt;/span>7/7&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Writing objects: 100% &lt;span class="o">(&lt;/span>9/9&lt;span class="o">)&lt;/span>, 1.12 KiB &lt;span class="p">|&lt;/span> 381.00 KiB/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total &lt;span class="m">9&lt;/span> &lt;span class="o">(&lt;/span>delta 2&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Resolving deltas: 100% &lt;span class="o">(&lt;/span>2/2&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: This repository moved. Please use the new location:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: https://github.com/QIN2DIM/hello-hugo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To https://github.com/qin2dim/hello-hugo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> b233f02..7301327 main -&amp;gt; main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> &lt;span class="nb">set&lt;/span> up to track remote branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> from &lt;span class="s1">&amp;#39;origin&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>访问你的项目仓库，发现高贵的&lt;code>./docs&lt;/code>文件出现了！&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920023448448.png"
width="2063"
height="588"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920023448448_huc92538f6d9744f936093acf9d109a515_111998_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920023448448_huc92538f6d9744f936093acf9d109a515_111998_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20210920023448448"
class="gallery-image"
data-flex-grow="350"
data-flex-basis="842px"
>&lt;/p>
&lt;p>访问你的站点网址&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，你会发现这里不再404，渲染出来的是XML文档信息。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920023604807.png"
width="1353"
height="361"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920023604807_huf40ff1284a76b277aba37277a86ba617_73690_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920023604807_huf40ff1284a76b277aba37277a86ba617_73690_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20210920023604807"
class="gallery-image"
data-flex-grow="374"
data-flex-basis="899px"
>&lt;/p>
&lt;p>至此，你的 &lt;code>Hugo + Github Pages&lt;/code> 技术栈已经构建完毕，接下来我们要为站点配置主题，也是注入灵魂的部分。本篇博客选用的演示主题为&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a>。&lt;/p>
&lt;h2 id="match-theme">Match theme&lt;/h2>
&lt;p>此阶段以 &lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a> 为demo说明如何将站点可视模块渲染出来，也是整个构建过程最关键的步骤之一。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>拉取主题文件&lt;/strong>&lt;/p>
&lt;p>为了方便使用Git来管理Hugo站点的源文件，我们需要将主题添加为 Submodule：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行日志如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cloning into &lt;span class="s1">&amp;#39;E:/_GithubProjects/myProfile/hello-hugo/themes/hugo-theme-stack&amp;#39;&lt;/span>...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Enumerating objects: 3085, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Counting objects: 100% &lt;span class="o">(&lt;/span>1000/1000&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Compressing objects: 100% &lt;span class="o">(&lt;/span>405/405&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote: Total &lt;span class="m">3085&lt;/span> &lt;span class="o">(&lt;/span>delta 782&lt;span class="o">)&lt;/span>, reused &lt;span class="m">667&lt;/span> &lt;span class="o">(&lt;/span>delta 587&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">2085&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Receiving objects: 100% &lt;span class="o">(&lt;/span>3085/3085&lt;span class="o">)&lt;/span>, 836.78 KiB &lt;span class="p">|&lt;/span> 3.17 MiB/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Resolving deltas: 100% &lt;span class="o">(&lt;/span>1944/1944&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果是第一次使用本主题，建议把 &lt;code>exampleSite&lt;/code> 文件夹中的 &lt;code>config.yaml&lt;/code> 和主题目录下的 &lt;code>assets&lt;/code> 复制到站点目录下。前者是 Hugo 站点的配置文件，已经写入了主题的可配置字段。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp ./themes/hugo-theme-stack/exampleSite/config.yaml ./config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp -a ./themes/hugo-theme-stack/assets ./assets
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>注意&lt;/strong>：当前版本中，Stack使用&lt;code>.yaml&lt;/code>配置文件，为了预防不必要的冲突，我们选择将构建 Hugo 时初始化的&lt;code>config.toml&lt;/code>移除。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rm ./config.toml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>配置主题&lt;/strong>&lt;/p>
&lt;p>以你喜欢的方式打开位于站点根目录下的&lt;code>config.yaml&lt;/code>文件，该文件用于配置Stack主题站点的各项参数。详细参数的解释请参考 &lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a> ，此处仅介绍关键配置。&lt;/p>
&lt;p>如上文介绍的那样，这里至少要配置两个参数，既&lt;code>baseURL&lt;/code>以及&lt;code>publishDir&lt;/code>。安如下提示所示，修改变量&lt;code>baseURL&lt;/code>并添加变量&lt;code>publishDir&lt;/code>声明。修改完毕记得保存。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">baseurl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://yourname.github.io/hello-hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">publishDir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处同样需要注意替换&lt;code>yourname&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>注入魔法&lt;/strong>&lt;/p>
&lt;p>执行&lt;code>hugo&lt;/code>更新编译状态，然后将更新信息推送至远程仓库，然后访问你的项目仓库，查看推送结果。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;introduce hugo-theme-stack&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920032205977.png"
width="2048"
height="893"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920032205977_hu4935d34d8b4e15fd2d5ddcd18dcfde57_177528_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920032205977_hu4935d34d8b4e15fd2d5ddcd18dcfde57_177528_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bingo Ace-Agent"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="550px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;p>访问&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，查看您部署的站点。您也可以预览作者按照如上步骤快速搭建的&lt;a class="link" href="https://qin2dim.github.io/hello-hugo" target="_blank" rel="noopener"
>Demo Site&lt;/a>。&lt;/p>
&lt;p>可能会有的小伙伴觉得本篇博客的搭建过程比较啰嗦，目前此技术栈的构建已有成熟的解决方案几乎能在任何操作系统上实现&lt;code>hugo + github pages&lt;/code>自动化部署。其实嘛- -作者认为“教程”是分享给其他人看的，需要拆分工作流，这样能让读者明确自己所在的位置，出了问题容易定位；若使用“一键脚本”，新手读者很难明晰其中的原理，很可能于后续的站点维护更新中举步维艰。&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>本篇博客详细阐述了如何在 Windows 平台上通过简单指令凭借&lt;code>Hugo + Github Pages&lt;/code>技术栈快速搭建个人站点，并提供了Demo Site。作者后续会更新更多关于此技术栈的其他内容，帮助您美化，管理、升级个人站点。&lt;/p>
&lt;hr>
&lt;p>如下为示例站点的目录结构，作者将以Blog写作为例总结此技术栈的实现流程，请注意，如下所有指令操作若无特殊说明，均默认在 hello-hugo 目录下执行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">hello-hugo
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── archetypes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── assets
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── content
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── data
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── docs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── layouts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── resources
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ├── static
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> └── themes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>关于站点根目录下各个文件夹(work field)的详细介绍请阅读官方文档&lt;a class="link" href="https://gohugo.io/getting-started/directory-structure/" target="_blank" rel="noopener"
>Directory Structure | Hugo (gohugo.io)&lt;/a>，此处仅在介绍工作流时涉及几个关键的文件夹。&lt;/p>
&lt;p>关于此技术栈的工作流总结如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>创建Blog&lt;/strong>&lt;/p>
&lt;p>在站点根目录&lt;code>hello-hugo&lt;/code>下新建&amp;quot;blog&amp;quot;，如&lt;code>hugo new post/blog.md&lt;/code>，默认创建在&lt;code>~/content/post/blog.md&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new post/blog.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打开这个 Markdown文件，可以看见头部声名中&lt;code>draft: true&lt;/code>默认为草稿模式（不同主题规则不同），需要置&lt;code>draft: false&lt;/code>，该篇内容才会被渲染出来，否则会被过滤。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920041943845.png"
width="473"
height="132"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920041943845_huf76ddedfe236afcd9bb66aa0b6357368_9675_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920041943845_huf76ddedfe236afcd9bb66aa0b6357368_9675_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="草稿模式"
class="gallery-image"
data-flex-grow="358"
data-flex-basis="860px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>启动本地&lt;code>hugo&lt;/code>服务器&lt;/strong>&lt;/p>
&lt;p>在站点根目录&lt;code>hello-hugo&lt;/code>下创建本地服务器&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>启动后根据打印日志查看入口，如&lt;code>http://localhost:8745/hello-hugo/ &lt;/code>，端口号不一定与此相同，默认是1313，若有冲突则会随机更换。&lt;/p>
&lt;p>这里的文档都是热加载编译，我们对项目文件的更改将直接同步到本地服务上，如&lt;strong>Blog的书写&lt;/strong>，&lt;strong>配置文件的改动&lt;/strong>以及&lt;strong>目录文件的调整&lt;/strong>等等。于是，我们编写的内容可以实时提现在站点上，方便修改调试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>缓存更新&lt;/strong>&lt;/p>
&lt;p>当你的工作结束后，停止&lt;code>local hugo-server&lt;/code>进程。你的工作进度会被自动编译到&lt;code>publishDir&lt;/code>变量指向的文件夹中（如本例的&lt;code>./docs&lt;/code>）。当然你也可以在工作结束后手动更新缓存。也即你的每一个对 hugo 的更改，如果你想体现在Github Pages 中,一定不要忘了在 Push 之前更新一下缓存。&lt;/p>
&lt;p>后续文章中，作者将介绍如何使用&lt;code>Github Actions&lt;/code>在你 Push 后自动化更新&lt;code>publishDir&lt;/code>下的文件，无需繁再 Push 前手动更新缓存，进一步偷懒。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo &lt;span class="o">(&lt;/span>main&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Start building sites …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo v0.88.1-5BC54738+extended windows/amd64 &lt;span class="nv">BuildDate&lt;/span>&lt;span class="o">=&lt;/span>2021-09-04T09:39:19Z &lt;span class="nv">VendorInfo&lt;/span>&lt;span class="o">=&lt;/span>gohugoio
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 04:04:53 Search page not found. Create a page with layout: search.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN 2021/09/20 04:04:53 Archives page not found. Create a page with layout: archives.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> EN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------+-----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pages &lt;span class="p">|&lt;/span> &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Paginator pages &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non-page files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Static files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Processed images &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aliases &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sitemaps &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cleaned &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total in &lt;span class="m">183&lt;/span> ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>资源推送&lt;/strong>&lt;/p>
&lt;p>这里推荐使用 &lt;a class="link" href="https://desktop.github.com/" target="_blank" rel="noopener"
>Github Desktop&lt;/a> 推送仓库更新。自动扫描变更，一件推送，相比于每次更新都要手敲git代码方便很多。&lt;/p>
&lt;p>&lt;img src="https://blog.echosec.top/p/hello-hugo/image-20210920040811507.png"
width="2101"
height="1009"
srcset="https://blog.echosec.top/p/hello-hugo/image-20210920040811507_hu0511d169e31c7bfedfa24dd053c8f944_138470_480x0_resize_box_3.png 480w, https://blog.echosec.top/p/hello-hugo/image-20210920040811507_hu0511d169e31c7bfedfa24dd053c8f944_138470_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Desktop 推送资源"
class="gallery-image"
data-flex-grow="208"
data-flex-basis="499px"
>&lt;/p>
&lt;p>若您缺少可靠的解决方案,那只能老实敲代码了:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;description of this change&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>查看更新&lt;/strong>&lt;/p>
&lt;p>访问站点，查看推送结果。Github Pages 集成需要一点时间，如果你没能在推送后立即看到“改变”也不要慌，稍微等一会刷新一下既可。&lt;/p>
&lt;p>同样，若你在本地调改动资源并 auto-rebuild 后，体现在站点上的内容并没有立即改变，可以先&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>C&lt;/kbd>停止进程，r然后执行下面的命令回收垃圾，并重新部署既可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo --gc &lt;span class="c1"># 垃圾回收&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo server &lt;span class="c1"># 重新启动本地服务&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>The world’s fastest framework for building websites | Hugo (gohugo.io)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/" target="_blank" rel="noopener"
>介绍 | Hugo 主题 Stack (jimmycai.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>