<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Echosec @QIN2DIM</title><link>https://qin2dim.github.io/</link><description>Recent content on Echosec @QIN2DIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Sep 2021 20:23:13 +0800</lastBuildDate><atom:link href="https://qin2dim.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>『 Hugo 』Shortcode</title><link>https://qin2dim.github.io/p/hugo-shortcode/</link><pubDate>Wed, 22 Sep 2021 20:23:13 +0800</pubDate><guid>https://qin2dim.github.io/p/hugo-shortcode/</guid><description>&lt;img src="https://qin2dim.github.io/p/hugo-shortcode/technology-3189176_1920.jpg" alt="Featured image of post 『 Hugo 』Shortcode" />&lt;h2 id="youtube">YouTube&lt;/h2>
&lt;blockquote>
&lt;p>插入视频：&lt;code>https://www.youtube.com/watch?v=vmkRMvhCW5c&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">youtube&lt;/span> &lt;span class="na">vmkRMvhCW5c&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/vmkRMvhCW5c"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;h2 id="本地视频">本地视频&lt;/h2>
&lt;blockquote>
&lt;p>插入视频：&lt;code>./尊严！只在剑锋之上.mp4&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">video&lt;/span> &lt;span class="err">&amp;#34;./&lt;/span>&lt;span class="na">尊严&lt;/span>&lt;span class="err">！&lt;/span>&lt;span class="na">只在剑锋之上&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">mp4&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="video-wrapper">
&lt;video
controls
src="./%e5%b0%8a%e4%b8%a5%ef%bc%81%e5%8f%aa%e5%9c%a8%e5%89%91%e9%94%8b%e4%b9%8b%e4%b8%8a.mp4"
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="./%e5%b0%8a%e4%b8%a5%ef%bc%81%e5%8f%aa%e5%9c%a8%e5%89%91%e9%94%8b%e4%b9%8b%e4%b8%8a.mp4">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;h2 id="哔哩哔哩">哔哩哔哩&lt;/h2>
&lt;blockquote>
&lt;p>插入视频：&lt;code>https://www.bilibili.com/video/BV1Yv41147QK&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">bilibili&lt;/span> &lt;span class="na">BV1Yv41147QK&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="video-wrapper">
&lt;iframe src="https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1Yv41147QK"
scrolling="no"
frameborder="no"
framespacing="0"
allowfullscreen="true"
>
&lt;/iframe>
&lt;/div>
&lt;h2 id="腾讯视频">腾讯视频&lt;/h2>
&lt;blockquote>
&lt;p>插入视频：&lt;code>https://v.qq.com/x/page/y00408t8246.html&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">\{\{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">tencent&lt;/span> &lt;span class="na">y00408t8246&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="video-wrapper">
&lt;iframe src="https://v.qq.com/txp/iframe/player.html?vid=y00408t8246&amp;auto=0"
scrolling="no"
frameborder="no"
framespacing="0"
allowfullscreen="true"
>
&lt;/iframe>
&lt;/div>
&lt;h2 id="西瓜视频">西瓜视频&lt;/h2>
&lt;h2 id="搜狐视频">搜狐视频&lt;/h2>
&lt;h2 id="优酷视频">优酷视频&lt;/h2></description></item><item><title>『 Hugo 』Blog Comments System</title><link>https://qin2dim.github.io/p/blog-comments-system/</link><pubDate>Mon, 20 Sep 2021 19:38:45 +0800</pubDate><guid>https://qin2dim.github.io/p/blog-comments-system/</guid><description>&lt;img src="https://qin2dim.github.io/p/blog-comments-system/keyboard-648440_1920.jpg" alt="Featured image of post 『 Hugo 』Blog Comments System" />&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>本篇博客分享如何在 &lt;a class="link" href="https://github.com/gohugoio/hugo" target="_blank" rel="noopener"
>Hugo&lt;/a> 中快速部署 &lt;a class="link" href="https://github.com/utterance" target="_blank" rel="noopener"
>utteranc&lt;/a> 博客评论系统。&lt;/p>
&lt;p>此外，作者在压测环境下做了一系列针对该系统的实验。任何你对这个系统可能遇到的极端情况，以及想知道结果但不敢操作的相关行为的代价都详细记录在了文章末尾的 Conclusion中，望有助。&lt;/p>
&lt;p>作者所使用的测试环境是 &lt;strong>Hugo/&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/configuration/#comments" target="_blank" rel="noopener"
>theme:Stack&lt;/a> + Github Pages&lt;/strong>，使用的环境信息如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">ID&lt;/th>
&lt;th style="text-align:center">Content&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td style="text-align:center">Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo version&lt;/td>
&lt;td style="text-align:center">hugo v0.88.1-5BC54738+extended&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo theme&lt;/td>
&lt;td style="text-align:center">hugo-theme-Stack v3.2.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意&lt;/strong>： 若您将本篇博客作为您部署 utterances 的参考思路，默认您已具备一个可以正常运作的 Hugo 个人站点。&lt;/p>
&lt;h2 id="what-utterances">WHAT utterances&lt;/h2>
&lt;p>&lt;code>utterances&lt;/code> 是一种基于 GitHub issues 构建，可以将 GitHub issues 作为博客评论载体的轻量级评论小部件。截止至2020/09/21，此项目扔拥有以下特性：&lt;/p>
&lt;ul>
&lt;li>完全开源&lt;/li>
&lt;li>不追踪流量，没有广告，完全免费&lt;/li>
&lt;li>不阻断流量，所有的评论数据都会存储在你指定的Repository中&lt;/li>
&lt;li>基于&lt;a class="link" href="https://primer.style/" target="_blank" rel="noopener"
>Primer&lt;/a>设计，这是一种Github官方提供的CSS工具包（相较之下有更好的兼容性和性能提升）&lt;/li>
&lt;li>支持暗黑模式（Dark theme）&lt;/li>
&lt;li>足够轻量，完美兼容 Markdown 语法，没有字体缓存或 JavaScript frameworks 依赖&lt;/li>
&lt;/ul>
&lt;h2 id="why-utterances">WHY utterances&lt;/h2>
&lt;p>为什么选择&lt;code>utterances&lt;/code>？主要原因如上文所示，&lt;code>utterances&lt;/code> 是一种基于 Github 生态孵化的足够轻量的部件，在使用同为 Github 产品 Github Pages 的前提下，使用”同源产品“能够方便我们管理资源的储备及分布。此外，”同源“意味着它比其他”第三方“产品具备更好的兼容性及运行效率，从技术选型上符合”足够使用，不需要过度折腾“的普世需求。&lt;/p>
&lt;p>此外，对于国内技术用户来说有更大的便捷之处。选择 &lt;code>utterances&lt;/code> 作为博客评论系统的多大技术出身，此类技术博客的访客通常也人手一个 Github 账号。因此， Github 一键授权后，“评论发布” 与 “issues 分发” 都将畅通无阻，而非像部分第三方系统，还需使用者注册额外账号获取 Token 并鉴权后才能回复，这样绕一圈非常耗时，可能有的系统站点还被墙了，部分访客无法访问。&lt;/p>
&lt;p>当然，还有许多 Github 同源产品，以及一些优秀的第三方产品，这里不过多介绍了。截至目前 Hugo 支持的评论系统对比如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Provider&lt;/th>
&lt;th style="text-align:center">Github Platform&lt;/th>
&lt;th style="text-align:center">Markdown&lt;/th>
&lt;th style="text-align:center">Open Source&lt;/th>
&lt;th style="text-align:center">No ADs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">disqus&lt;/td>
&lt;td style="text-align:center">❌&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">❌&lt;/td>
&lt;td style="text-align:center">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;strong>utterances&lt;/strong>&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">remark42&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">vssue&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">waline&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">twikoo&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">giscus&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">gitalk&lt;/td>
&lt;td style="text-align:center">✅&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="how-utterances">HOW utterances&lt;/h2>
&lt;h3 id="how-it-works">How it works&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>utterances&lt;/code> 工作流大致如下：&lt;/p>
&lt;p>当你的站点首次部署 &lt;code>utterances&lt;/code> 时，它会定期（频率很快）扫描你的站点，如果发现有新的留言，会依照对应的规则（title/url/pathname）在你的 &lt;code>comments-repo&lt;/code> 里提交 issue 。比如，你选择的规则是 &lt;code>title&lt;/code>, 那么你的文章标题会被作为 &lt;code>Issue Title&lt;/code> 提交到 &lt;code>comments-repo&lt;/code> ；如果你选的规则是 &lt;code>pathname&lt;/code>，那么文章对应的访问路径就会成为你的 &lt;code>Issue Title&lt;/code>; &lt;code>url&lt;/code>同理，只是在&lt;code>pathname&lt;/code>前加上了域名标签。&lt;/p>
&lt;p>当访客（首次使用 &lt;code>utterances&lt;/code> 系统）评论时，需要先进行 Github OAth API 授权，涉及的权限是允许 &lt;code>utterances&lt;/code> 控制访客账号向你的 &lt;code>comments-repo&lt;/code> 提交留言。&lt;/p>
&lt;p>值得一提的是，当你首次成功部署&lt;code>utterances&lt;/code>后，它并不会自动扫描你的站点并为你所有的文章都创建一个对应的初始化 issue 发送到你的仓库，它只会监听自它被部署后新出现的评论，如果这个被评论的文章没有提过 issue，才会携带相关信息提交 issue，如果已存在 issue（该篇文章被 &lt;strong>utterances-user&lt;/strong> 评论过），则会携带相关信息盖楼（在同 issue 下留言，而非继续创建）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当有访客来到这发表评论时，会经过如下过程：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;figure
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/utteranc-workflow-16322305582472.svg" >
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/utteranc-workflow-16322305582472.svg"
loading="lazy"
alt="utterances-workflow">
&lt;/a>
&lt;figcaption>utterances-workflow&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>上图 &lt;code>utterances-workflow&lt;/code> 提到了几个关键节点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>comments-repo&lt;/code>：用于存放用户评论信息的仓库&lt;/p>
&lt;p>意味着我们需要创建一个 Repository 存放 blog comments&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>utterances-bot&lt;/code>：用于处理其他 Github 用户提交的 comment&lt;/p>
&lt;p>意味着我们需要在这个 Repository ( &lt;code>comments-repo&lt;/code> ) 中下载 &lt;code>utterances&lt;/code>，包含授权以及机器人一条龙管家服务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="how-to-use-utterances-on-hugo">How to use utterances on Hugo&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>New a Public Repository, such as &amp;lsquo;comments-repo&amp;rsquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Change the configuration of your Hugo site-code.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># ~/config.yaml &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 再次声明，本博客使用 Stack 主题作为分享参考，此主题使用.yaml 格式配置文件，且预先写好了 utterances 接口网页，意味着仅需改动配置文件就能使用。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 如果你至此的所有环境与操作都与作者相同，那恭喜你马上就要通关了！&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 如果你的主题用其他格式文件，注意语法的调整。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 如果你的主题没有携带 utterances 脚本代码，请在~/layouts/partials/comments/provider/ 目录下新建一个 utterances.html 文件，并在里面输入下一个代码块中的内容。如何判断你的主题是否支持 utterances 呢？ 查看 ~/themes/&amp;lt;your-theme&amp;gt;/layouts/partials/comments/provider/ 目录下是否存在 utterances.html 既可。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 全局配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">params&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 留言系统设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">comments&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 评论系统提供商。目前支持的有：disqus utterances remark42 vssue waline twikoo giscus gitalk&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">utterances&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 关于 utterances 的具体配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">utterances&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># repo 必填项，指向你的`comments-repo`，参照写法如 qin2dim/blog-comments 注意别加.github.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">repo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;GithubUserName&amp;gt;/&amp;lt;RepositoryName&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># issueTerm: 必填项，issue标题的切分规则，可写 pathname title url&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">issueTerm&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pathname&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># theme 必填项，评论区的主题&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 可选 github-light github-dark preferred-color-scheme &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># github-dark-origin lcy-dark dark-blue photon-dark boxy-light&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">theme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github-light&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># label 可选项，提交的issue的默认标签，不填则不打标签。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">// utterances.html template of theme, Stack
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://utteranc.es/client.js&amp;#34;&lt;/span>
&lt;span class="na">repo&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Site.Params.comments.utterances.repo }}&amp;#34;&lt;/span>
&lt;span class="na">issue-term&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Site.Params.comments.utterances.issueTerm }}&amp;#34;&lt;/span>
&lt;span class="err">{{&lt;/span> &lt;span class="na">with&lt;/span> &lt;span class="err">.&lt;/span>&lt;span class="na">Site&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">Params&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">comments&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">utterances&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">label&lt;/span> &lt;span class="err">}}&lt;/span>
&lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ . }}&amp;#34;&lt;/span>
&lt;span class="err">{{&lt;/span> &lt;span class="na">end&lt;/span> &lt;span class="err">}}&lt;/span>
&lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>
&lt;span class="na">async&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">utterances&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">max-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">unset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setUtterancesTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">theme&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">utterances&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.utterances iframe&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">utterances&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">utterances&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contentWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">postMessage&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;set-theme&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">theme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`github-&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">theme&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s1">&amp;#39;https://utteranc.es&amp;#39;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">event&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">origin&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s1">&amp;#39;https://utteranc.es&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">setUtterancesTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">documentElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scheme&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;onColorSchemeChange&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">setUtterancesTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Install utterances for your &amp;lsquo;comments-repo&amp;rsquo; .&lt;/p>
&lt;p>访问 &lt;a class="link" href="https://github.com/apps/utterances" target="_blank" rel="noopener"
>utterances&lt;/a> 为你的仓库下载执行脚本。切记仅对你存储评论的仓库下载脚本（Only select repositories）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Git the utterances-bot to operate your &amp;lsquo;comments-repo&amp;rsquo;.&lt;/p>
&lt;p>再次访问 &lt;a class="link" href="https://github.com/apps/utterances" target="_blank" rel="noopener"
>utterances&lt;/a> 授予机器人操作仓库的权限（Configure）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Enjoy your live.&lt;/p>
&lt;p>本地启动 Hugo 服务器，或者推送启动了评论功能的站点代码，直接访问你的 Github Pages，测试评论功能。&lt;/p>
&lt;p>&lt;img src="image-20210921221634558.png" style="zoom: 50%;" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>本地 hugo server 提交的评论也会被 utterances-bot 收录到 issues 中&lt;/strong>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 191;
flex-basis: 458px"
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/image-20210921222542719.png" data-size="2015x1054">
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/image-20210921222542719.png"
width="2015"
height="1054"
srcset="https://qin2dim.github.io/p/blog-comments-system/image-20210921222542719_hud5dc7da48c84aefbe260857398577f80_237619_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/blog-comments-system/image-20210921222542719_hud5dc7da48c84aefbe260857398577f80_237619_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Comments-repo">
&lt;/a>
&lt;figcaption>Comments-repo&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>直接在 issues 中发送的留言，也被会 utterances-bot 转发到 issues 对应的博客评论区中&lt;/strong>&lt;/p>
&lt;p>值得一提的是，如果你此时正在本地运行 hugo server，有人在 issue 中发送新的留言，你能直接在 local server 中接收到这个信息，意味着你的文章评论区会直接渲染出更新的内容（如果你是 fast render 模式，需要刷新一下页面）。 同理，已经部署发布的站点也能收到这些讯息（实时更新）。&lt;/p>
&lt;p>&lt;img src="image-20210921223843970.png" alt="image-20210921223843970" style="zoom:67%;" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>从 utterances-bot 被成功部署的时刻算起，被评论过的文章才会被映射成 issue 收录进 comments-repository 中&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>作为仓库的创建者，你有权删除任何 issue&lt;/strong>&lt;/p>
&lt;p>一个已创建的评论 issue 后被删除，其盖楼评论会一起消失，意味着 issue 对应博客下的所有评论都会被瞬间清空。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>作为仓库的创建者，你有权 close/reopen 任何 issue，但这并不影响评论系统的正常运转&lt;/strong>&lt;/p>
&lt;p>如下图所示，作者先手动关闭了一个评论 issue，观察到稍后在博客中的留言依然可以被转发进来。此时 issue 仍保持&lt;code>close&lt;/code>状态，并不会因为有新的动态而&lt;code>reopen&lt;/code>。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 135;
flex-basis: 325px"
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/image-20210921230424682.png" data-size="1484x1093">
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/image-20210921230424682.png"
width="1484"
height="1093"
srcset="https://qin2dim.github.io/p/blog-comments-system/image-20210921230424682_hu1e9cf67bbeff687ab88bdea8c44593ef_132420_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/blog-comments-system/image-20210921230424682_hu1e9cf67bbeff687ab88bdea8c44593ef_132420_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="B signal from hugo server">
&lt;/a>
&lt;figcaption>B signal from hugo server&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>同样，从&lt;code>closed issue&lt;/code>中发的言论，仍会被同步到 issue 对应的博客评论区中，如下图所示。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 332;
flex-basis: 798px"
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/image-20210921230722030.png" data-size="2708x814">
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/image-20210921230722030.png"
width="2708"
height="814"
srcset="https://qin2dim.github.io/p/blog-comments-system/image-20210921230722030_hu5cb2465af768e815f71b2160a2c767b6_220402_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/blog-comments-system/image-20210921230722030_hu5cb2465af768e815f71b2160a2c767b6_220402_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="A signal from closed issue">
&lt;/a>
&lt;figcaption>A signal from closed issue&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>从 issue 中被删去的留言，在 issue 对应文章的评论区中的留言也会被同步删除&lt;/strong>&lt;/p>
&lt;p>但是在博客中确无法找到删除留言的元素，意味着博客留言者想要移除/修改自己已发表的评论，需要到 comments-repo 仓库这里修改。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>映射网址无法自动调整&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>还记得Conclusion 的第一条总结吗，机器人会提供一条反射信息，是一个直接指向该篇博客的访问链接。通常情况下这时正常运作的，但如果这篇文章的第一条评论是你在本地测试时直接在 hugo server 上发送的，那反射信息就会如图中显示的那样指向http:localhost:1313/xxx，这是一个非常糟糕的情况，后续作者在部署站点上更新的评论，依然无法让机器人自动调整反射网址。如果你这么做了，你可能手动修改issue中的反射信息，否则他无法指向正确的博客链接。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>机器人提供的反射域名并不会因为你设置了CNAME而有所改变，依然会是&lt;code>https://Yourname.github.io/xxxx&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>utterances 具备一定的“跟踪”能力&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如第一条 Conclusion 所示，当你的文章被标记收录后，机器人会提供你的文章标题以及副标题信息。即使你未来改变了这些信息（title，description），issue中的已被提供的这些信息不会自行变更，但这并不影响评论系统正常运行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>但如果你修改了文章的&lt;code>slug&lt;/code>也即修改了文章对应的检索路径（重启本地服务器后生效），这篇文章挂载的评论信息会“丢失”。同样，你在更新了 slug 的文章发送的评论，会被机器人以新的 issue 提交到你的 comments-repo，显然，首层占楼的反射信息指向了你变更后的博客网址。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 261;
flex-basis: 627px"
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/image-20210921234029895.png" data-size="777x297">
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/image-20210921234029895.png"
width="777"
height="297"
srcset="https://qin2dim.github.io/p/blog-comments-system/image-20210921234029895_hu1bd586458df5d8d6ae2be592aa6608b3_36524_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/blog-comments-system/image-20210921234029895_hu1bd586458df5d8d6ae2be592aa6608b3_36524_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Issues of the comments-repo">
&lt;/a>
&lt;figcaption>Issues of the comments-repo&lt;/figcaption>
&lt;/figure>&lt;figure
class="gallery-image"
style="
flex-grow: 190;
flex-basis: 457px"
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/image-20210921234644893.png" data-size="774x406">
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/image-20210921234644893.png"
width="774"
height="406"
srcset="https://qin2dim.github.io/p/blog-comments-system/image-20210921234644893_hudbd65d4969dde2f3d85137308f6c050d_41588_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/blog-comments-system/image-20210921234644893_hudbd65d4969dde2f3d85137308f6c050d_41588_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="YAML Font Matter of Markdown">
&lt;/a>
&lt;figcaption>YAML Font Matter of Markdown&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>utterances 跟踪你的网址而非你的标题&lt;/strong>&lt;/p>
&lt;p>是的，猜想是对的。当你将文章的&lt;code>slug&lt;/code>改回去后，这篇文章所挂载的评论区又回来了。意味着只要不删除 issue，评论信息并不会真正 &amp;ldquo;丢失&amp;rdquo;。&lt;/p>
&lt;p>换句话说，你可以随意修改文章标题以及副标题，但不要随意修改文章的网页路径&lt;code>slug&lt;/code>，这是一项危险的操作，除非你做好了数据迁移的准备。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 comments-repo 中人为提交的 issue 会作为评论被同步到对应的文章中吗？&lt;/p>
&lt;p>答：不可以！但是，只有第一条不可以！&lt;/p>
&lt;p>以下为一条规则正确的 issue ，他被正确指向作者的“Hello Hugo”这篇博客，创建 issue 时发送了一局“Could you do it?”在博客评论区中没有提现。而后作者在同个评论区中发言“:rocket: Can you make it?” 却能经过转发，体现在 issue 中，可以看到作者头像右下角出现了 utterances 的标志。之后，作者在 issue 中连续发送的两条消息都能被转发到博客评论区中。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 224;
flex-basis: 538px"
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/image-20210922003310596.png" data-size="1014x452">
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/image-20210922003310596.png"
width="1014"
height="452"
srcset="https://qin2dim.github.io/p/blog-comments-system/image-20210922003310596_hu981c248986aad23bed7f866441828a2e_53573_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/blog-comments-system/image-20210922003310596_hu981c248986aad23bed7f866441828a2e_53573_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure
class="gallery-image"
style="
flex-grow: 228;
flex-basis: 548px"
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/image-20210922003342805.png" data-size="925x405">
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/image-20210922003342805.png"
width="925"
height="405"
srcset="https://qin2dim.github.io/p/blog-comments-system/image-20210922003342805_huc15c305d86fce6746c1b59d0c14683d5_33040_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/blog-comments-system/image-20210922003342805_huc15c305d86fce6746c1b59d0c14683d5_33040_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 159;
flex-basis: 382px"
>
&lt;a href="https://qin2dim.github.io/p/blog-comments-system/image-20210922004416298.png" data-size="1740x1092">
&lt;img src="https://qin2dim.github.io/p/blog-comments-system/image-20210922004416298.png"
width="1740"
height="1092"
srcset="https://qin2dim.github.io/p/blog-comments-system/image-20210922004416298_hueac024d129ac77b04b71d418a6c4c7c6_286614_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/blog-comments-system/image-20210922004416298_hueac024d129ac77b04b71d418a6c4c7c6_286614_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="被动通信">
&lt;/a>
&lt;figcaption>被动通信&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://utterances.es/?installation_id=19642746&amp;amp;setup_action=install" target="_blank" rel="noopener"
>utterances&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/utterance" target="_blank" rel="noopener"
>utterances (github.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>The world’s fastest framework for building websites | Hugo (gohugo.io)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/configuration/#comments" target="_blank" rel="noopener"
>配置主题 | Hugo 主题 Stack (jimmycai.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Hugo 』Typlog Atlas</title><link>https://qin2dim.github.io/p/typlog-atlas/</link><pubDate>Mon, 20 Sep 2021 19:38:28 +0800</pubDate><guid>https://qin2dim.github.io/p/typlog-atlas/</guid><description>&lt;img src="https://qin2dim.github.io/p/typlog-atlas/topic.png" alt="Featured image of post 『 Hugo 』Typlog Atlas" />&lt;h2 id="demo">DEMO&lt;/h2>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 66;
flex-basis: 160px"
>
&lt;a href="https://qin2dim.github.io/p/typlog-atlas/IMG_5395.jpg" data-size="3257x4885">
&lt;img src="https://qin2dim.github.io/p/typlog-atlas/IMG_5395.jpg"
width="3257"
height="4885"
srcset="https://qin2dim.github.io/p/typlog-atlas/IMG_5395_hu2a5c815046d1543c42e798457ad5314d_6666683_480x0_resize_q75_box.jpg 480w, https://qin2dim.github.io/p/typlog-atlas/IMG_5395_hu2a5c815046d1543c42e798457ad5314d_6666683_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure
class="gallery-image"
style="
flex-grow: 66;
flex-basis: 160px"
>
&lt;a href="https://qin2dim.github.io/p/typlog-atlas/IMG_2992.jpg" data-size="2688x4032">
&lt;img src="https://qin2dim.github.io/p/typlog-atlas/IMG_2992.jpg"
width="2688"
height="4032"
srcset="https://qin2dim.github.io/p/typlog-atlas/IMG_2992_hu28bbd280ade207f644fc1e629f5d4496_4886553_480x0_resize_q75_box.jpg 480w, https://qin2dim.github.io/p/typlog-atlas/IMG_2992_hu28bbd280ade207f644fc1e629f5d4496_4886553_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure
class="gallery-image"
style="
flex-grow: 149;
flex-basis: 359px"
>
&lt;a href="https://qin2dim.github.io/p/typlog-atlas/IMG_5502.jpg" data-size="5797x3865">
&lt;img src="https://qin2dim.github.io/p/typlog-atlas/IMG_5502.jpg"
width="5797"
height="3865"
srcset="https://qin2dim.github.io/p/typlog-atlas/IMG_5502_hu76cc990b57d2904a4a5aaad8b6d423aa_2350861_480x0_resize_q75_box.jpg 480w, https://qin2dim.github.io/p/typlog-atlas/IMG_5502_hu76cc990b57d2904a4a5aaad8b6d423aa_2350861_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 150;
flex-basis: 360px"
>
&lt;a href="https://qin2dim.github.io/p/typlog-atlas/IMG_5080.jpg" data-size="6000x4000">
&lt;img src="https://qin2dim.github.io/p/typlog-atlas/IMG_5080.jpg"
width="6000"
height="4000"
srcset="https://qin2dim.github.io/p/typlog-atlas/IMG_5080_hu64bb4a98e708af93b67eddf26681e167_1955383_480x0_resize_q75_box.jpg 480w, https://qin2dim.github.io/p/typlog-atlas/IMG_5080_hu64bb4a98e708af93b67eddf26681e167_1955383_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure
class="gallery-image"
style="
flex-grow: 66;
flex-basis: 160px"
>
&lt;a href="https://qin2dim.github.io/p/typlog-atlas/IMG_4893.jpg" data-size="3903x5854">
&lt;img src="https://qin2dim.github.io/p/typlog-atlas/IMG_4893.jpg"
width="3903"
height="5854"
srcset="https://qin2dim.github.io/p/typlog-atlas/IMG_4893_hue25010fc06f7240390c3c616179f3151_16863397_480x0_resize_q75_box.jpg 480w, https://qin2dim.github.io/p/typlog-atlas/IMG_4893_hue25010fc06f7240390c3c616179f3151_16863397_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure
class="gallery-image"
style="
flex-grow: 66;
flex-basis: 160px"
>
&lt;a href="https://qin2dim.github.io/p/typlog-atlas/IMG_5674.jpg" data-size="4000x6000">
&lt;img src="https://qin2dim.github.io/p/typlog-atlas/IMG_5674.jpg"
width="4000"
height="6000"
srcset="https://qin2dim.github.io/p/typlog-atlas/IMG_5674_hu8c01a0eb20a3cf32220a6562416c4b71_16880583_480x0_resize_q75_box.jpg 480w, https://qin2dim.github.io/p/typlog-atlas/IMG_5674_hu8c01a0eb20a3cf32220a6562416c4b71_16880583_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;hr>
&lt;h2 id="what-typlog">What Typlog&lt;/h2>
&lt;p>&lt;strong>Typlog 相册语法&lt;/strong> 是一种基于 Markdown 图像插入语法的，能将你插入到 Markdown 文本中的图片渲染呈现“瀑布流”排版效果的一种嵌入式插件。&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/writing/#%E6%8F%92%E5%85%A5%E7%9B%B8%E5%86%8C" target="_blank" rel="noopener"
>Stack@Hugo主题&lt;/a> 借鉴支持 &lt;a class="link" href="https://blog.typlog.com/images" target="_blank" rel="noopener"
>Typlog 相册语法&lt;/a>，该主题已获原作者 &lt;a class="link" href="https://lepture.com/" target="_blank" rel="noopener"
>Lepture&lt;/a> 授权。&lt;/p>
&lt;h2 id="why-typlog">Why Typlog&lt;/h2>
&lt;p>&lt;strong>Typlog 相册语法&lt;/strong> 能够丰富你的 Markdown 正文内容，也能在需要的地方增加信息浓度。&lt;/p>
&lt;h2 id="how-typlog">How Typlog&lt;/h2>
&lt;h3 id="how-to-insert-a-picture-by-markdown-syntax">How to insert a picture by Markdown syntax&lt;/h3>
&lt;p>Markdown 插入图片的语法规则如下所示。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">![&lt;span class="nt">alt text for the image&lt;/span>](&lt;span class="na">src of the image&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>此处的 &lt;code>src&lt;/code> 可以是本地资源路径，也可以是网络图片的链接（如果目标资源设置了防盗链，可能无法直接在&lt;code>webview&lt;/code>中使用）。&lt;/p>
&lt;p>Markdown 插入图片的用法如下代码块所示。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">![&lt;span class="nt">local source&lt;/span>](&lt;span class="na">hello-hugo.jpg&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">![&lt;span class="nt">remote source&lt;/span>](&lt;span class="na">https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="how-to-insert-a-picture-by-typlog-syntax">How to insert a picture by Typlog syntax&lt;/h3>
&lt;p>Typlog 语法格式基于上述代码实现。“瀑布流”排版效果实现起来非常简单，&lt;strong>仅需将&lt;code>Syntax Block&lt;/code>按照你的意愿进行“堆叠”，插入的图片就会被“等比例调整”实现自动排版效果&lt;/strong>。&lt;/p>
&lt;p>实现&lt;code>2 × 2&lt;/code>矩阵图的自动排版参考语法如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">![&lt;span class="nt">img-1&lt;/span>](&lt;span class="na">image1.jpg&lt;/span>)![&lt;span class="nt">img-2&lt;/span>](&lt;span class="na">image2.jpg&lt;/span>)
![&lt;span class="nt">img-3&lt;/span>](&lt;span class="na">image3.jpg&lt;/span>)![&lt;span class="nt">img-4&lt;/span>](&lt;span class="na">image4.jpg&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>实现&lt;code>1 × 2 + 1 + 1 x 2&lt;/code>矩阵图的自动排版参考语法如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src1&lt;/span>) ![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src2&lt;/span>)
![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src3&lt;/span>)
![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src4&lt;/span>) ![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src5&lt;/span>) ![&lt;span class="nt">alt&lt;/span>](&lt;span class="na">https://image/src6&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Typlog 作为一个由 Stack 引入的拓展插件，仅能在你的 Hugo 站点上生效，而本地编辑 Markdown 的工具（如 Typora）在默认情况下是不会提现 Typlog 的排版效果的。&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://pixabay.com/images/search/?cat=feelings&amp;amp;colors=gray" target="_blank" rel="noopener"
>Pixabay&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/writing/#%e6%8f%92%e5%85%a5%e7%9b%b8%e5%86%8c" target="_blank" rel="noopener"
>开始创作 | Hugo 主题 Stack&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.typlog.com/images" target="_blank" rel="noopener"
>Images in Typlog - Type A Log&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Awesome 』Root</title><link>https://qin2dim.github.io/p/awesome-resources/</link><pubDate>Mon, 20 Sep 2021 05:00:48 +0800</pubDate><guid>https://qin2dim.github.io/p/awesome-resources/</guid><description>&lt;img src="https://qin2dim.github.io/p/awesome-resources/cover.jpg" alt="Featured image of post 『 Awesome 』Root" />&lt;h2 id="aggregator">Aggregator&lt;/h2>
&lt;blockquote>
&lt;p>聚合引擎。&lt;/p>
&lt;/blockquote>
&lt;h3 id="network-security">Network Security&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://hack.coolzhanweb.com/#term-7" target="_blank" rel="noopener"
>黑客导航 | 安全网址导航&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://start.me/p/X20Apn" target="_blank" rel="noopener"
>听风者情报源&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="toolbox">ToolBox&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://ujuji.com/" target="_blank" rel="noopener"
>优聚集&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="http://www.ucdrs.superlib.net/" target="_blank" rel="noopener"
>全国图书馆参考咨询联盟 (superlib.net)&lt;/a> | &lt;a class="link" href="https://www.duxiu.com/login.jsp?backurl=&amp;amp;num=&amp;amp;username=&amp;amp;refer=&amp;amp;flag=true" target="_blank" rel="noopener"
>读秀网&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="curiosity">Curiosity&lt;/h2>
&lt;blockquote>
&lt;p>一些猎奇网站。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.yikm.net/" target="_blank" rel="noopener"
>小霸王，其乐无穷&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://zoom.earth/" target="_blank" rel="noopener"
>Zoom Earth | 实时气象卫星图像&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="excellent-ers">Excellent ERs&lt;/h2>
&lt;blockquote>
&lt;p>汇总各个主题下优秀的博主以及细分领域极具代表性的开源工程项目。（TODO 需细化分类）&lt;/p>
&lt;/blockquote>
&lt;h3 id="blogeryoutuber">Bloger/Youtuber&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.youtube.com/watch?v=XKZM_AjCUr0" target="_blank" rel="noopener"
>Youtuber|电玩科技AK&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.v2rayssr.com/" target="_blank" rel="noopener"
>Youtuber|波仔&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="http://www.ruanyifeng.com/home.html" target="_blank" rel="noopener"
>Bloger|阮一峰&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.duyaoss.com/" target="_blank" rel="noopener"
>Bloger|DuyaoSS-机场测速和简介&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://10beasts.net/" target="_blank" rel="noopener"
>Bloger|Barry-10BeastsVPN测评&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.wangluotizi.com/" target="_blank" rel="noopener"
>Bloger|梯子大神&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;hellip;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="project">Project&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/XTLS" target="_blank" rel="noopener"
>Project X &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/v2ray" target="_blank" rel="noopener"
>Project V &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/trojan-gfw" target="_blank" rel="noopener"
>Trojan-GFW&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/p4gefau1t/trojan-go" target="_blank" rel="noopener"
>Trojan-Go&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;blockquote>
&lt;p>开眼看世界，送给CN编程菜鸟的一份礼物。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.githubs.cn/" target="_blank" rel="noopener"
>GitHub中文社区 &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://hellogithub.com/" target="_blank" rel="noopener"
>HelloGitHub 分享 GitHub 上入门级、有趣的开源项目&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.w3schools.com/" target="_blank" rel="noopener"
>W3Schools Online Web Tutorials&lt;/a> | &lt;a class="link" href="https://www.w3school.com.cn/" target="_blank" rel="noopener"
>w3school 在线教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="material">Material&lt;/h2>
&lt;blockquote>
&lt;p>(免费)素材站点，包括但不限于图标，图片，视频模板以及BT种子网站。&lt;/p>
&lt;/blockquote>
&lt;h3 id="bt-stream">BT-Stream&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.mypianku.net/" target="_blank" rel="noopener"
>片库 - 全网高清影视聚合下载 (mypianku.net)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="icons">Icons&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://icons8.com/" target="_blank" rel="noopener"
>Free Icons, Clipart Illustrations, Photos, and Music (icons8.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://emojixd.com/" target="_blank" rel="noopener"
>🤣 Emoji表情大全，颜文字百科 💌 - EmojiXD&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://iconstore.co/" target="_blank" rel="noopener"
>Free icons by first-class designers | Iconstore&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="pictures">Pictures&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://pixabay.com/zh/" target="_blank" rel="noopener"
>Pixabay&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.pexels.com/zh-cn/" target="_blank" rel="noopener"
>Pexels&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://foter.com/" target="_blank" rel="noopener"
>Foter&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="videos">videos&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.aigei.com/" target="_blank" rel="noopener"
>爱给网_音效配乐_3D模型_视频素材_游戏素材_免费下载 (aigei.com)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://unsplash.com/t/film" target="_blank" rel="noopener"
>Film | Unsplash&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://mixkit.co/" target="_blank" rel="noopener"
>Mixkit - Awesome free assets for your next video project&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="osint">OSINT&lt;/h2>
&lt;blockquote>
&lt;p>开源情报分析框架，囊括了你在网络上以非接触方式了解一个人的各种渠道。&lt;/p>
&lt;/blockquote>
&lt;h3 id="search-engine">Search Engine&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://gibiru.com/" target="_blank" rel="noopener"
>Gibiru – Protecting your privacy since 2009&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://duckduckgo.com/?q=&amp;amp;atb=v1-1" target="_blank" rel="noopener"
>DuckDuckGo — 隐私保护，化繁为简。&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://crt.sh/?" target="_blank" rel="noopener"
>crt.sh | Certificate Search&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.zoomeye.org/component" target="_blank" rel="noopener"
>ZoomEye - Cyberspace Search Engine&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://weixin.sogou.com/" target="_blank" rel="noopener"
>搜狗微信搜索_订阅号及文章内容独家收录，一搜即达 (sogou.com)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.opengps.cn/Data/IP/ipplus.aspx" target="_blank" rel="noopener"
>高精度IP定位4 - openGPS.cn&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cn.linkedin.com/pub/dir?lastName=&amp;amp;firstName=%e8%a2%81%e5%8d%9a&amp;amp;trk=public_profile_people-search-bar_search-submit" target="_blank" rel="noopener"
>领英 | Linkedin&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.reg007.com/" target="_blank" rel="noopener"
>你注册过哪些网站？一搜便知 - REG007&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="tech-blog">Tech Blog&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.secjuice.com/tag/osint/" target="_blank" rel="noopener"
>OSINT - Secjuice&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://pentester.land/" target="_blank" rel="noopener"
>Pentester Land · Offensive Infosec&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://ahrefs.com/blog/google-advanced-search-operators/" target="_blank" rel="noopener"
>Google Search Operators&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://osintframework.com/" target="_blank" rel="noopener"
>OSINT Framework&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="tools-for-breaking-privacy">Tools for Breaking Privacy&lt;/h3>
&lt;h4 id="global">Global&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://t.me/FreeSGKbot?start=SGKHSBMGGW" target="_blank" rel="noopener"
>@FreeSGKbot&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://whatsmyname.app/" target="_blank" rel="noopener"
>WhatsMyName Web&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="cn-people">CN People&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="http://www.cltt.org/studentscore" target="_blank" rel="noopener"
>全国普通话培训测试信息资源网&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://account.chsi.com.cn/account/password!retrive" target="_blank" rel="noopener"
>找回密码_学信网&lt;/a> | &lt;a class="link" href="https://account.chsi.com.cn/account/password!rtvlgname" target="_blank" rel="noopener"
>找回用户名_学信网&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="tools-for-reasoning">Tools for Reasoning&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="http://suncalc.net/" target="_blank" rel="noopener"
>suncalc&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="programming">Programming&lt;/h2>
&lt;blockquote>
&lt;p>与编程相关的一些站点&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://deepsource.io/" target="_blank" rel="noopener"
>DeepSource: Fast and reliable static analysis platform&lt;/a>&lt;/p>
&lt;p>代码质量检测，自动集成，扫描代码中的bug，反模式编程，以及非范式编程。&lt;/p>
&lt;p>支持 PYTHON, JAVASCRIPT, RUBY, GO, TERRAFORM, JAVA, COVERAGE&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>『 Hugo 』Hello Hugo</title><link>https://qin2dim.github.io/p/hello-hugo/</link><pubDate>Sun, 19 Sep 2021 23:40:03 +0800</pubDate><guid>https://qin2dim.github.io/p/hello-hugo/</guid><description>&lt;img src="https://qin2dim.github.io/p/hello-hugo/coffee-2511065_1920.jpg" alt="Featured image of post 『 Hugo 』Hello Hugo" />&lt;p>使用&lt;code>Hugo/theme:Stack + Github Pages&lt;/code> 快速搭建个人博客网站，足够轻量，包含最新特性，快速上手，记录一些容易踩的坑。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：若您将本博客作为您的部署参考指南，默认您拥有一枚可用的&lt;code>Github&lt;/code>账号，了解&lt;code>git&lt;/code>，&lt;code>bash/shell&lt;/code>常用指令，且您的本机运行环境中已预先安装&lt;code>hugo&lt;/code>脚手架。本篇博客的行内指令若无特殊说明，均在站点根目录下执行，请注意区别。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">ID&lt;/th>
&lt;th style="text-align:center">Content&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td style="text-align:center">Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo version&lt;/td>
&lt;td style="text-align:center">hugo v0.88.1-5BC54738+extended&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">hugo theme&lt;/td>
&lt;td style="text-align:center">hugo-theme-Stack v3.2.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;h3 id="preview">Preview&lt;/h3>
&lt;p>我们需要知道当前版本中的 Github Pages 能创建在你的任意一个 Github Project 之上，而非一定要在&lt;code>yourname.github.io&lt;/code>上创建。但无论是哪种创建方式，都要遵守相应的部署规则，才能不报错，不出现路径定位异常等问题。&lt;/p>
&lt;p>其次，Github Pages 默认以你的 Project Repository 为项目根，意味着你&lt;strong>部署 Github Pages 的仓库首页&lt;/strong>应该存在如&lt;code>index.html&lt;/code>，&lt;code>404.html&lt;/code>等站点文件，参考组织结构如下图所示。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 281;
flex-basis: 675px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/Snipaste_2021-09-20_00-42-35.png" data-size="2055x730">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/Snipaste_2021-09-20_00-42-35.png"
width="2055"
height="730"
srcset="https://qin2dim.github.io/p/hello-hugo/Snipaste_2021-09-20_00-42-35_hufbbd0cd106106cda9e414f3ca7ff70f3_79807_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/Snipaste_2021-09-20_00-42-35_hufbbd0cd106106cda9e414f3ca7ff70f3_79807_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="参考组织结构">
&lt;/a>
&lt;figcaption>参考组织结构&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>显然，此处的“仓库首页”是你的 Pages 指向的 folder ，如下图所示。&lt;span id="select folder">&lt;/span>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 314;
flex-basis: 754px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920005037531.png" data-size="1264x402">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920005037531.png"
width="1264"
height="402"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920005037531_hu6a14e650ccf543636d4c92a1e14b7c7b_57653_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920005037531_hu6a14e650ccf543636d4c92a1e14b7c7b_57653_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Pages 运行根">
&lt;/a>
&lt;figcaption>Github Pages 运行根&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>举个例子，你的用户名叫 &lt;code>xiaoming&lt;/code>，你创建了一个仓库叫 &lt;code>APIs-docs&lt;/code>，那么你的仓库链接是&lt;code>https://github.com/xiaoming/apis-docs&lt;/code>（大小写不敏感）。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>此时如果你的 &lt;code>Select folder = /(root)&lt;/code>，那么你直接访问上文所述仓库链接后，能直接在当前页面中看到&lt;code>index.html&lt;/code>等文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同理，&lt;code>Select folder = /docs&lt;/code>，那么你访问链接&lt;code>https://github.com/xiaoming/apis-docs/docs&lt;/code>后，也能在当前页面中看到 &lt;code>index.html&lt;/code>等文件，也即项目源码中&lt;strong>需要有&lt;/strong>这么个一个&lt;code>/docs&lt;/code>文件夹存放渲染好的站点信息。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>这个 &lt;strong>folder&lt;/strong> 非常关键，其为 &lt;strong>hugo&lt;/strong> 的编译输出文件夹，也即配置文件中 &lt;strong>publishDir&lt;/strong> 变量指明的相对路径，后文详细说明。&lt;/p>
&lt;h3 id="new-repository">New Repository&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>用你喜欢的方式创建一个仓库(Public)。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不建议初始化任何文件，这可能会造成不可预估的版本冲突问题，如果你想添加&lt;code>README.md&lt;/code>什么的，完全可以在你的站点部署成功后手动创建。本篇博客创建的demo不勾选初始化，若您实际操作与本步骤不符，请于后续步骤中选择对应的解决方案。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 93;
flex-basis: 223px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920010752399.png" data-size="1460x1568">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920010752399.png"
width="1460"
height="1568"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920010752399_hu71d7ba8a1a19543475da1add4920f60a_192494_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920010752399_hu71d7ba8a1a19543475da1add4920f60a_192494_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Create a new repository for demo">
&lt;/a>
&lt;figcaption>Create a new repository for demo&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="hugo-scaffold">Hugo Scaffold&lt;/h3>
&lt;h4 id="new-site">New Site&lt;/h4>
&lt;blockquote>
&lt;p>此阶段使用脚手架迅速构建 hugo 项目并创建默认的目录结构。&lt;/p>
&lt;/blockquote>
&lt;p>找个比较可靠的位置启动你熟悉的CLI App(Terminal/bash/powershell)，按步骤执行如下指令。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>创建名为&lt;code>hello-hugo&lt;/code>的站点&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile&lt;/span>
$ hugo new site hello-hugo
Congratulations! Your new Hugo site is created in E:&lt;span class="se">\_&lt;/span>GithubProjects&lt;span class="se">\m&lt;/span>yProfile&lt;span class="se">\h&lt;/span>ello-hugo.
Just a few more steps and you&lt;span class="err">&amp;#39;&lt;/span>re ready to go:
1. Download a theme into the same-named folder.
Choose a theme from https://themes.gohugo.io/ or
create your own with the &lt;span class="s2">&amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34;&lt;/span> command.
2. Perhaps you want to add some content. You can add single files
with &lt;span class="s2">&amp;#34;hugo new &amp;lt;SECTIONNAME&amp;gt;\&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;#34;&lt;/span>.
3. Start the built-in live server via &lt;span class="s2">&amp;#34;hugo server&amp;#34;&lt;/span>.
Visit https://gohugo.io/ &lt;span class="k">for&lt;/span> quickstart guide and full documentation.
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>进入站点根目录&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile&lt;/span>
$ &lt;span class="nb">cd&lt;/span> hello-hugo/
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>打印站点根目录下的文件&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo&lt;/span>
$ ls
archetypes/ config.toml content/ data/ layouts/ static/ themes/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时一个完整的 hugo 项目已经创建完毕，现在需要修改配置文件，使其兼容 Github Pages 部署规则。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="update-configuration">Update Configuration&lt;/h4>
&lt;blockquote>
&lt;p>此阶段以demo的形式说明 &lt;code>Hugo + Github Pages&lt;/code>技术栈的核心配置。&lt;/p>
&lt;/blockquote>
&lt;p>以你喜欢的方式打开&lt;code>~/hello-hugo/config.toml&lt;/code>（也可能是其他后缀的配置文件，遵循对应的语法规则既可）并将其中的内容作如下更新：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">baseurl&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;https://yourname.github.io/hello-hugo&amp;#34;&lt;/span>
&lt;span class="nx">publishDir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;docs&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>全局变量 &lt;code>publishDir&lt;/code> 指明 hugo 的编译输出目录，其路径默认在站点根目录下(&lt;code>~/hello-hugo/&lt;/code>)，hugo 以此为根生成的静态站点。&lt;/p>
&lt;p>我们需要将 publishDir 与 Github Pages 的 folder 对应， folder 是 Github Pages 的渲染根目录。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>注意&lt;/strong>：请替换这里的&lt;code>yourname&lt;/code>为你的 &lt;code>Github UserName&lt;/code>，此处我们还没有拉取任何的主题，不需要跟着其他教程设置变量&lt;code>theme&lt;/code>。&lt;/li>
&lt;li>&lt;strong>注意&lt;/strong>：本博客选用 &lt;code>folder = “/docs”&lt;/code> 策略，需要添加 &lt;code>publishDir = &amp;quot;docs&amp;quot;&lt;/code> ，反之则不需要添加此行代码。值得一提的是，Github Pages 的执行根只有&lt;code>/(root)&lt;/code> 和&lt;code>/docs&lt;/code>两个选项，也即此处的 publishDir 要么不写(以&lt;code>./public&lt;/code>为项目根)，要么只能写 docs。&lt;/li>
&lt;/ul>
&lt;h4 id="remote-origin">Remote Origin&lt;/h4>
&lt;blockquote>
&lt;p>此阶段通过Git命令将 Hugo（本地文件） 与 Github Pages （远程仓库）组织结构对接。&lt;/p>
&lt;/blockquote>
&lt;p>还记得我们刚创建的 Repository 吗? 它的仓库链接是 &lt;code>https://github.com/yourname/hello-hugo.git&lt;/code>，同样，你需要更换此处的&lt;code>yourname&lt;/code>。&lt;/p>
&lt;p>按序执行如下指令，实现上下文对接两个强大的技术栈！&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>初始化 Git 环境&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo&lt;/span>
$ git init
Initialized empty Git repository in E:/_GithubProjects/myProfile/hello-hugo/.git/
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>链接远程仓库&lt;/strong>&lt;/p>
&lt;p>若您初次使用bash-git，需要进行身份验证。此处没有返回值说明操作成功。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
$ git remote add origin https://github.com/qin2dim/hello-hugo.git
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>创建主分支&lt;/strong>&lt;/p>
&lt;p>因为此demo创建时不勾选初始化，默认情况下是没有分支的，需要手动创建。通过如下指令创建分支&lt;code>main&lt;/code>，并将其设为默认分支。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
$ git branch -M main
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>标注更改内容并创建 commit 缓存&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
$ git add .
&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (master)&lt;/span>
$ git commit -m &lt;span class="s2">&amp;#34;committing hugo template&amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span>master &lt;span class="o">(&lt;/span>root-commit&lt;span class="o">)&lt;/span> 4e0cab8&lt;span class="o">]&lt;/span> committing hugo template
&lt;span class="m">2&lt;/span> files changed, &lt;span class="m">9&lt;/span> insertions&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>
create mode &lt;span class="m">100644&lt;/span> archetypes/default.md
create mode &lt;span class="m">100644&lt;/span> config.toml
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>将标注信息推送至远程仓库&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ git push -u origin main
Enumerating objects: 5, &lt;span class="k">done&lt;/span>.
Counting objects: 100% &lt;span class="o">(&lt;/span>5/5&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
Delta compression using up to &lt;span class="m">16&lt;/span> threads
Compressing objects: 100% &lt;span class="o">(&lt;/span>4/4&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
Writing objects: 100% &lt;span class="o">(&lt;/span>5/5&lt;span class="o">)&lt;/span>, &lt;span class="m">483&lt;/span> bytes &lt;span class="p">|&lt;/span> 241.00 KiB/s, &lt;span class="k">done&lt;/span>.
Total &lt;span class="m">5&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">0&lt;/span>
remote: This repository moved. Please use the new location:
remote: https://github.com/QIN2DIM/hello-hugo.git
To https://github.com/qin2dim/hello-hugo.git
* &lt;span class="o">[&lt;/span>new branch&lt;span class="o">]&lt;/span> main -&amp;gt; main
Branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> &lt;span class="nb">set&lt;/span> up to track remote branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> from &lt;span class="s1">&amp;#39;origin&amp;#39;&lt;/span>.
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>查看远程仓库&lt;/strong>&lt;/p>
&lt;p>若您按照如上所述步骤操作，此时打开你的远程仓库，能看到如下目录结构。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 267;
flex-basis: 641px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920015937151.png" data-size="2043x764">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920015937151.png"
width="2043"
height="764"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920015937151_huf2c00499ff8ca77d289c654553d6f18b_145226_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920015937151_huf2c00499ff8ca77d289c654553d6f18b_145226_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bingo Operation">
&lt;/a>
&lt;figcaption>Bingo Operation&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="select-folder">Select Folder&lt;/h3>
&lt;p>访问&lt;code>https://github.com/yourname/hello-hugo/settings/pages&lt;/code>指定你的运行根，记得保存设置。本博客指定&lt;code>/docs&lt;/code>。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 174;
flex-basis: 418px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920021554554.png" data-size="2043x1171">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920021554554.png"
width="2043"
height="1171"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920021554554_hu716309a10cbb47c175328d4551dd22a2_189094_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920021554554_hu716309a10cbb47c175328d4551dd22a2_189094_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Select Folder">
&lt;/a>
&lt;figcaption>Select Folder&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>不要着急，到此为止您的站点还无法访问，若您兴致勃勃地启动&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，你会看到如下经典一幕。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 180;
flex-basis: 432px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920021940601.png" data-size="960x533">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920021940601.png"
width="960"
height="533"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920021940601_hu5d1d34b06f2d4ae39826ed72a8e4c2a5_42484_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920021940601_hu5d1d34b06f2d4ae39826ed72a8e4c2a5_42484_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Pages 404">
&lt;/a>
&lt;figcaption>Github Pages 404&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="hugo-publishdir">Hugo PublishDir&lt;/h3>
&lt;p>回到我们的本地操作环境，是不是感觉少了点什么？是的，还记得我们一开始提到 Github Pages 的渲染首页么？&lt;code>index.html&lt;/code>去哪里了？既然不在首页，那也应该在&lt;code>./docs&lt;/code> 里呀（若不指定&lt;code>config.toml&lt;/code>中的变量&lt;code>publishDir&lt;/code>,则默认为&lt;code>./public&lt;/code>）&lt;/p>
&lt;p>是的，到此为止我们仅仅是创建了hugo的项目目录，但仍未进行hugo项目的初始化（首次构建）。&lt;/p>
&lt;p>执行如下命令编译你的Hugo：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ hugo
Start building sites …
hugo v0.88.1-5BC54738+extended windows/amd64 &lt;span class="nv">BuildDate&lt;/span>&lt;span class="o">=&lt;/span>2021-09-04T09:39:19Z &lt;span class="nv">VendorInfo&lt;/span>&lt;span class="o">=&lt;/span>gohugoio
WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;home&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;taxonomy&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
WARN 2021/09/20 02:29:00 found no layout file &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;HTML&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> kind &lt;span class="s2">&amp;#34;taxonomy&amp;#34;&lt;/span>: You should create a template file which matches Hugo Layouts Lookup Rules &lt;span class="k">for&lt;/span> this combination.
&lt;span class="p">|&lt;/span> EN
-------------------+-----
Pages &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
Paginator pages &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Non-page files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Static files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Processed images &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Aliases &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Sitemaps &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span>
Cleaned &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Total in &lt;span class="m">57&lt;/span> ms
&lt;/code>&lt;/pre>&lt;/div>&lt;p>打印目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ ls
archetypes/ content/ docs/ resources/ themes/
config.toml data/ layouts/ static/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这不来了嘛，&lt;code>./docs&lt;/code>目录出现了，我们打印一下这个此目录的内容看看。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ ls ./docs
categories/ index.xml sitemap.xml tags/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>咦，怎么只有&lt;code>index.xml&lt;/code>，后缀不太对，不要着急，我们还没有配置任何Hugo主题。&lt;/p>
&lt;p>我们尝试将更改推送至远程仓库，看看情况对不对。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ git add .
&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ git commit -m &lt;span class="s2">&amp;#34;hugo init&amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span>main 7301327&lt;span class="o">]&lt;/span> hugo init
&lt;span class="m">4&lt;/span> files changed, &lt;span class="m">41&lt;/span> insertions&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>
create mode &lt;span class="m">100644&lt;/span> docs/categories/index.xml
create mode &lt;span class="m">100644&lt;/span> docs/index.xml
create mode &lt;span class="m">100644&lt;/span> docs/sitemap.xml
create mode &lt;span class="m">100644&lt;/span> docs/tags/index.xml
&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ git push -u origin main
Enumerating objects: 10, &lt;span class="k">done&lt;/span>.
Counting objects: 100% &lt;span class="o">(&lt;/span>10/10&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
Delta compression using up to &lt;span class="m">16&lt;/span> threads
Compressing objects: 100% &lt;span class="o">(&lt;/span>7/7&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
Writing objects: 100% &lt;span class="o">(&lt;/span>9/9&lt;span class="o">)&lt;/span>, 1.12 KiB &lt;span class="p">|&lt;/span> 381.00 KiB/s, &lt;span class="k">done&lt;/span>.
Total &lt;span class="m">9&lt;/span> &lt;span class="o">(&lt;/span>delta 2&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">0&lt;/span>
remote: Resolving deltas: 100% &lt;span class="o">(&lt;/span>2/2&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
remote: This repository moved. Please use the new location:
remote: https://github.com/QIN2DIM/hello-hugo.git
To https://github.com/qin2dim/hello-hugo.git
b233f02..7301327 main -&amp;gt; main
Branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> &lt;span class="nb">set&lt;/span> up to track remote branch &lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span> from &lt;span class="s1">&amp;#39;origin&amp;#39;&lt;/span>.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>访问你的项目仓库，发现高贵的&lt;code>./docs&lt;/code>文件出现了！&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 350;
flex-basis: 842px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920023448448.png" data-size="2063x588">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920023448448.png"
width="2063"
height="588"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920023448448_huc92538f6d9744f936093acf9d109a515_111998_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920023448448_huc92538f6d9744f936093acf9d109a515_111998_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20210920023448448">
&lt;/a>
&lt;figcaption>image-20210920023448448&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>访问你的站点网址&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，你会发现这里不再404，渲染出来的是XML文档信息。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 374;
flex-basis: 899px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920023604807.png" data-size="1353x361">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920023604807.png"
width="1353"
height="361"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920023604807_huf40ff1284a76b277aba37277a86ba617_73690_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920023604807_huf40ff1284a76b277aba37277a86ba617_73690_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20210920023604807">
&lt;/a>
&lt;figcaption>image-20210920023604807&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>至此，你的 &lt;code>Hugo + Github Pages&lt;/code> 技术栈已经构建完毕，接下来我们要为站点配置主题，也是注入灵魂的部分。本篇博客选用的演示主题为&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a>。&lt;/p>
&lt;h2 id="match-theme">Match theme&lt;/h2>
&lt;p>此阶段以 &lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a> 为demo说明如何将站点可视模块渲染出来，也是整个构建过程最关键的步骤之一。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>拉取主题文件&lt;/strong>&lt;/p>
&lt;p>为了方便使用Git来管理Hugo站点的源文件，我们需要将主题添加为 Submodule：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行日志如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
Cloning into &lt;span class="s1">&amp;#39;E:/_GithubProjects/myProfile/hello-hugo/themes/hugo-theme-stack&amp;#39;&lt;/span>...
remote: Enumerating objects: 3085, &lt;span class="k">done&lt;/span>.
remote: Counting objects: 100% &lt;span class="o">(&lt;/span>1000/1000&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
remote: Compressing objects: 100% &lt;span class="o">(&lt;/span>405/405&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
remote: Total &lt;span class="m">3085&lt;/span> &lt;span class="o">(&lt;/span>delta 782&lt;span class="o">)&lt;/span>, reused &lt;span class="m">667&lt;/span> &lt;span class="o">(&lt;/span>delta 587&lt;span class="o">)&lt;/span>, pack-reused &lt;span class="m">2085&lt;/span>
Receiving objects: 100% &lt;span class="o">(&lt;/span>3085/3085&lt;span class="o">)&lt;/span>, 836.78 KiB &lt;span class="p">|&lt;/span> 3.17 MiB/s, &lt;span class="k">done&lt;/span>.
Resolving deltas: 100% &lt;span class="o">(&lt;/span>1944/1944&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果是第一次使用本主题，建议把 &lt;code>exampleSite&lt;/code> 文件夹中的 &lt;code>config.yaml&lt;/code> 和主题目录下的 &lt;code>assets&lt;/code> 复制到站点目录下。前者是 Hugo 站点的配置文件，已经写入了主题的可配置字段。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">cp ./themes/hugo-theme-stack/exampleSite/config.yaml ./config.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">cp -a ./themes/hugo-theme-stack/assets ./assets
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>注意&lt;/strong>：当前版本中，Stack使用&lt;code>.yaml&lt;/code>配置文件，为了预防不必要的冲突，我们选择将构建 Hugo 时初始化的&lt;code>config.toml&lt;/code>移除。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">rm ./config.toml
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>配置主题&lt;/strong>&lt;/p>
&lt;p>以你喜欢的方式打开位于站点根目录下的&lt;code>config.yaml&lt;/code>文件，该文件用于配置Stack主题站点的各项参数。详细参数的解释请参考 &lt;a class="link" href="https://docs.stack.jimmycai.com/zh/getting-started.html" target="_blank" rel="noopener"
>Hugo/theme:Stack&lt;/a> ，此处仅介绍关键配置。&lt;/p>
&lt;p>如上文介绍的那样，这里至少要配置两个参数，既&lt;code>baseURL&lt;/code>以及&lt;code>publishDir&lt;/code>。安如下提示所示，修改变量&lt;code>baseURL&lt;/code>并添加变量&lt;code>publishDir&lt;/code>声明。修改完毕记得保存。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">baseurl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://yourname.github.io/hello-hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">publishDir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此处同样需要注意替换&lt;code>yourname&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>注入魔法&lt;/strong>&lt;/p>
&lt;p>执行&lt;code>hugo&lt;/code>更新编译状态，然后将更新信息推送至远程仓库，然后访问你的项目仓库，查看推送结果。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ hugo
&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ git add .
&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ git commit -m &lt;span class="s2">&amp;#34;introduce hugo-theme-stack&amp;#34;&lt;/span>
&lt;span class="c1"># yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo (main)&lt;/span>
$ git push -u origin main
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 229;
flex-basis: 550px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920032205977.png" data-size="2048x893">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920032205977.png"
width="2048"
height="893"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920032205977_hu4935d34d8b4e15fd2d5ddcd18dcfde57_177528_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920032205977_hu4935d34d8b4e15fd2d5ddcd18dcfde57_177528_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bingo Ace-Agent">
&lt;/a>
&lt;figcaption>Bingo Ace-Agent&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;p>访问&lt;code>https://yourname.github.io/hello-hugo&lt;/code>，查看您部署的站点。您也可以预览作者按照如上步骤快速搭建的&lt;a class="link" href="https://qin2dim.github.io/hello-hugo" target="_blank" rel="noopener"
>Demo Site&lt;/a>。&lt;/p>
&lt;p>可能会有的小伙伴觉得本篇博客的搭建过程比较啰嗦，目前此技术栈的构建已有成熟的解决方案几乎能在任何操作系统上实现&lt;code>hugo + github pages&lt;/code>自动化部署。其实嘛- -作者认为“教程”是分享给其他人看的，需要拆分工作流，这样能让读者明确自己所在的位置，出了问题容易定位；若使用“一键脚本”，新手读者很难明晰其中的原理，很可能于后续的站点维护更新中举步维艰。&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>本篇博客详细阐述了如何在 Windows 平台上通过简单指令凭借&lt;code>Hugo + Github Pages&lt;/code>技术栈快速搭建个人站点，并提供了Demo Site。作者后续会更新更多关于此技术栈的其他内容，帮助您美化，管理、升级个人站点。&lt;/p>
&lt;hr>
&lt;p>如下为示例站点的目录结构，作者将以Blog写作为例总结此技术栈的实现流程，请注意，如下所有指令操作若无特殊说明，均默认在 hello-hugo 目录下执行。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2">hello-hugo
&lt;/span>&lt;span class="s2"> ├── archetypes
&lt;/span>&lt;span class="s2"> ├── assets
&lt;/span>&lt;span class="s2"> ├── config.yaml
&lt;/span>&lt;span class="s2"> ├── content
&lt;/span>&lt;span class="s2"> ├── data
&lt;/span>&lt;span class="s2"> ├── docs
&lt;/span>&lt;span class="s2"> ├── layouts
&lt;/span>&lt;span class="s2"> ├── resources
&lt;/span>&lt;span class="s2"> ├── static
&lt;/span>&lt;span class="s2"> └── themes
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>关于站点根目录下各个文件夹(work field)的详细介绍请阅读官方文档&lt;a class="link" href="https://gohugo.io/getting-started/directory-structure/" target="_blank" rel="noopener"
>Directory Structure | Hugo (gohugo.io)&lt;/a>，此处仅在介绍工作流时涉及几个关键的文件夹。&lt;/p>
&lt;p>关于此技术栈的工作流总结如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>创建Blog&lt;/strong>&lt;/p>
&lt;p>在站点根目录&lt;code>hello-hugo&lt;/code>下新建&amp;quot;blog&amp;quot;，如&lt;code>hugo new post/blog.md&lt;/code>，默认创建在&lt;code>~/content/post/blog.md&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">hugo new post/blog.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开这个 Markdown文件，可以看见头部声名中&lt;code>draft: true&lt;/code>默认为草稿模式（不同主题规则不同），需要置&lt;code>draft: false&lt;/code>，该篇内容才会被渲染出来，否则会被过滤。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 358;
flex-basis: 860px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920041943845.png" data-size="473x132">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920041943845.png"
width="473"
height="132"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920041943845_huf76ddedfe236afcd9bb66aa0b6357368_9675_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920041943845_huf76ddedfe236afcd9bb66aa0b6357368_9675_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="草稿模式">
&lt;/a>
&lt;figcaption>草稿模式&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>启动本地&lt;code>hugo&lt;/code>服务器&lt;/strong>&lt;/p>
&lt;p>在站点根目录&lt;code>hello-hugo&lt;/code>下创建本地服务器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">hugo server
&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动后根据打印日志查看入口，如&lt;code>http://localhost:8745/hello-hugo/ &lt;/code>，端口号不一定与此相同，默认是1313，若有冲突则会随机更换。&lt;/p>
&lt;p>这里的文档都是热加载编译，我们对项目文件的更改将直接同步到本地服务上，如&lt;strong>Blog的书写&lt;/strong>，&lt;strong>配置文件的改动&lt;/strong>以及&lt;strong>目录文件的调整&lt;/strong>等等。于是，我们编写的内容可以实时提现在站点上，方便修改调试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>缓存更新&lt;/strong>&lt;/p>
&lt;p>当你的工作结束后，停止&lt;code>local hugo-server&lt;/code>进程。你的工作进度会被自动编译到&lt;code>publishDir&lt;/code>变量指向的文件夹中（如本例的&lt;code>./docs&lt;/code>）。当然你也可以在工作结束后手动更新缓存。也即你的每一个对 hugo 的更改，如果你想体现在Github Pages 中,一定不要忘了在 Push 之前更新一下缓存。&lt;/p>
&lt;p>后续文章中，作者将介绍如何使用&lt;code>Github Actions&lt;/code>在你 Push 后自动化更新&lt;code>publishDir&lt;/code>下的文件，无需繁再 Push 前手动更新缓存，进一步偷懒。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">yaoqinse@LAPTOP-29FRT6FJ MINGW64 /e/_GithubProjects/myProfile/hello-hugo &lt;span class="o">(&lt;/span>main&lt;span class="o">)&lt;/span>
$ hugo
Start building sites …
hugo v0.88.1-5BC54738+extended windows/amd64 &lt;span class="nv">BuildDate&lt;/span>&lt;span class="o">=&lt;/span>2021-09-04T09:39:19Z &lt;span class="nv">VendorInfo&lt;/span>&lt;span class="o">=&lt;/span>gohugoio
WARN 2021/09/20 04:04:53 Search page not found. Create a page with layout: search.
WARN 2021/09/20 04:04:53 Archives page not found. Create a page with layout: archives.
&lt;span class="p">|&lt;/span> EN
-------------------+-----
Pages &lt;span class="p">|&lt;/span> &lt;span class="m">7&lt;/span>
Paginator pages &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Non-page files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Static files &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Processed images &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
Aliases &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span>
Sitemaps &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span>
Cleaned &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span>
Total in &lt;span class="m">183&lt;/span> ms
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>资源推送&lt;/strong>&lt;/p>
&lt;p>这里推荐使用 &lt;a class="link" href="https://desktop.github.com/" target="_blank" rel="noopener"
>Github Desktop&lt;/a> 推送仓库更新。自动扫描变更，一件推送，相比于每次更新都要手敲git代码方便很多。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 208;
flex-basis: 499px"
>
&lt;a href="https://qin2dim.github.io/p/hello-hugo/image-20210920040811507.png" data-size="2101x1009">
&lt;img src="https://qin2dim.github.io/p/hello-hugo/image-20210920040811507.png"
width="2101"
height="1009"
srcset="https://qin2dim.github.io/p/hello-hugo/image-20210920040811507_hu0511d169e31c7bfedfa24dd053c8f944_138470_480x0_resize_box_3.png 480w, https://qin2dim.github.io/p/hello-hugo/image-20210920040811507_hu0511d169e31c7bfedfa24dd053c8f944_138470_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Desktop 推送资源">
&lt;/a>
&lt;figcaption>Github Desktop 推送资源&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>若您缺少可靠的解决方案,那只能老实敲代码了:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">git add .
git commit -m &lt;span class="s2">&amp;#34;description of this change&amp;#34;&lt;/span>
git push -u origin main
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>查看更新&lt;/strong>&lt;/p>
&lt;p>访问站点，查看推送结果。Github Pages 集成需要一点时间，如果你没能在推送后立即看到“改变”也不要慌，稍微等一会刷新一下既可。&lt;/p>
&lt;p>同样，若你在本地调改动资源并 auto-rebuild 后，体现在站点上的内容并没有立即改变，可以先&lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>C&lt;/kbd>停止进程，r然后执行下面的命令回收垃圾，并重新部署既可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">hugo --gc &lt;span class="c1"># 垃圾回收&lt;/span>
hugo server &lt;span class="c1"># 重新启动本地服务&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>The world’s fastest framework for building websites | Hugo (gohugo.io)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.stack.jimmycai.com/zh/" target="_blank" rel="noopener"
>介绍 | Hugo 主题 Stack (jimmycai.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>